/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  StinstaToken,
  StinstaTokenInterface,
} from "../../../../../contracts/strategy/instadapp/instadappLite.sol/StinstaToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mstEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mstEthAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mstEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stinstaAmount",
        type: "uint256",
      },
    ],
    name: "viewStinstaTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mstValue",
        type: "uint256",
      },
    ],
    name: "viewStinstaTokensValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stinstaAmount",
        type: "uint256",
      },
    ],
    name: "withdrawStinstaTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001457380380620014578339810160408190526200003491620001f0565b81848460036200004583826200030e565b5060046200005482826200030e565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009181620000bc565b50600680546001600160a01b0319166001600160a01b039290921691909117905550620003da915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b600093810190920192909252949350505050565b80516001600160a01b0381168114620001eb57600080fd5b919050565b600080600080608085870312156200020757600080fd5b84516001600160401b03808211156200021f57600080fd5b6200022d8883890162000124565b955060208701519150808211156200024457600080fd5b50620002538782880162000124565b9350506200026460408601620001d3565b91506200027460608601620001d3565b905092959194509250565b600181811c908216806200029457607f821691505b602082108103620002b557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030957600081815260208120601f850160051c81016020861015620002e45750805b601f850160051c820191505b818110156200030557828155600101620002f0565b5050505b505050565b81516001600160401b038111156200032a576200032a6200010e565b62000342816200033b84546200027f565b84620002bb565b602080601f8311600181146200037a5760008415620003615750858301515b600019600386901b1c1916600185901b17855562000305565b600085815260208120601f198616915b82811015620003ab578886015182559484019460019091019084016200038a565b5085821015620003ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61106d80620003ea6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806395d89b41116100a2578063dd62ed3e11610071578063dd62ed3e14610240578063eb24318d14610279578063f2fde38b1461028c578063f48d03bb1461029f578063fc7e286d146102b257600080fd5b806395d89b41146101ff578063a9059cbb14610207578063b2648dd11461021a578063b6b55f251461022d57600080fd5b80632f221601116100e95780632f22160114610181578063313ce567146101ac57806370a08231146101bb578063715018a6146101e45780638da5cb5b146101ee57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102d2565b6040516101309190610dc5565b60405180910390f35b61014c610147366004610df4565b610364565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610e1e565b61037e565b600654610194906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b60405160128152602001610130565b6101606101c9366004610e5a565b6001600160a01b031660009081526020819052604090205490565b6101ec6103a2565b005b6005546001600160a01b0316610194565b6101236103b6565b61014c610215366004610df4565b6103c5565b610160610228366004610e75565b6103d3565b6101ec61023b366004610e75565b6104ab565b61016061024e366004610e8e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610160610287366004610e75565b6106b1565b6101ec61029a366004610e5a565b6107f2565b6101606102ad366004610e75565b610830565b6101606102c0366004610e5a565b60076020526000908152604090205481565b6060600380546102e190610ec1565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90610ec1565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b6000336103728185856108f5565b60019150505b92915050565b60003361038c858285610907565b610397858585610985565b506001949350505050565b6103aa6109e4565b6103b46000610a11565b565b6060600480546102e190610ec1565b600033610372818585610985565b336000908152602081905260408120546104199083903360405180604001604052806011815260200170766965775374696e737461546f6b656e7360781b815250610a63565b600061042460025490565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610efb565b61049a9085610f2a565b6104a49190610f41565b9392505050565b6000811161050e5760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084015b60405180910390fd5b6006546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610efb565b33600090815260076020526040902054610595908390610f63565b11156105e35760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206d73744574682062616c616e636500000000006044820152606401610505565b6006546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e9190610f76565b6106a25760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610505565b806106ad3382610aac565b5050565b336000908152602081905260408120548211156106e05760405162461bcd60e51b815260040161050590610f98565b6106ea3383610ae2565b60006106f560025490565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190610efb565b61076b9085610f2a565b6107759190610f41565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb9190610f76565b5092915050565b6107fa6109e4565b6001600160a01b03811661082457604051631e4fbdf760e01b815260006004820152602401610505565b61082d81610a11565b50565b3360009081526020819052604081205482111561085f5760405162461bcd60e51b815260040161050590610f98565b61088060405180606001604052806026815260200161101260269139610b18565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190610efb565b600254610490565b6109028383836001610b5b565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461097f578181101561097057604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610505565b61097f84848484036000610b5b565b50505050565b6001600160a01b0383166109af57604051634b637e8f60e11b815260006004820152602401610505565b6001600160a01b0382166109d95760405163ec442f0560e01b815260006004820152602401610505565b610902838383610c30565b6005546001600160a01b031633146103b45760405163118cdaa760e01b8152336004820152602401610505565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61097f84848484604051602401610a7d9493929190610fda565b60408051601f198184030181529190526020810180516001600160e01b0316630d9bc81760e31b179052610d5a565b6001600160a01b038216610ad65760405163ec442f0560e01b815260006004820152602401610505565b6106ad60008383610c30565b6001600160a01b038216610b0c57604051634b637e8f60e11b815260006004820152602401610505565b6106ad82600083610c30565b61082d81604051602401610b2c9190610dc5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610d5a565b6001600160a01b038416610b855760405163e602df0560e01b815260006004820152602401610505565b6001600160a01b038316610baf57604051634a1406b160e11b815260006004820152602401610505565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561097f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c2291815260200190565b60405180910390a350505050565b6001600160a01b038316610c5b578060026000828254610c509190610f63565b90915550610ccd9050565b6001600160a01b03831660009081526020819052604090205481811015610cae5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610505565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ce957600280548290039055610d08565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d4d91815260200190565b60405180910390a3505050565b61082d8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000815180845260005b81811015610da557602081850181015186830182015201610d89565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104a46020830184610d7f565b80356001600160a01b0381168114610def57600080fd5b919050565b60008060408385031215610e0757600080fd5b610e1083610dd8565b946020939093013593505050565b600080600060608486031215610e3357600080fd5b610e3c84610dd8565b9250610e4a60208501610dd8565b9150604084013590509250925092565b600060208284031215610e6c57600080fd5b6104a482610dd8565b600060208284031215610e8757600080fd5b5035919050565b60008060408385031215610ea157600080fd5b610eaa83610dd8565b9150610eb860208401610dd8565b90509250929050565b600181811c90821680610ed557607f821691505b602082108103610ef557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610f0d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761037857610378610f14565b600082610f5e57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561037857610378610f14565b600060208284031215610f8857600080fd5b815180151581146104a457600080fd5b60208082526022908201527f496e73756666696369656e74205374696e73746120746f6b656e2062616c616e604082015261636560f01b606082015260800190565b84815283602082015260018060a01b03831660408201526080606082015260006110076080830184610d7f565b969550505050505056fe2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da264697066735822122029c59bc28c9e5b0b249208958ec809276fd6d1cd7df6111d5b4ea03f0db4954b64736f6c63430008120033";

type StinstaTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StinstaTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StinstaToken__factory extends ContractFactory {
  constructor(...args: StinstaTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    owner: AddressLike,
    _mstEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      owner,
      _mstEth,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    owner: AddressLike,
    _mstEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      owner,
      _mstEth,
      overrides || {}
    ) as Promise<
      StinstaToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StinstaToken__factory {
    return super.connect(runner) as StinstaToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StinstaTokenInterface {
    return new Interface(_abi) as StinstaTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StinstaToken {
    return new Contract(address, _abi, runner) as unknown as StinstaToken;
  }
}
