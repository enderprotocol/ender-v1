/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Lybra,
  LybraInterface,
} from "../../../../contracts/strategy/lybraFinance/Lybra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "apy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "depositAssetToMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userData",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052610fa060025534801561001657600080fd5b50604051610a89380380610a8983398181016040528101906100389190610119565b61005267332af993461abdf460c01b6100b360201b60201c565b61006c67eb530597c7771ee460c01b6100b360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610146565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e6826100bb565b9050919050565b6100f6816100db565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b60006020828403121561012f5761012e6100b6565b5b600061013d84828501610104565b91505092915050565b610934806101556000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633bcfc4b81461005c5780633ccfd60b1461007a57806399940ece14610084578063c55585af146100a2578063c8910913146100be575b600080fd5b6100646100ef565b60405161007191906105ca565b60405180910390f35b6100826100f5565b005b61008c610403565b6040516100999190610626565b60405180910390f35b6100bc60048036038101906100b7919061069e565b610429565b005b6100d860048036038101906100d391906106de565b61058a565b6040516100e692919061070b565b60405180910390f35b60025481565b61010967c4a8bb302544140960c01b6105ae565b61011d675f86a5feda9a323260c01b6105ae565b610131675e0666ba30f39eeb60c01b6105ae565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506101a6676fbd29cd2f9284e660c01b6105ae565b6101ba678d6a7d2a604ceffe60c01b6105ae565b60006502de413530008260200151426101d39190610763565b83600001516002546101e59190610797565b6101ef9190610797565b6101f99190610808565b905061020f67197d7a574bc70e7b60c01b6105ae565b60405180604001604052806000815260200160008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505061028f672005374955ef67e460c01b6105ae565b6102a3674df89f3ce3f3d29960c01b6105ae565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3384600001516040518363ffffffff1660e01b8152600401610304929190610839565b6020604051808303816000875af1158015610323573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610347919061089a565b5061035c67b7ecb202f54e2ce060c01b6105ae565b61037067067f8137ebd3266460c01b6105ae565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103cd929190610839565b600060405180830381600087803b1580156103e757600080fd5b505af11580156103fb573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61043d67516de6a9bf722daf60c01b6105ae565b6104516775cd5e37e748fce160c01b6105ae565b61046567dd0b6f083586826b60c01b6105ae565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b81526004016104c4939291906108c7565b6020604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610507919061089a565b5061051c679b4bf835100c7b6e60c01b6105ae565b6040518060400160405280838152602001428152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b60006020528060005260406000206000915090508060000154908060010154905082565b50565b6000819050919050565b6105c4816105b1565b82525050565b60006020820190506105df60008301846105bb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610610826105e5565b9050919050565b61062081610605565b82525050565b600060208201905061063b6000830184610617565b92915050565b600080fd5b61064f816105b1565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b61067b81610605565b811461068657600080fd5b50565b60008135905061069881610672565b92915050565b600080604083850312156106b5576106b4610641565b5b60006106c38582860161065d565b92505060206106d485828601610689565b9150509250929050565b6000602082840312156106f4576106f3610641565b5b600061070284828501610689565b91505092915050565b600060408201905061072060008301856105bb565b61072d60208301846105bb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076e826105b1565b9150610779836105b1565b925082820390508181111561079157610790610734565b5b92915050565b60006107a2826105b1565b91506107ad836105b1565b92508282026107bb816105b1565b915082820484148315176107d2576107d1610734565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610813826105b1565b915061081e836105b1565b92508261082e5761082d6107d9565b5b828204905092915050565b600060408201905061084e6000830185610617565b61085b60208301846105bb565b9392505050565b60008115159050919050565b61087781610862565b811461088257600080fd5b50565b6000815190506108948161086e565b92915050565b6000602082840312156108b0576108af610641565b5b60006108be84828501610885565b91505092915050565b60006060820190506108dc6000830186610617565b6108e96020830185610617565b6108f660408301846105bb565b94935050505056fea2646970667358221220a8c40eada6c8ea3a30addd71c4ef030d5a6479bb05749e8580a1fc629484df2064736f6c63430008120033";

type LybraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LybraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lybra__factory extends ContractFactory {
  constructor(...args: LybraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stEth, overrides || {});
  }
  override deploy(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stEth, overrides || {}) as Promise<
      Lybra & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lybra__factory {
    return super.connect(runner) as Lybra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LybraInterface {
    return new Interface(_abi) as LybraInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lybra {
    return new Contract(address, _abi, runner) as unknown as Lybra;
  }
}
