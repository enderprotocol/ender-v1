/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Lybra,
  LybraInterface,
} from "../../../../contracts/strategy/lybraFinance/Lybra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "apy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "depositAssetToMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userData",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052610fa060025534801561001657600080fd5b50604051610a88380380610a8883398181016040528101906100389190610119565b610052673484212370e8926460c01b6100b360201b60201c565b61006c675f3f024fdf0759bc60c01b6100b360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610146565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e6826100bb565b9050919050565b6100f6816100db565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b60006020828403121561012f5761012e6100b6565b5b600061013d84828501610104565b91505092915050565b610933806101556000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633bcfc4b81461005c5780633ccfd60b1461007a57806399940ece14610084578063c55585af146100a2578063c8910913146100be575b600080fd5b6100646100ef565b60405161007191906105c9565b60405180910390f35b6100826100f5565b005b61008c610402565b6040516100999190610625565b60405180910390f35b6100bc60048036038101906100b7919061069d565b610428565b005b6100d860048036038101906100d391906106dd565b610589565b6040516100e692919061070a565b60405180910390f35b60025481565b61010967a37067f9a207f5a560c01b6105ad565b61011d677677b57d2ee891dd60c01b6105ad565b6101316747b651521f869d4560c01b6105ad565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506101a667289c4a31ce06c67160c01b6105ad565b6101ba67a7883f36e805c77160c01b6105ad565b60006502de413530008260200151426101d39190610762565b83600001516002546101e59190610796565b6101ef9190610796565b6101f99190610807565b905061020f677970021d96d0e87960c01b6105ad565b60405180604001604052806000815260200160008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505061028f67aa2919ea11b4c87e60c01b6105ad565b6102a367a9a412030dfa088060c01b6105ad565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3384600001516040518363ffffffff1660e01b8152600401610304929190610838565b6020604051808303816000875af1158015610323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103479190610899565b5061035b66d6e2ca1ece18a360c01b6105ad565b61036f67bb8f13998e9b9b8c60c01b6105ad565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103cc929190610838565b600060405180830381600087803b1580156103e657600080fd5b505af11580156103fa573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61043c676fe89af47fbcf8af60c01b6105ad565b6104506794ee4fc0673e125160c01b6105ad565b61046467b672ca86d4bbaa6c60c01b6105ad565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b81526004016104c3939291906108c6565b6020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190610899565b5061051b679e23ecd739d2aeff60c01b6105ad565b6040518060400160405280838152602001428152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b60006020528060005260406000206000915090508060000154908060010154905082565b50565b6000819050919050565b6105c3816105b0565b82525050565b60006020820190506105de60008301846105ba565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061060f826105e4565b9050919050565b61061f81610604565b82525050565b600060208201905061063a6000830184610616565b92915050565b600080fd5b61064e816105b0565b811461065957600080fd5b50565b60008135905061066b81610645565b92915050565b61067a81610604565b811461068557600080fd5b50565b60008135905061069781610671565b92915050565b600080604083850312156106b4576106b3610640565b5b60006106c28582860161065c565b92505060206106d385828601610688565b9150509250929050565b6000602082840312156106f3576106f2610640565b5b600061070184828501610688565b91505092915050565b600060408201905061071f60008301856105ba565b61072c60208301846105ba565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076d826105b0565b9150610778836105b0565b92508282039050818111156107905761078f610733565b5b92915050565b60006107a1826105b0565b91506107ac836105b0565b92508282026107ba816105b0565b915082820484148315176107d1576107d0610733565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610812826105b0565b915061081d836105b0565b92508261082d5761082c6107d8565b5b828204905092915050565b600060408201905061084d6000830185610616565b61085a60208301846105ba565b9392505050565b60008115159050919050565b61087681610861565b811461088157600080fd5b50565b6000815190506108938161086d565b92915050565b6000602082840312156108af576108ae610640565b5b60006108bd84828501610884565b91505092915050565b60006060820190506108db6000830186610616565b6108e86020830185610616565b6108f560408301846105ba565b94935050505056fea2646970667358221220cbe29b4baf8df9e25e5659fcf42e1b2f98c704c34b99599836b9eaa175f94f1664736f6c63430008120033";

type LybraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LybraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lybra__factory extends ContractFactory {
  constructor(...args: LybraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stEth, overrides || {});
  }
  override deploy(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stEth, overrides || {}) as Promise<
      Lybra & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lybra__factory {
    return super.connect(runner) as Lybra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LybraInterface {
    return new Interface(_abi) as LybraInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lybra {
    return new Contract(address, _abi, runner) as unknown as Lybra;
  }
}
