/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Lybra,
  LybraInterface,
} from "../../../../contracts/strategy/lybraFinance/Lybra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "apy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "depositAssetToMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userData",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052610fa0600255348015610015575f80fd5b506040516104bd3803806104bd83398101604081905261003491610059565b600180546001600160a01b0319166001600160a01b0392909216919091179055610086565b5f60208284031215610069575f80fd5b81516001600160a01b038116811461007f575f80fd5b9392505050565b61042a806100935f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633bcfc4b8146100595780633ccfd60b1461007557806399940ece1461007f578063c55585af146100aa578063c8910913146100bd575b5f80fd5b61006260025481565b6040519081526020015b60405180910390f35b61007d6100f8565b005b600154610092906001600160a01b031681565b6040516001600160a01b03909116815260200161006c565b61007d6100b8366004610328565b61025b565b6100e36100cb366004610352565b5f602081905290815260409020805460019091015482565b6040805192835260208301919091520161006c565b335f908152602081815260408083208151808301909252805482526001015491810182905291906502de41353000906101319042610386565b8351600254610140919061039f565b61014a919061039f565b61015491906103b6565b6040805180820182525f808252602080830182815233808452918390529184902092518355905160019283015590548551925163a9059cbb60e01b8152600481019290925260248201929092529192506001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156101d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f791906103d5565b506001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015f604051808303815f87803b158015610241575f80fd5b505af1158015610253573d5f803e3d5ffd5b505050505050565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303815f875af11580156102b1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102d591906103d5565b506040805180820182529283524260208085019182526001600160a01b039093165f9081529283905291209151825551600190910155565b80356001600160a01b0381168114610323575f80fd5b919050565b5f8060408385031215610339575f80fd5b823591506103496020840161030d565b90509250929050565b5f60208284031215610362575f80fd5b61036b8261030d565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561039957610399610372565b92915050565b808202811582820484141761039957610399610372565b5f826103d057634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156103e5575f80fd5b8151801515811461036b575f80fdfea2646970667358221220f8a517fe773b8cf86bb4856327f52a085048c43eaa07a9ab1121f96e3f112f2e64736f6c63430008140033";

type LybraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LybraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lybra__factory extends ContractFactory {
  constructor(...args: LybraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stEth, overrides || {});
  }
  override deploy(
    _stEth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stEth, overrides || {}) as Promise<
      Lybra & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lybra__factory {
    return super.connect(runner) as Lybra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LybraInterface {
    return new Interface(_abi) as LybraInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lybra {
    return new Contract(address, _abi, runner) as unknown as Lybra;
  }
}
