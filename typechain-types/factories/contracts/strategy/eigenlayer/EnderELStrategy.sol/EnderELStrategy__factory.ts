/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  EnderELStrategy,
  EnderELStrategyInterface,
} from "../../../../../contracts/strategy/eigenlayer/EnderELStrategy.sol/EnderELStrategy";

const _abi = [
  {
    inputs: [],
    name: "AlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTreasury",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "addrType",
        type: "uint8",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmt",
        type: "uint256",
      },
    ],
    name: "checkDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "depositable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getQueueBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "setAddressBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_str",
        type: "address",
      },
    ],
    name: "setTokenStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613147806100206000396000f3fe6080604052600436106100ec5760003560e01c806373bc9dcf1161008a578063a8c62e7611610059578063a8c62e7614610301578063c3b8a7781461032c578063ec07537a14610355578063f2fde38b1461037e576100f3565b806373bc9dcf146102435780638da5cb5b1461026e578063985fdc8c14610299578063a59a9db8146102d6576100f3565b80635dee92a6116100c65780635dee92a61461019b57806361d027b3146101c45780636fd36276146101ef578063715018a61461022c576100f3565b80630f198b30146100f8578063485cc955146101355780634b8f17ec1461015e576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061245a565b6103a7565b60405161012c9190612496565b60405180910390f35b34801561014157600080fd5b5061015c600480360381019061015791906124b1565b6106b0565b005b34801561016a57600080fd5b506101856004803603810190610180919061245a565b6108ba565b6040516101929190612496565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd919061245a565b611321565b005b3480156101d057600080fd5b506101d96118f5565b6040516101e69190612500565b60405180910390f35b3480156101fb57600080fd5b506102166004803603810190610211919061251b565b61191b565b6040516102239190612576565b60405180910390f35b34801561023857600080fd5b50610241611ae2565b005b34801561024f57600080fd5b50610258611af6565b6040516102659190612576565b60405180910390f35b34801561027a57600080fd5b50610283611b3b565b6040516102909190612500565b60405180910390f35b3480156102a557600080fd5b506102c060048036038101906102bb9190612591565b611b65565b6040516102cd91906125dd565b60405180910390f35b3480156102e257600080fd5b506102eb611bfa565b6040516102f89190612657565b60405180910390f35b34801561030d57600080fd5b50610316611c20565b6040516103239190612500565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e9190612697565b611c46565b005b34801561036157600080fd5b5061037c60048036038101906103779190612591565b611ebe565b005b34801561038a57600080fd5b506103a560048036038101906103a09190612591565b612010565b005b60006103bd67a0305e9ad682308260c01b612093565b6103d167183de25faed39e0260c01b612096565b6103e56793ccc5bd835af99160c01b612096565b6103f967de50292b9a585a9e60c01b612096565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104945761046267abfd039395121d0460c01b612096565b6040517fb90cdbb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104a867c9e9f7eb9c3bc62b60c01b612096565b6104bc67a51450578c5e28e960c01b612096565b6104d067d3fc9e0712a5333660c01b612093565b6104e467c0853718eee05d0360c01b612093565b6104f867c98e136d381501c460c01b612093565b61050c67a2cd0a88e6a4e7e260c01b612093565b816020015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604001516040518363ffffffff1660e01b81526004016105719291906126d7565b6020604051808303816000875af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b4919061272c565b506105c9672bffc17258d1b87160c01b612093565b6105dd676f688273dbff5cdd60c01b612093565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7a050aa606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846020015185604001516040518463ffffffff1660e01b81526004016106669392919061277a565b6020604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a991906127c6565b9050919050565b6106c4674bc56560393aeb5060c01b612096565b60008060019054906101000a900460ff161590508080156106f55750600160008054906101000a900460ff1660ff16105b80610722575061070430612099565b1580156107215750600160008054906101000a900460ff1660ff16145b5b610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075890612876565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561079e576001600060016101000a81548160ff0219169083151502179055505b6107b2677a700d55b3ca35ae60c01b612096565b6107c667df171e859c54954760c01b612096565b6107da6724f195b7a8776a1860c01b612096565b6107ee678795e6ab4eed0dd760c01b612096565b6107f66120bc565b61080a67670f8e2b44ccfcf060c01b612096565b61081e67310b58e621ebb32e60c01b612096565b610829826001611c46565b61083d67e0875cd10103184d60c01b612096565b6108516763b89ae58f8a51be60c01b612096565b61085c836000611c46565b80156108b55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516108ac91906128de565b60405180910390a15b505050565b60006108d0678f3ec1b8ab50695b60c01b612093565b6108e467183de25faed39e0260c01b612096565b6108f86793ccc5bd835af99160c01b612096565b61090c67de50292b9a585a9e60c01b612096565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a75761097567abfd039395121d0460c01b612096565b6040517fb90cdbb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bb67c9e9f7eb9c3bc62b60c01b612096565b6109cf67a51450578c5e28e960c01b612096565b6109e3673908cceace74d1a060c01b612093565b6109f76766518c36411df4c560c01b612093565b610a0b67056624080209037560c01b612093565b610a1f67430a968014029a4460c01b612093565b600060696000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1603610ac657610a946734d6170016d71b9860c01b612093565b6040517f0252185c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ada6769d064eee3a9561260c01b612093565b610aee671620815c64c957db60c01b612093565b610b02674ea1c638d1c65e4260c01b612093565b600060405180604001604052803073ffffffffffffffffffffffffffffffffffffffff16815260200160686000866000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff168152509050610bae674bef6ceca9aef7f260c01b612093565b610bc26758640cac8e7e0f6a60c01b612093565b6000600167ffffffffffffffff811115610bdf57610bde6122e7565b5b604051908082528060200260200182016040528015610c0d5781602001602082028036833780820191505090505b509050610c246714b104a33773a29860c01b612093565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600081518110610c5b57610c5a6128f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610ca967086fb3f6872a50c660c01b612093565b610cbd6761b51474779558a760c01b612093565b6000600167ffffffffffffffff811115610cda57610cd96122e7565b5b604051908082528060200260200182016040528015610d085781602001602082028036833780820191505090505b509050610d1f67f67766118859761e60c01b612093565b846040015181600081518110610d3857610d376128f9565b5b602002602001018181525050610d5867db628eaf97cd035b60c01b612093565b610d6c67c572853dd912aaf960c01b612093565b60006040518060c001604052808481526020018381526020013073ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160696000896000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152509050610e3767f623362d5f96aa6c60c01b612093565b610e4b67d76dbdb9535cf85360c01b612093565b6000600167ffffffffffffffff811115610e6857610e676122e7565b5b604051908082528060200260200182016040528015610e965781602001602082028036833780820191505090505b509050610ead670a4a34ef99142db360c01b612093565b866020015181600081518110610ec657610ec56128f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610f1467f4b719f55b09841460c01b612093565b610f28671800cf1b015871c960c01b612093565b6000876020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f679190612500565b602060405180830381865afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa891906127c6565b9050610fbe67c4dd299157a8826f60c01b612093565b610fd2671d639bcd7b2bf62960c01b612093565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3be65d38484600060016040518563ffffffff1660e01b81526004016110359493929190612ca1565b600060405180830381600087803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b5050505061107b67485a0dd532c3730660c01b612093565b61108f67f70155925c2c74cb60c01b612093565b80886020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110cd9190612500565b602060405180830381865afa1580156110ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110e91906127c6565b0390506111256748882550f9f0787f60c01b612093565b60696000896000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549063ffffffff021916905561118f67d4db4cdd1200dd2a60c01b612093565b60686000896000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081819054906101000a90046bffffffffffffffffffffffff1660010191906101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555061123267052bb9d2671f46c660c01b612093565b61124667e356b4d27facc4f160c01b612093565b876020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016112a79291906126d7565b6020604051808303816000875af11580156112c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ea919061272c565b506112ff67310e734a5b3c133f60c01b612093565b61131367f025cc88272c040060c01b612093565b809650505050505050919050565b61133567b9364b2bb116277060c01b612093565b61134967183de25faed39e0260c01b612096565b61135d6793ccc5bd835af99160c01b612096565b61137167de50292b9a585a9e60c01b612096565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461140c576113da67abfd039395121d0460c01b612096565b6040517fb90cdbb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61142067c9e9f7eb9c3bc62b60c01b612096565b61143467a51450578c5e28e960c01b612096565b611448678d4b728be2cee7e960c01b612093565b61145c679c95b8655a92f68660c01b612093565b6114706711cd7d77f8c7635460c01b612093565b611484672224e9b27fd2f74e60c01b612093565b600060696000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161461152b576114f96730e48c8c7f0c74fb60c01b612093565b6040517f5303ed8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61153f6726c780a8c71e08fd60c01b612093565b611553674401a1419873fb4960c01b612093565b6115676737c71deb74d6ca7960c01b612093565b61157b6759ea1765d643eaa660c01b612093565b6000600167ffffffffffffffff811115611598576115976122e7565b5b6040519080825280602002602001820160405280156115c65781602001602082028036833780820191505090505b5090506115dd676eb46c85888d910660c01b612093565b6000816000815181106115f3576115f26128f9565b5b602002602001018181525050611613671b2bec8e607e49df60c01b612093565b611627671670101d1733b16960c01b612093565b6000600167ffffffffffffffff811115611644576116436122e7565b5b6040519080825280602002602001820160405280156116725781602001602082028036833780820191505090505b5090506116896729a48c0bc67e96d960c01b612093565b8260400151816000815181106116a2576116a16128f9565b5b6020026020010181815250506116c267342ccdd989e0f58460c01b612093565b6116d667c9366b262252e9b160c01b612093565b6000600167ffffffffffffffff8111156116f3576116f26122e7565b5b6040519080825280602002602001820160405280156117215781602001602082028036833780820191505090505b50905061173867915d89b3b6770d5e60c01b612093565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160008151811061176f5761176e6128f9565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506117bd67a9444d8d078604b460c01b612093565b6117d1671f5e35453f0dbea060c01b612093565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f123991e8483853060006040518663ffffffff1660e01b8152600401611835959493929190612dc1565b6020604051808303816000875af1158015611854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118789190612e5f565b5061188d6733f9e8e833b7e44260c01b612093565b4360696000866000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611931676055e6e12a19fad660c01b612093565b611945671b90428e3da9750060c01b612093565b611959670cad4454e56cf2cb60c01b612093565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166361b01b5d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ec91906127c6565b9050611a026764e07ea606670e4c60c01b612093565b611a1667af35c2e0404ae09760c01b612093565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401611a739190612500565b602060405180830381865afa158015611a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab491906127c6565b9050611aca67e69c5e7d4fba688f60c01b612093565b818482611ad79190612ebb565b119250505092915050565b611aea612115565b611af46000612193565b565b6000611b0c67c38b300acd59710160c01b612093565b611b206749752775a660e15260c01b612093565b611b34678f7748e7b2c4bc3f60c01b612093565b6001905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611b7b670ed7bc9c1020f4c460c01b612093565b611b8f672b640d373e6417f360c01b612093565b611ba367324a29db9b7bd0ce60c01b612093565b606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff169050919050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611c5a67ab85aac3743f18f760c01b612096565b611c62612115565b611c7667dcfaebf0522c83d860c01b612096565b611c8a675a9f2ff5e9c8ca1760c01b612096565b611c9e67a3564759cf1ad45660c01b612096565b611cb267d5d2b08f76fd56fd60c01b612096565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d2c57611cfa67639fe3c3754ad82160c01b612096565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d4067166331d413bb483f60c01b612096565b611d5467b77196715ce6dcc360c01b612096565b611d6867b6ad8d4353f12caa60c01b612096565b60006001811115611d7c57611d7b612eef565b5b816001811115611d8f57611d8e612eef565b5b03611dee57611da8677ed7ad7f14e3444860c01b612096565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e44565b611e026770d3656d7e65c02760c01b612096565b81606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b611e586734f6df93f918e63960c01b612096565b611e6c67e2019a4dd16290d760c01b612096565b8173ffffffffffffffffffffffffffffffffffffffff167f8fe7ce0635de0c05ead622279bdcf4c4e71d0da07afd43a42c93236b77217ca682604051611eb29190612f66565b60405180910390a25050565b611ed2670d2668019e1194d860c01b612093565b611eda612115565b611eee671f8ad1b9199f624d60c01b612093565b611f026768636a88df4c631a60c01b612093565b611f16679364afb89a81c49760c01b612093565b611f2a6790ce64f1bb3e4eeb60c01b612093565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611fa457611f72678948d7562e2df7d260c01b612093565b6040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fb8679d02184aa879b91360c01b612093565b611fcc67fc8d1163cfcdf90560c01b612093565b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b612018612115565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207e90612ff3565b60405180910390fd5b61209081612193565b50565b50565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661210b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210290613085565b60405180910390fd5b612113612259565b565b61211d6122ba565b73ffffffffffffffffffffffffffffffffffffffff1661213b611b3b565b73ffffffffffffffffffffffffffffffffffffffff1614612191576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612188906130f1565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166122a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229f90613085565b60405180910390fd5b6122b86122b36122ba565b612193565b565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61231f826122d6565b810181811067ffffffffffffffff8211171561233e5761233d6122e7565b5b80604052505050565b60006123516122c2565b905061235d8282612316565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061238d82612362565b9050919050565b61239d81612382565b81146123a857600080fd5b50565b6000813590506123ba81612394565b92915050565b6000819050919050565b6123d3816123c0565b81146123de57600080fd5b50565b6000813590506123f0816123ca565b92915050565b60006060828403121561240c5761240b6122d1565b5b6124166060612347565b90506000612426848285016123ab565b600083015250602061243a848285016123ab565b602083015250604061244e848285016123e1565b60408301525092915050565b6000606082840312156124705761246f6122cc565b5b600061247e848285016123f6565b91505092915050565b612490816123c0565b82525050565b60006020820190506124ab6000830184612487565b92915050565b600080604083850312156124c8576124c76122cc565b5b60006124d6858286016123ab565b92505060206124e7858286016123ab565b9150509250929050565b6124fa81612382565b82525050565b600060208201905061251560008301846124f1565b92915050565b60008060408385031215612532576125316122cc565b5b6000612540858286016123ab565b9250506020612551858286016123e1565b9150509250929050565b60008115159050919050565b6125708161255b565b82525050565b600060208201905061258b6000830184612567565b92915050565b6000602082840312156125a7576125a66122cc565b5b60006125b5848285016123ab565b91505092915050565b600063ffffffff82169050919050565b6125d7816125be565b82525050565b60006020820190506125f260008301846125ce565b92915050565b6000819050919050565b600061261d61261861261384612362565b6125f8565b612362565b9050919050565b600061262f82612602565b9050919050565b600061264182612624565b9050919050565b61265181612636565b82525050565b600060208201905061266c6000830184612648565b92915050565b6002811061267f57600080fd5b50565b60008135905061269181612672565b92915050565b600080604083850312156126ae576126ad6122cc565b5b60006126bc858286016123ab565b92505060206126cd85828601612682565b9150509250929050565b60006040820190506126ec60008301856124f1565b6126f96020830184612487565b9392505050565b6127098161255b565b811461271457600080fd5b50565b60008151905061272681612700565b92915050565b600060208284031215612742576127416122cc565b5b600061275084828501612717565b91505092915050565b600061276482612624565b9050919050565b61277481612759565b82525050565b600060608201905061278f6000830186612648565b61279c602083018561276b565b6127a96040830184612487565b949350505050565b6000815190506127c0816123ca565b92915050565b6000602082840312156127dc576127db6122cc565b5b60006127ea848285016127b1565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612860602e836127f3565b915061286b82612804565b604082019050919050565b6000602082019050818103600083015261288f81612853565b9050919050565b6000819050919050565b600060ff82169050919050565b60006128c86128c36128be84612896565b6125f8565b6128a0565b9050919050565b6128d8816128ad565b82525050565b60006020820190506128f360008301846128cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61295d81612636565b82525050565b600061296f8383612954565b60208301905092915050565b6000602082019050919050565b600061299382612928565b61299d8185612933565b93506129a883612944565b8060005b838110156129d95781516129c08882612963565b97506129cb8361297b565b9250506001810190506129ac565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612a1b816123c0565b82525050565b6000612a2d8383612a12565b60208301905092915050565b6000602082019050919050565b6000612a51826129e6565b612a5b81856129f1565b9350612a6683612a02565b8060005b83811015612a97578151612a7e8882612a21565b9750612a8983612a39565b925050600181019050612a6a565b5085935050505092915050565b612aad81612382565b82525050565b60006bffffffffffffffffffffffff82169050919050565b612ad481612ab3565b82525050565b604082016000820151612af06000850182612aa4565b506020820151612b036020850182612acb565b50505050565b612b12816125be565b82525050565b600060e0830160008301518482036000860152612b358282612988565b91505060208301518482036020860152612b4f8282612a46565b9150506040830151612b646040860182612aa4565b506060830151612b776060860182612ada565b506080830151612b8a60a0860182612b09565b5060a0830151612b9d60c0860182612aa4565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612bdd81612759565b82525050565b6000612bef8383612bd4565b60208301905092915050565b6000602082019050919050565b6000612c1382612ba8565b612c1d8185612bb3565b9350612c2883612bc4565b8060005b83811015612c59578151612c408882612be3565b9750612c4b83612bfb565b925050600181019050612c2c565b5085935050505092915050565b6000819050919050565b6000612c8b612c86612c8184612c66565b6125f8565b6123c0565b9050919050565b612c9b81612c70565b82525050565b60006080820190508181036000830152612cbb8187612b18565b90508181036020830152612ccf8186612c08565b9050612cde6040830185612c92565b612ceb6060830184612567565b95945050505050565b600082825260208201905092915050565b6000612d10826129e6565b612d1a8185612cf4565b9350612d2583612a02565b8060005b83811015612d56578151612d3d8882612a21565b9750612d4883612a39565b925050600181019050612d29565b5085935050505092915050565b6000612d6e82612928565b612d788185612bb3565b9350612d8383612944565b8060005b83811015612db4578151612d9b8882612963565b9750612da68361297b565b925050600181019050612d87565b5085935050505092915050565b600060a0820190508181036000830152612ddb8188612d05565b90508181036020830152612def8187612d63565b90508181036040830152612e038186612d05565b9050612e1260608301856124f1565b612e1f6080830184612567565b9695505050505050565b6000819050919050565b612e3c81612e29565b8114612e4757600080fd5b50565b600081519050612e5981612e33565b92915050565b600060208284031215612e7557612e746122cc565b5b6000612e8384828501612e4a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ec6826123c0565b9150612ed1836123c0565b9250828201905080821115612ee957612ee8612e8c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110612f2f57612f2e612eef565b5b50565b6000819050612f4082612f1e565b919050565b6000612f5082612f32565b9050919050565b612f6081612f45565b82525050565b6000602082019050612f7b6000830184612f57565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612fdd6026836127f3565b9150612fe882612f81565b604082019050919050565b6000602082019050818103600083015261300c81612fd0565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061306f602b836127f3565b915061307a82613013565b604082019050919050565b6000602082019050818103600083015261309e81613062565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006130db6020836127f3565b91506130e6826130a5565b602082019050919050565b6000602082019050818103600083015261310a816130ce565b905091905056fea26469706673582212206a8feb62e5f08414ec15207efd8b0a8c9cf887e1ae19fbde9f58737650dac64b64736f6c63430008120033";

type EnderELStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderELStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderELStrategy__factory extends ContractFactory {
  constructor(...args: EnderELStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderELStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderELStrategy__factory {
    return super.connect(runner) as EnderELStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderELStrategyInterface {
    return new Interface(_abi) as EnderELStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderELStrategy {
    return new Contract(address, _abi, runner) as unknown as EnderELStrategy;
  }
}
