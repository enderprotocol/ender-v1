/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StETH,
  StETHInterface,
} from "../../../../contracts/ERC20/mockStEth.sol/StETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "preRebaseTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "postRebaseTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    name: "SharesBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesValue",
        type: "uint256",
      },
    ],
    name: "TransferShares",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES_POSITION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TotalEthAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "getPooledEthByShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ethAmount",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPooledEther",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "sharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "submit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "transferShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "transferSharesFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600255600160035534801561001a57600080fd5b506127088061002a6000396000f3fe60806040526004361061012e5760003560e01c80635bcb2fc6116100ab57806395d89b411161006f57806395d89b4114610442578063a457c2d71461046d578063a9059cbb146104aa578063d5002f2e146104e7578063dd62ed3e14610512578063f5eb42dc1461054f57610135565b80635bcb2fc6146103305780636d7804591461034e57806370a082311461038b5780637a28fb88146103c85780638fcb4e5b1461040557610135565b806330033d1e116100f257806330033d1e14610247578063313ce5671461027257806337cfdaca1461029d57806339509351146102c857806354712edf1461030557610135565b806306fdde031461013a578063095ea7b31461016557806318160ddd146101a257806319208451146101cd57806323b872dd1461020a57610135565b3661013557005b600080fd5b34801561014657600080fd5b5061014f61058c565b60405161015c9190611f4e565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190612009565b610605565b6040516101999190612064565b60405180910390f35b3480156101ae57600080fd5b506101b7610680565b6040516101c4919061208e565b60405180910390f35b3480156101d957600080fd5b506101f460048036038101906101ef91906120a9565b6106cb565b604051610201919061208e565b60405180910390f35b34801561021657600080fd5b50610231600480360381019061022c91906120d6565b610735565b60405161023e9190612064565b60405180910390f35b34801561025357600080fd5b5061025c6107e4565b604051610269919061208e565b60405180910390f35b34801561027e57600080fd5b506102876107ea565b6040516102949190612145565b60405180910390f35b3480156102a957600080fd5b506102b261082f565b6040516102bf919061208e565b60405180910390f35b3480156102d457600080fd5b506102ef60048036038101906102ea9190612009565b61087a565b6040516102fc9190612064565b60405180910390f35b34801561031157600080fd5b5061031a61097c565b604051610327919061208e565b60405180910390f35b610338610982565b604051610345919061208e565b60405180910390f35b34801561035a57600080fd5b50610375600480360381019061037091906120d6565b610a31565b604051610382919061208e565b60405180910390f35b34801561039757600080fd5b506103b260048036038101906103ad9190612160565b610b49565b6040516103bf919061208e565b60405180910390f35b3480156103d457600080fd5b506103ef60048036038101906103ea91906120a9565b610b9f565b6040516103fc919061208e565b60405180910390f35b34801561041157600080fd5b5061042c60048036038101906104279190612009565b610c09565b604051610439919061208e565b60405180910390f35b34801561044e57600080fd5b50610457610ced565b6040516104649190611f4e565b60405180910390f35b34801561047957600080fd5b50610494600480360381019061048f9190612009565b610d66565b6040516104a19190612064565b60405180910390f35b3480156104b657600080fd5b506104d160048036038101906104cc9190612009565b610f29565b6040516104de9190612064565b60405180910390f35b3480156104f357600080fd5b506104fc610fa4565b604051610509919061208e565b60405180910390f35b34801561051e57600080fd5b506105396004803603810190610534919061218d565b610fef565b604051610546919061208e565b60405180910390f35b34801561055b57600080fd5b5061057660048036038101906105719190612160565b6110b2565b604051610583919061208e565b60405180910390f35b60606105a2670bd59e99d2b0590260c01b611100565b6105b667bc6d3f0613c49c9160c01b611100565b6105ca670b5a8f3737767a3c60c01b611100565b6040518060400160405280601781526020017f4c6971756964207374616b656420457468657220322e30000000000000000000815250905090565b600061061b678df0934da95faaa560c01b611100565b61062f67d79432f10c43692660c01b611100565b61064367a8f2cd8b8ada8dc260c01b611100565b61064e338484611103565b6106626708dfb0f2763037c060c01b611100565b61067667587c6783d8156eb960c01b611100565b6001905092915050565b600061069667b166b16a0c7980d760c01b611100565b6106aa67fbfa46a63733ab0160c01b611100565b6106be67128875d8037cbec060c01b611100565b6106c66113bc565b905090565b60006106e16743c596814394440860c01b611100565b6106f567464c1eaf9207ce2360c01b611100565b61070967b21cb0e684fb940360c01b611100565b6107116113bc565b610719611402565b8361072491906121fc565b61072e919061226d565b9050919050565b600061074b673bde7bb25e75661160c01b611100565b61075f673e4551cdb18f5c1560c01b611100565b610773673db4e955294fc8ad60c01b611100565b61077e843384611448565b61079267c964ce893f68243d60c01b611100565b6107a667086d9387f381c0d760c01b611100565b6107b184848461163b565b6107c567873e015cc1641d3660c01b611100565b6107d9673076e2adaf8742f360c01b611100565b600190509392505050565b60025481565b600061080067cfdcd6017440cb9360c01b611100565b6108146750d59eb3d402030260c01b611100565b6108286723398dfd9825033160c01b611100565b6012905090565b6000610845676f030f900709337960c01b611100565b610859673619a7604c31110860c01b611100565b61086d670780d79d4f1d6d6360c01b611100565b6108756113bc565b905090565b6000610890670542568acff5d43b60c01b611100565b6108a4679baa76e42822d5a060c01b611100565b6108b8677a39855f7e9684ef60c01b611100565b61094a338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610945919061229e565b611103565b61095e6706d7a502910602b560c01b611100565b61097267b475382a45d7cadb60c01b611100565b6001905092915050565b60035481565b600061099867aa253bdfff4ab4fd60c01b611100565b6109ac673589f9d66696389a60c01b611100565b6109c067e65a7de30294c78460c01b611100565b60006109cb346106cb565b90506109e167014829adf24ca17a60c01b611100565b34600360008282546109f3919061229e565b92505081905550610a0e67dccbd3549a115e8d60c01b611100565b610a22670169f0bfcee77ebe60c01b611100565b610a2c33826116f1565b505090565b6000610a4767fc3cb83e6b225c9c60c01b611100565b610a5b678ae1d8b102bc23cb60c01b611100565b610a6f67a0ad3a4250b0fbed60c01b611100565b6000610a7a83610b9f565b9050610a906743ec3427cc35e86360c01b611100565b610aa4670d504b6a438f107f60c01b611100565b610aaf853383611448565b610ac367a927f6f1a166e30060c01b611100565b610ad76793ae724a9873bd1960c01b611100565b610ae28585856118b0565b610af6671eefc8e9eb82d72360c01b611100565b610b0a6765a3a5b3da798b1c60c01b611100565b610b1685858386611d06565b610b2a670a0770355aa2c4c860c01b611100565b610b3e67721d06dc228a340f60c01b611100565b809150509392505050565b6000610b5f675cc8058a8da7005660c01b611100565b610b7367b9247e1d8743efdd60c01b611100565b610b8767302c2af971ea3f5560c01b611100565b610b98610b9383611e3a565b610b9f565b9050919050565b6000610bb567cdac1f00405ba31b60c01b611100565b610bc967ed86e700ab3d46eb60c01b611100565b610bdd67ed9d52559bda2f2760c01b611100565b610be5611402565b610bed6113bc565b83610bf891906121fc565b610c02919061226d565b9050919050565b6000610c1f67e995b425ce33e22860c01b611100565b610c336714e6b04eb812514e60c01b611100565b610c4767308fb113db3e4f8860c01b611100565b610c523384846118b0565b610c6667589a05daa418a4d860c01b611100565b610c7a67e729a0e2008ed44e60c01b611100565b6000610c8583610b9f565b9050610c9b67a48089534bab083660c01b611100565b610caf67e41f14054522b25460c01b611100565b610cbb33858386611d06565b610ccf6703d67470fcf3af5860c01b611100565b610ce367519cddab6742d2ba60c01b611100565b8091505092915050565b6060610d0367dab19191c721d06260c01b611100565b610d17674beef0adc42fba6460c01b611100565b610d2b67f24051e7a8ad337360c01b611100565b6040518060400160405280600581526020017f7374455448000000000000000000000000000000000000000000000000000000815250905090565b6000610d7c67edac4c063e309ca660c01b611100565b610d9067a3a7ef89cacfcb7c60c01b611100565b610da46738d83b6a98d80d0c60c01b611100565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610e3967ebff38a2120457cc60c01b611100565b610e4d6745d2f51535ddaf7460c01b611100565b610e61677aab85860221291e60c01b611100565b82811015610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b9061231e565b60405180910390fd5b610eb867128e26e2857bc6db60c01b611100565b610ecc6725073292662fc0ef60c01b611100565b610ee067f6a8e7c770765e2e60c01b611100565b610ef633858584610ef1919061233e565b611103565b610f0a67585b4cd7fbd05b0160c01b611100565b610f1e67aee79f481c7fa1f460c01b611100565b600191505092915050565b6000610f3f67fe76822da04e2c2360c01b611100565b610f536748022c614ed521bf60c01b611100565b610f6767074441fd9dae1ac160c01b611100565b610f7233848461163b565b610f8667ff944b51c923affb60c01b611100565b610f9a6706f90d06715ba4c760c01b611100565b6001905092915050565b6000610fba672b36f9369ec7f84160c01b611100565b610fce67f0d94250f09ca4b760c01b611100565b610fe2675b7b154f7972622e60c01b611100565b610fea611402565b905090565b600061100567ca5a34cf82fe4b5260c01b611100565b61101967033612aa33fb570360c01b611100565b61102d673abd0a680ecf7db660c01b611100565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006110c867f0bd76d2fc973f3f60c01b611100565b6110dc675d88660bcde7860f60c01b611100565b6110f0672bd76f3d519f85c460c01b611100565b6110f982611e3a565b9050919050565b50565b61111767a8478973a90a4d5660c01b611100565b61112b676486166225dc0b9c60c01b611100565b61113f6772027a1a885faea560c01b611100565b611153675a7ad2d656598f0060c01b611100565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b9906123be565b60405180910390fd5b6111d667ed7245a1c136756660c01b611100565b6111ea67fb61f68ffff7861f60c01b611100565b6111fe677f199792562dae8a60c01b611100565b61121267c4a64bd88530a1d760c01b611100565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112789061242a565b60405180910390fd5b61129567ce2343eb6131f1ba60c01b611100565b6112a9679d51f96278190f6560c01b611100565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133e6761e61300b314cda160c01b611100565b61135267442ddadb9a070ded60c01b611100565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516113af919061208e565b60405180910390a3505050565b60006113d26722862778c0bcfc5760c01b611100565b6113e66744c8f48457aacced60c01b611100565b6113fa676c5f6fdc2ce09d0160c01b611100565b600354905090565b60006114186785e85eb7c8d47ee260c01b611100565b61142c676dd2123717b9f96e60c01b611100565b611440672ab0c4a17c95953460c01b611100565b600254905090565b61145c674cbae0559f37f1e660c01b611100565b61147067ab7cf3b2e428923f60c01b611100565b6114846701694d515c85acf260c01b611100565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061151967200d70fedd654d5460c01b611100565b61152d67785e4e82090e687960c01b611100565b60001981146116205761154a67da882722432edec560c01b611100565b61155e67ae664612a9324d6560c01b611100565b6115726713381efdfe5bf6ae60c01b611100565b61158667e92cb30d6510034060c01b611100565b818110156115c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c090612496565b60405180910390fd5b6115dd674775320de8feebeb60c01b611100565b6115f1675dc92ecd36ea057b60c01b611100565b61160567279d7e86bc25070260c01b611100565b61161b84848484611616919061233e565b611103565b611635565b61163467873e17cdf839f80f60c01b611100565b5b50505050565b61164f6789f0a6d62056bf5860c01b611100565b61166367b3957f267ce5d2a360c01b611100565b6116776724d357f8d50de27960c01b611100565b6000611682826106cb565b9050611698677ee8d04984ce781460c01b611100565b6116ac6743f5cd42f28130aa60c01b611100565b6116b78484836118b0565b6116cb67b718e217aa93429160c01b611100565b6116df67772886c6434cf43860c01b611100565b6116eb84848484611d06565b50505050565b600061170767691bd58888f0e8c560c01b611100565b61171b67101a473fb62013c460c01b611100565b61172f671a424452517edf2a60c01b611100565b61174367112fbd66002c173b60c01b611100565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a990612502565b60405180910390fd5b6117c667031768b743a883e960c01b611100565b6117da670dac19139cb8f6e460c01b611100565b816117e3611402565b6117ed919061229e565b905061180367849f6765f2506f7a60c01b611100565b8060028190555061181e671c6938ad27e7026260c01b611100565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611868919061229e565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555092915050565b6118c46734a357b9a3b956dd60c01b611100565b6118d8674dcc901923bbd7c760c01b611100565b6118ec67058586f44783842760c01b611100565b61190067524948626ed4733c60c01b611100565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361196f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119669061256e565b60405180910390fd5b611983676295b97b8eb3e90c60c01b611100565b611997677e091dac1c645fdd60c01b611100565b6119ab6706c61c648efb3d6760c01b611100565b6119bf67a11d6fe4905094a960c01b611100565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a25906125da565b60405180910390fd5b611a426726c076cace3da3a860c01b611100565b611a56679ad2e5110c4e08f260c01b611100565b611a6a6720fc420d06f63fb260c01b611100565b611a7e67f9640ad20883b0fc60c01b611100565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae390612646565b60405180910390fd5b611b00677b1ebc47559ffae460c01b611100565b611b14679c7fd8f77c95f71660c01b611100565b611b2867a2b4bdbe2bcc4abe60c01b611100565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611b7f67e34db9d903c0887860c01b611100565b611b936786e760e986ec51f860c01b611100565b611ba7672a649fde91cd7df660c01b611100565b80821115611bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be1906126b2565b60405180910390fd5b611bfe67b7b1bafbf1f6c4d460c01b611100565b611c126730fbaaa91227850c60c01b611100565b8181611c1e919061233e565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c7467d1e30cc1fbf36cc160c01b611100565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cbe919061229e565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b611d1a678ff2bd5e95cec12d60c01b611100565b611d2e679e6513708d157f0160c01b611100565b611d426778ed50f3e554dbe960c01b611100565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d9f919061208e565b60405180910390a3611dbb6740560d796dd5094060c01b611100565b611dcf67ee149f0b60fb5c8d60c01b611100565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f9d9c909296d9c674451c0c24f02cb64981eb3b727f99865939192f880a755dcb83604051611e2c919061208e565b60405180910390a350505050565b6000611e5067d710a44b22daac4260c01b611100565b611e6467043de517855ac34960c01b611100565b611e78671ce149ab23222f4260c01b611100565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ef8578082015181840152602081019050611edd565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f2082611ebe565b611f2a8185611ec9565b9350611f3a818560208601611eda565b611f4381611f04565b840191505092915050565b60006020820190508181036000830152611f688184611f15565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa082611f75565b9050919050565b611fb081611f95565b8114611fbb57600080fd5b50565b600081359050611fcd81611fa7565b92915050565b6000819050919050565b611fe681611fd3565b8114611ff157600080fd5b50565b60008135905061200381611fdd565b92915050565b600080604083850312156120205761201f611f70565b5b600061202e85828601611fbe565b925050602061203f85828601611ff4565b9150509250929050565b60008115159050919050565b61205e81612049565b82525050565b60006020820190506120796000830184612055565b92915050565b61208881611fd3565b82525050565b60006020820190506120a3600083018461207f565b92915050565b6000602082840312156120bf576120be611f70565b5b60006120cd84828501611ff4565b91505092915050565b6000806000606084860312156120ef576120ee611f70565b5b60006120fd86828701611fbe565b935050602061210e86828701611fbe565b925050604061211f86828701611ff4565b9150509250925092565b600060ff82169050919050565b61213f81612129565b82525050565b600060208201905061215a6000830184612136565b92915050565b60006020828403121561217657612175611f70565b5b600061218484828501611fbe565b91505092915050565b600080604083850312156121a4576121a3611f70565b5b60006121b285828601611fbe565b92505060206121c385828601611fbe565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220782611fd3565b915061221283611fd3565b925082820261222081611fd3565b91508282048414831517612237576122366121cd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061227882611fd3565b915061228383611fd3565b9250826122935761229261223e565b5b828204905092915050565b60006122a982611fd3565b91506122b483611fd3565b92508282019050808211156122cc576122cb6121cd565b5b92915050565b7f414c4c4f57414e43455f42454c4f575f5a45524f000000000000000000000000600082015250565b6000612308601483611ec9565b9150612313826122d2565b602082019050919050565b60006020820190508181036000830152612337816122fb565b9050919050565b600061234982611fd3565b915061235483611fd3565b925082820390508181111561236c5761236b6121cd565b5b92915050565b7f415050524f56455f46524f4d5f5a45524f5f4144445200000000000000000000600082015250565b60006123a8601683611ec9565b91506123b382612372565b602082019050919050565b600060208201905081810360008301526123d78161239b565b9050919050565b7f415050524f56455f544f5f5a45524f5f41444452000000000000000000000000600082015250565b6000612414601483611ec9565b915061241f826123de565b602082019050919050565b6000602082019050818103600083015261244381612407565b9050919050565b7f414c4c4f57414e43455f45584345454445440000000000000000000000000000600082015250565b6000612480601283611ec9565b915061248b8261244a565b602082019050919050565b600060208201905081810360008301526124af81612473565b9050919050565b7f4d494e545f544f5f5a45524f5f41444452000000000000000000000000000000600082015250565b60006124ec601183611ec9565b91506124f7826124b6565b602082019050919050565b6000602082019050818103600083015261251b816124df565b9050919050565b7f5452414e534645525f46524f4d5f5a45524f5f41444452000000000000000000600082015250565b6000612558601783611ec9565b915061256382612522565b602082019050919050565b600060208201905081810360008301526125878161254b565b9050919050565b7f5452414e534645525f544f5f5a45524f5f414444520000000000000000000000600082015250565b60006125c4601583611ec9565b91506125cf8261258e565b602082019050919050565b600060208201905081810360008301526125f3816125b7565b9050919050565b7f5452414e534645525f544f5f53544554485f434f4e5452414354000000000000600082015250565b6000612630601a83611ec9565b915061263b826125fa565b602082019050919050565b6000602082019050818103600083015261265f81612623565b9050919050565b7f42414c414e43455f455843454544454400000000000000000000000000000000600082015250565b600061269c601083611ec9565b91506126a782612666565b602082019050919050565b600060208201905081810360008301526126cb8161268f565b905091905056fea26469706673582212209a0331a1d3bb7f612eee6cb4b00d559d820ffc2f8685dc5f78e5a21ed88ed34c64736f6c63430008120033";

type StETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StETH__factory extends ContractFactory {
  constructor(...args: StETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StETH__factory {
    return super.connect(runner) as StETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StETHInterface {
    return new Interface(_abi) as StETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StETH {
    return new Contract(address, _abi, runner) as unknown as StETH;
  }
}
