/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StETH,
  StETHInterface,
} from "../../../../contracts/ERC20/mockStEth.sol/StETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "preRebaseTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "postRebaseTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesAmount",
        type: "uint256",
      },
    ],
    name: "SharesBurnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharesValue",
        type: "uint256",
      },
    ],
    name: "TransferShares",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES_POSITION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TotalEthAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "getPooledEthByShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ethAmount",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPooledEther",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "sharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "submit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "transferShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "transferSharesFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600255600160035534801561001a57600080fd5b506127048061002a6000396000f3fe60806040526004361061012e5760003560e01c80635bcb2fc6116100ab57806395d89b411161006f57806395d89b4114610442578063a457c2d71461046d578063a9059cbb146104aa578063d5002f2e146104e7578063dd62ed3e14610512578063f5eb42dc1461054f57610135565b80635bcb2fc6146103305780636d7804591461034e57806370a082311461038b5780637a28fb88146103c85780638fcb4e5b1461040557610135565b806330033d1e116100f257806330033d1e14610247578063313ce5671461027257806337cfdaca1461029d57806339509351146102c857806354712edf1461030557610135565b806306fdde031461013a578063095ea7b31461016557806318160ddd146101a257806319208451146101cd57806323b872dd1461020a57610135565b3661013557005b600080fd5b34801561014657600080fd5b5061014f61058c565b60405161015c9190611f4a565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190612005565b610605565b6040516101999190612060565b60405180910390f35b3480156101ae57600080fd5b506101b7610680565b6040516101c4919061208a565b60405180910390f35b3480156101d957600080fd5b506101f460048036038101906101ef91906120a5565b6106cb565b604051610201919061208a565b60405180910390f35b34801561021657600080fd5b50610231600480360381019061022c91906120d2565b610735565b60405161023e9190612060565b60405180910390f35b34801561025357600080fd5b5061025c6107e4565b604051610269919061208a565b60405180910390f35b34801561027e57600080fd5b506102876107ea565b6040516102949190612141565b60405180910390f35b3480156102a957600080fd5b506102b261082f565b6040516102bf919061208a565b60405180910390f35b3480156102d457600080fd5b506102ef60048036038101906102ea9190612005565b61087a565b6040516102fc9190612060565b60405180910390f35b34801561031157600080fd5b5061031a61097c565b604051610327919061208a565b60405180910390f35b610338610982565b604051610345919061208a565b60405180910390f35b34801561035a57600080fd5b50610375600480360381019061037091906120d2565b610a31565b604051610382919061208a565b60405180910390f35b34801561039757600080fd5b506103b260048036038101906103ad919061215c565b610b48565b6040516103bf919061208a565b60405180910390f35b3480156103d457600080fd5b506103ef60048036038101906103ea91906120a5565b610b9e565b6040516103fc919061208a565b60405180910390f35b34801561041157600080fd5b5061042c60048036038101906104279190612005565b610c08565b604051610439919061208a565b60405180910390f35b34801561044e57600080fd5b50610457610cec565b6040516104649190611f4a565b60405180910390f35b34801561047957600080fd5b50610494600480360381019061048f9190612005565b610d65565b6040516104a19190612060565b60405180910390f35b3480156104b657600080fd5b506104d160048036038101906104cc9190612005565b610f28565b6040516104de9190612060565b60405180910390f35b3480156104f357600080fd5b506104fc610fa3565b604051610509919061208a565b60405180910390f35b34801561051e57600080fd5b5061053960048036038101906105349190612189565b610fee565b604051610546919061208a565b60405180910390f35b34801561055b57600080fd5b506105766004803603810190610571919061215c565b6110b1565b604051610583919061208a565b60405180910390f35b60606105a267b204e95a844ff3bb60c01b6110ff565b6105b667d4821cf212b0a69560c01b6110ff565b6105ca67934aded1a1ececa160c01b6110ff565b6040518060400160405280601781526020017f4c6971756964207374616b656420457468657220322e30000000000000000000815250905090565b600061061b67bfe93003f9eee61860c01b6110ff565b61062f6730da2055109ca07060c01b6110ff565b610643677d250831524c2dd160c01b6110ff565b61064e338484611102565b61066267ac8cc3b00517d08960c01b6110ff565b610676677e6d0f0acf92df1e60c01b6110ff565b6001905092915050565b600061069667ee2597c9df3e467460c01b6110ff565b6106aa67b6a57e5b9592446160c01b6110ff565b6106be6732026c79afa0540b60c01b6110ff565b6106c66113bb565b905090565b60006106e167311e5f7caf68440e60c01b6110ff565b6106f56728dce483006d122e60c01b6110ff565b6107096753af82474265cb1d60c01b6110ff565b6107116113bb565b610719611401565b8361072491906121f8565b61072e9190612269565b9050919050565b600061074b67f5f375fa58dcc66560c01b6110ff565b61075f67ee765acedb49664c60c01b6110ff565b610773670214a95681505b2a60c01b6110ff565b61077e843384611447565b61079267a6b7c77ffe35f25f60c01b6110ff565b6107a6678eaf9827f5a4247960c01b6110ff565b6107b1848484611639565b6107c5672f8655c370ebe3e860c01b6110ff565b6107d967dd1c9a38a88c804260c01b6110ff565b600190509392505050565b60025481565b600061080067b5aad3f62938158e60c01b6110ff565b610814674e30c016983a3b2d60c01b6110ff565b61082867276532620129379660c01b6110ff565b6012905090565b60006108456766d8189f1aaddc8f60c01b6110ff565b6108596776fdb7e6cba71caf60c01b6110ff565b61086d67631d70aecb5a293960c01b6110ff565b6108756113bb565b905090565b60006108906778114cbab19a071760c01b6110ff565b6108a467fb253a9d7c9b76f460c01b6110ff565b6108b867b753659350b126ba60c01b6110ff565b61094a338484600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610945919061229a565b611102565b61095e6732b6dace6a667cb460c01b6110ff565b61097267de1d263bf6903a9660c01b6110ff565b6001905092915050565b60035481565b6000610998679f63cb2b3cf302c960c01b6110ff565b6109ac67935676257a62f78660c01b6110ff565b6109c067c7656be79e465bb960c01b6110ff565b60006109cb346106cb565b90506109e167e244f6d39eef1fa960c01b6110ff565b34600360008282546109f3919061229a565b92505081905550610a0e67b442b6c1c368765960c01b6110ff565b610a22678e0a77dc76bc0d5160c01b6110ff565b610a2c33826116ef565b505090565b6000610a4767fcf0649f47d288ee60c01b6110ff565b610a5b673b3070c86f23159160c01b6110ff565b610a6f6712cb96a6a4a6f75560c01b6110ff565b6000610a7a83610b9e565b9050610a9067c63a962181e81a5560c01b6110ff565b610aa3665a159b6c3e4c6860c01b6110ff565b610aae853383611447565b610ac2672a5bd95209704ba960c01b6110ff565b610ad667becb7379bc834dd160c01b6110ff565b610ae18585856118ad565b610af567d48ec83865441d6860c01b6110ff565b610b0967f2465d5e973738cf60c01b6110ff565b610b1585858386611d02565b610b2967eef4d5f0fe408f3c60c01b6110ff565b610b3d67d8cc808bdc4131f160c01b6110ff565b809150509392505050565b6000610b5e679601fa3fb584f56160c01b6110ff565b610b726785ab1a2dd1b8639060c01b6110ff565b610b86677143a743a253122560c01b6110ff565b610b97610b9283611e36565b610b9e565b9050919050565b6000610bb467b81bb05664afc7a160c01b6110ff565b610bc86779f93655ce401e4b60c01b6110ff565b610bdc674bd0829b2f2ff94b60c01b6110ff565b610be4611401565b610bec6113bb565b83610bf791906121f8565b610c019190612269565b9050919050565b6000610c1e674237502ce6fcd02e60c01b6110ff565b610c3267e2076470133175e060c01b6110ff565b610c4667b516f57a6710e2d860c01b6110ff565b610c513384846118ad565b610c65672dbf4391d78debcf60c01b6110ff565b610c796778b1db9f11e1f89c60c01b6110ff565b6000610c8483610b9e565b9050610c9a678734bc213b7089f560c01b6110ff565b610cae670cdb69dde33287e960c01b6110ff565b610cba33858386611d02565b610cce67efa2d72a85f60de060c01b6110ff565b610ce267a3ee2901069df4cd60c01b6110ff565b8091505092915050565b6060610d0267c6c2eac0a37a560b60c01b6110ff565b610d166717aafc7957ca377a60c01b6110ff565b610d2a679a37067391463bb860c01b6110ff565b6040518060400160405280600581526020017f7374455448000000000000000000000000000000000000000000000000000000815250905090565b6000610d7b674d5515d96e8ec78b60c01b6110ff565b610d8f677a601cd88dde451260c01b6110ff565b610da36739a9732bf1cb03a360c01b6110ff565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610e3867d9f845e908a7f57460c01b6110ff565b610e4c67d8942f841823c5a760c01b6110ff565b610e606767064e6b175101c160c01b6110ff565b82811015610ea3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9a9061231a565b60405180910390fd5b610eb76729b1f0ddcda4bd8460c01b6110ff565b610ecb67c2e92826f8f6899160c01b6110ff565b610edf67bba3806c9241222660c01b6110ff565b610ef533858584610ef0919061233a565b611102565b610f0967f8ae700a939a8bfd60c01b6110ff565b610f1d67f6d0b40f95af4f3260c01b6110ff565b600191505092915050565b6000610f3e67110386f64f1bf2b960c01b6110ff565b610f5267c06ddd1d20cbfca060c01b6110ff565b610f66674c3ed4f2bf5ba8d060c01b6110ff565b610f71338484611639565b610f8567dee946068ae9b0d460c01b6110ff565b610f9967bca1f601801d680c60c01b6110ff565b6001905092915050565b6000610fb967d21233102d5d73a760c01b6110ff565b610fcd67f6119cca643c3b3f60c01b6110ff565b610fe16772c457a1fa4ef8c560c01b6110ff565b610fe9611401565b905090565b600061100467749152d71a89425260c01b6110ff565b61101867fba5838544f1a89d60c01b6110ff565b61102c676ced4fa8c9fe0efe60c01b6110ff565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006110c767c33dbdf072c4688a60c01b6110ff565b6110db6745d205a1cbc9274960c01b6110ff565b6110ef676c7e36e9c2c7abee60c01b6110ff565b6110f882611e36565b9050919050565b50565b61111667fdbc043a5891e19960c01b6110ff565b61112a67af0c5833698de01160c01b6110ff565b61113e678e3b6a0b73001d4060c01b6110ff565b61115267332518ffceb6f5f760c01b6110ff565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b8906123ba565b60405180910390fd5b6111d5679f4d2969537d603e60c01b6110ff565b6111e967c44f808e1b69286860c01b6110ff565b6111fd671c87eb32a03623b760c01b6110ff565b61121167dff6f015c2619a6260c01b6110ff565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127790612426565b60405180910390fd5b611294677e255d0e605b113960c01b6110ff565b6112a867d497d850d360dff460c01b6110ff565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133d67572211153d57dee260c01b6110ff565b61135167d64dca5b8f94ada360c01b6110ff565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516113ae919061208a565b60405180910390a3505050565b60006113d1672f4640a00cbe974460c01b6110ff565b6113e5672a43a8511afd2de960c01b6110ff565b6113f96731dfbea26c3b3e8960c01b6110ff565b600354905090565b600061141767e9ea045bdacf9ed660c01b6110ff565b61142b67bd9d9c7deceddec460c01b6110ff565b61143f67d0e39d7ef341866260c01b6110ff565b600254905090565b61145b6701646bb57f86c9ed60c01b6110ff565b61146f67774a7febdf17d84360c01b6110ff565b61148266b6f4f9708360c560c01b6110ff565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061151767341edb8f382b771960c01b6110ff565b61152b679a95f65c935d915260c01b6110ff565b600019811461161e576115486787c9a508e809561060c01b6110ff565b61155c67c8f758efda69caa460c01b6110ff565b61157067bc6cd8528b445c0960c01b6110ff565b61158467f2cfaba129d7d63f60c01b6110ff565b818110156115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be90612492565b60405180910390fd5b6115db6775f2a14b6f192fd560c01b6110ff565b6115ef673f3f5220d087a3cb60c01b6110ff565b6116036772744d61e1cc40f760c01b6110ff565b61161984848484611614919061233a565b611102565b611633565b6116326754084ebca91e614660c01b6110ff565b5b50505050565b61164d679c03abd18eb475b260c01b6110ff565b611661677d1a0480a3e4a61360c01b6110ff565b611675673ce94fdb4b68593260c01b6110ff565b6000611680826106cb565b905061169667ebd5acc0262d217f60c01b6110ff565b6116aa67e71688eaa99cbc0060c01b6110ff565b6116b58484836118ad565b6116c96716c0aedc170c275960c01b6110ff565b6116dd671a3fe32123a6c0c560c01b6110ff565b6116e984848484611d02565b50505050565b600061170567789fb10abd41339560c01b6110ff565b61171967fc0c1c60048dbc9c60c01b6110ff565b61172c6654321a8adc63df60c01b6110ff565b61174067e068eba9d058313460c01b6110ff565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a6906124fe565b60405180910390fd5b6117c367a7704913cbf8b78a60c01b6110ff565b6117d767d58dfbd27a4c81ec60c01b6110ff565b816117e0611401565b6117ea919061229a565b905061180067a0e9ec9711a32ec660c01b6110ff565b8060028190555061181b67a4aa6e30effe876460c01b6110ff565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611865919061229a565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555092915050565b6118c167fd5c88ff982563e860c01b6110ff565b6118d567304aad1ae0e477d160c01b6110ff565b6118e9670ba2ad3fa34a1c7360c01b6110ff565b6118fd6791ee98648cea4f0860c01b6110ff565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361196c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119639061256a565b60405180910390fd5b611980676be8dd90b8186f9d60c01b6110ff565b61199467ed08c7a18c33e58b60c01b6110ff565b6119a867a09d4c9c13a810a560c01b6110ff565b6119bc67c3849ce1d2e08cec60c01b6110ff565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a22906125d6565b60405180910390fd5b611a3f678180259416d2b63060c01b6110ff565b611a53671fe7e45a6205d8c560c01b6110ff565b611a6767ec1cb37c77cd791160c01b6110ff565b611a7b671c37d5be834b341560c01b6110ff565b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae090612642565b60405180910390fd5b611afd6788681433a13acf1660c01b6110ff565b611b1167fb1a79056a52a54a60c01b6110ff565b611b246644039b8e890d1760c01b6110ff565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050611b7b67cd767450112d548860c01b6110ff565b611b8f677e0d1014053853f560c01b6110ff565b611ba367f712a74eabba1c5c60c01b6110ff565b80821115611be6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdd906126ae565b60405180910390fd5b611bfa674f3a813a085c43b860c01b6110ff565b611c0e67fdfdd15dc3246e8660c01b6110ff565b8181611c1a919061233a565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c706713af161ad016d26060c01b6110ff565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cba919061229a565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b611d1667089b6b7740fc4d4960c01b6110ff565b611d2a6767658f1d6cfe8eeb60c01b6110ff565b611d3e672b136e2a9ea93a9c60c01b6110ff565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d9b919061208a565b60405180910390a3611db767ccbb8bd1cd03157160c01b6110ff565b611dcb67cc5befe11ae28b9c60c01b6110ff565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f9d9c909296d9c674451c0c24f02cb64981eb3b727f99865939192f880a755dcb83604051611e28919061208a565b60405180910390a350505050565b6000611e4c6732b15c3242406c9c60c01b6110ff565b611e6067d3e3eaf60a699f2560c01b6110ff565b611e746798dab5f45a81f07560c01b6110ff565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ef4578082015181840152602081019050611ed9565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f1c82611eba565b611f268185611ec5565b9350611f36818560208601611ed6565b611f3f81611f00565b840191505092915050565b60006020820190508181036000830152611f648184611f11565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f9c82611f71565b9050919050565b611fac81611f91565b8114611fb757600080fd5b50565b600081359050611fc981611fa3565b92915050565b6000819050919050565b611fe281611fcf565b8114611fed57600080fd5b50565b600081359050611fff81611fd9565b92915050565b6000806040838503121561201c5761201b611f6c565b5b600061202a85828601611fba565b925050602061203b85828601611ff0565b9150509250929050565b60008115159050919050565b61205a81612045565b82525050565b60006020820190506120756000830184612051565b92915050565b61208481611fcf565b82525050565b600060208201905061209f600083018461207b565b92915050565b6000602082840312156120bb576120ba611f6c565b5b60006120c984828501611ff0565b91505092915050565b6000806000606084860312156120eb576120ea611f6c565b5b60006120f986828701611fba565b935050602061210a86828701611fba565b925050604061211b86828701611ff0565b9150509250925092565b600060ff82169050919050565b61213b81612125565b82525050565b60006020820190506121566000830184612132565b92915050565b60006020828403121561217257612171611f6c565b5b600061218084828501611fba565b91505092915050565b600080604083850312156121a05761219f611f6c565b5b60006121ae85828601611fba565b92505060206121bf85828601611fba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220382611fcf565b915061220e83611fcf565b925082820261221c81611fcf565b91508282048414831517612233576122326121c9565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061227482611fcf565b915061227f83611fcf565b92508261228f5761228e61223a565b5b828204905092915050565b60006122a582611fcf565b91506122b083611fcf565b92508282019050808211156122c8576122c76121c9565b5b92915050565b7f414c4c4f57414e43455f42454c4f575f5a45524f000000000000000000000000600082015250565b6000612304601483611ec5565b915061230f826122ce565b602082019050919050565b60006020820190508181036000830152612333816122f7565b9050919050565b600061234582611fcf565b915061235083611fcf565b9250828203905081811115612368576123676121c9565b5b92915050565b7f415050524f56455f46524f4d5f5a45524f5f4144445200000000000000000000600082015250565b60006123a4601683611ec5565b91506123af8261236e565b602082019050919050565b600060208201905081810360008301526123d381612397565b9050919050565b7f415050524f56455f544f5f5a45524f5f41444452000000000000000000000000600082015250565b6000612410601483611ec5565b915061241b826123da565b602082019050919050565b6000602082019050818103600083015261243f81612403565b9050919050565b7f414c4c4f57414e43455f45584345454445440000000000000000000000000000600082015250565b600061247c601283611ec5565b915061248782612446565b602082019050919050565b600060208201905081810360008301526124ab8161246f565b9050919050565b7f4d494e545f544f5f5a45524f5f41444452000000000000000000000000000000600082015250565b60006124e8601183611ec5565b91506124f3826124b2565b602082019050919050565b60006020820190508181036000830152612517816124db565b9050919050565b7f5452414e534645525f46524f4d5f5a45524f5f41444452000000000000000000600082015250565b6000612554601783611ec5565b915061255f8261251e565b602082019050919050565b6000602082019050818103600083015261258381612547565b9050919050565b7f5452414e534645525f544f5f5a45524f5f414444520000000000000000000000600082015250565b60006125c0601583611ec5565b91506125cb8261258a565b602082019050919050565b600060208201905081810360008301526125ef816125b3565b9050919050565b7f5452414e534645525f544f5f53544554485f434f4e5452414354000000000000600082015250565b600061262c601a83611ec5565b9150612637826125f6565b602082019050919050565b6000602082019050818103600083015261265b8161261f565b9050919050565b7f42414c414e43455f455843454544454400000000000000000000000000000000600082015250565b6000612698601083611ec5565b91506126a382612662565b602082019050919050565b600060208201905081810360008301526126c78161268b565b905091905056fea26469706673582212203ea883ada02ede656630352ed95ca7ba7b0694dd9bed61e8b9d81d8ac1e5272364736f6c63430008120033";

type StETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StETH__factory extends ContractFactory {
  constructor(...args: StETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StETH__factory {
    return super.connect(runner) as StETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StETHInterface {
    return new Interface(_abi) as StETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StETH {
    return new Contract(address, _abi, runner) as unknown as StETH;
  }
}
