/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockWETH,
  MockWETHInterface,
} from "../../../../contracts/ERC20/StEth.sol/MockWETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f1238038062000f128339810160408190526200003491620001ac565b806001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f8162000097565b5060046200007e8482620002c8565b5060056200008d8382620002c8565b5050505062000394565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010f57600080fd5b81516001600160401b03808211156200012c576200012c620000e7565b604051601f8301601f19908116603f01168101908282118183101715620001575762000157620000e7565b816040528381526020925086838588010111156200017457600080fd5b600091505b8382101562000198578582018301518183018401529082019062000179565b600093810190920192909252949350505050565b600080600060608486031215620001c257600080fd5b83516001600160401b0380821115620001da57600080fd5b620001e887838801620000fd565b94506020860151915080821115620001ff57600080fd5b506200020e86828701620000fd565b604086015190935090506001600160a01b03811681146200022e57600080fd5b809150509250925092565b600181811c908216806200024e57607f821691505b6020821081036200026f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c357600081815260208120601f850160051c810160208610156200029e5750805b601f850160051c820191505b81811015620002bf57828155600101620002aa565b5050505b505050565b81516001600160401b03811115620002e457620002e4620000e7565b620002fc81620002f5845462000239565b8462000275565b602080601f8311600181146200033457600084156200031b5750858301515b600019600386901b1c1916600185901b178555620002bf565b600085815260208120601f198616915b82811015620003655788860151825594840194600190910190840162000344565b5085821015620003845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b6e80620003a46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636ebcf607116100a257806395d89b411161007157806395d89b4114610244578063a457c2d71461024c578063a9059cbb1461025f578063dd62ed3e14610272578063f2fde38b146102ab57600080fd5b80636ebcf607146101d857806370a08231146101f8578063715018a6146102215780638da5cb5b1461022957600080fd5b806323b872dd116100de57806323b872dd1461018e578063313ce567146101a157806339509351146101b057806340c10f19146101c357600080fd5b8063024c2ddd1461011057806306fdde031461014e578063095ea7b31461016357806318160ddd14610186575b600080fd5b61013b61011e3660046109d4565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101566102be565b6040516101459190610a07565b610176610171366004610a55565b610350565b6040519015158152602001610145565b60035461013b565b61017661019c366004610a7f565b610367565b60405160128152602001610145565b6101766101be366004610a55565b610418565b6101d66101d1366004610a55565b610454565b005b61013b6101e6366004610abb565b60016020526000908152604090205481565b61013b610206366004610abb565b6001600160a01b031660009081526001602052604090205490565b6101d6610462565b6000546040516001600160a01b039091168152602001610145565b610156610476565b61017661025a366004610a55565b610485565b61017661026d366004610a55565b61051e565b61013b6102803660046109d4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101d66102b9366004610abb565b61052b565b6060600480546102cd90610add565b80601f01602080910402602001604051908101604052809291908181526020018280546102f990610add565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b5050505050905090565b600061035d338484610569565b5060015b92915050565b600061037484848461068d565b6001600160a01b03808516600090815260026020908152604080832093871683529290522054828110156104005760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61040d8533858403610569565b506001949350505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161035d91859061044f908690610b17565b610569565b61045e828261085c565b5050565b61046a61093b565b6104746000610968565b565b6060600580546102cd90610add565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156105075760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f7565b6105143385858403610569565b5060019392505050565b600061035d33848461068d565b61053361093b565b6001600160a01b03811661055d57604051631e4fbdf760e01b8152600060048201526024016103f7565b61056681610968565b50565b6001600160a01b0383166105cb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f7565b6001600160a01b03821661062c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106f15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f7565b6001600160a01b0382166107535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f7565b6001600160a01b038316600090815260016020526040902054818110156107cb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f7565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610802908490610b17565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084e91815260200190565b60405180910390a350505050565b6001600160a01b0382166108b25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f7565b80600360008282546108c49190610b17565b90915550506001600160a01b038216600090815260016020526040812080548392906108f1908490610b17565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000546001600160a01b031633146104745760405163118cdaa760e01b81523360048201526024016103f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146109cf57600080fd5b919050565b600080604083850312156109e757600080fd5b6109f0836109b8565b91506109fe602084016109b8565b90509250929050565b600060208083528351808285015260005b81811015610a3457858101830151858201604001528201610a18565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610a6857600080fd5b610a71836109b8565b946020939093013593505050565b600080600060608486031215610a9457600080fd5b610a9d846109b8565b9250610aab602085016109b8565b9150604084013590509250925092565b600060208284031215610acd57600080fd5b610ad6826109b8565b9392505050565b600181811c90821680610af157607f821691505b602082108103610b1157634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036157634e487b7160e01b600052601160045260246000fdfea264697066735822122039108057ca1d8e2a72034720aa9fa3bb469749980defb8fc72c2130cdf3ca39a64736f6c63430008120033";

type MockWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWETH__factory extends ContractFactory {
  constructor(...args: MockWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, owner, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, owner, overrides || {}) as Promise<
      MockWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockWETH__factory {
    return super.connect(runner) as MockWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWETHInterface {
    return new Interface(_abi) as MockWETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockWETH {
    return new Contract(address, _abi, runner) as unknown as MockWETH;
  }
}
