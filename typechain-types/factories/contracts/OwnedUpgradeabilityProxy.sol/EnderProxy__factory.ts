/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnderProxy,
  EnderProxyInterface,
} from "../../../contracts/OwnedUpgradeabilityProxy.sol/EnderProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maintenance",
    outputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    name: "setMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200002e67a2fb4c61146e7feb60c01b6200007d60201b60201c565b6200004a675e6b230ab4d8c51860c01b6200007d60201b60201c565b62000066670afb5a299a89d24760c01b6200007d60201b60201c565b62000077336200008060201b60201c565b6200011c565b50565b6200009c6751e0c682252aab1660c01b6200007d60201b60201c565b620000b8670f6678da7f9998d460c01b6200007d60201b60201c565b620000d467c38898052cb72ba460c01b6200007d60201b60201c565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb905062000115671eeb0d53afcc914a60c01b6200007d60201b60201c565b8181555050565b61158a806200012c6000396000f3fe6080604052600436106100745760003560e01c80635c60da1b1161004e5780635c60da1b1461014d578063612f2f37146101785780636c376cc5146101a1578063f1739cae146101cc57610097565b8063025313a2146100dd5780633659cfe6146101085780634f1ef2861461013157610097565b366100975761008d67efe79142d3834b9d60c01b6101f5565b6100956101f8565b005b6100ab67f20448b1e271deac60c01b6101f5565b6100bf679db55daecc57df9360c01b6101f5565b6100d367167e7f887c99f73860c01b6101f5565b6100db6101f8565b005b3480156100e957600080fd5b506100f2610462565b6040516100ff91906110b5565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190611110565b6104e1565b005b61014b60048036038101906101469190611283565b61063e565b005b34801561015957600080fd5b506101626108c3565b60405161016f91906110b5565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611317565b610942565b005b3480156101ad57600080fd5b506101b6610ad3565b6040516101c39190611353565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190611110565b610b52565b005b50565b61020c67fdaac49a438e946b60c01b6101f5565b61022067e5b4a0560daf129060c01b6101f5565b6102346751ad9b446c1361b860c01b6101f5565b61023c610ad3565b1561031f5761025567a767bfcab913a35260c01b6101f5565b610269671ffa1adde0a27f7660c01b6101f5565b61027d67f9ba3571fa73ae6060c01b6101f5565b61029167208705a77edf218e60c01b6101f5565b610299610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906113f1565b60405180910390fd5b61031a67a724d26cf1a8de5e60c01b6101f5565b610334565b6103336757fef2b068b5918160c01b6101f5565b5b61034867ee66a27b0aff6ddc60c01b6101f5565b61035c678b3f516a768ffb8360c01b6101f5565b60006103666108c3565b905061037c672e39199970cd7bab60c01b6101f5565b61039067fcd5db338785b9b760c01b6101f5565b6103a4676259e189be21dba060c01b6101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90611483565b60405180910390fd5b61042767d4b097b1e8e3f41f60c01b6101f5565b61043b67ff6df564a5d6b30260c01b6101f5565b60405136600082376000803683855af43d806000843e816000811461045e578184f35b8184fd5b6000610478674bca082f1fedbc3f60c01b6101f5565b61048c6709f99d492e7f0cda60c01b6101f5565b6104a06778cbd62f5d0ce91160c01b6101f5565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb90506104d96768461a3a2143f81e60c01b6101f5565b805491505090565b6104f5671730a87df26bb28f60c01b6101f5565b61050967cd9dbf40622e136d60c01b6101f5565b61051d67c809d718cf17ccf460c01b6101f5565b61053167b0140801684f379260c01b6101f5565b61054567fa15dfaa1a32ab0c60c01b6101f5565b61054d610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b1906113f1565b60405180910390fd5b6105ce67988d7faf9bb4c75060c01b6101f5565b6105e267ffe03a3bd8fe6cf160c01b6101f5565b6105f6670b758ccc2770061260c01b6101f5565b61060a6738b6937b8d09c3d460c01b6101f5565b61061e674d76adb7940b3e7560c01b6101f5565b610632677d8ea37429a9fb6160c01b6101f5565b61063b81610dd6565b50565b61065267c2cad6f64be44cfb60c01b6101f5565b61066667cd9dbf40622e136d60c01b6101f5565b61067a67c809d718cf17ccf460c01b6101f5565b61068e67b0140801684f379260c01b6101f5565b6106a267fa15dfaa1a32ab0c60c01b6101f5565b6106aa610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e906113f1565b60405180910390fd5b61072b67988d7faf9bb4c75060c01b6101f5565b61073f67ffe03a3bd8fe6cf160c01b6101f5565b61075367e73f53ec203fcb3460c01b6101f5565b61076767a9872cf9da33ac7160c01b6101f5565b61077b6783139d4afa36ce3e60c01b6101f5565b61078f671b57db751949255760c01b6101f5565b610798826104e1565b6107ac67348822f2fc6514d560c01b6101f5565b6107c0676c1dcfc2d4df5d5e60c01b6101f5565b60003073ffffffffffffffffffffffffffffffffffffffff1634836040516107e89190611514565b60006040518083038185875af1925050503d8060008114610825576040519150601f19603f3d011682016040523d82523d6000602084013e61082a565b606091505b5050905061084267971834d8555f9b6a60c01b6101f5565b61085667189c7417e4882a6560c01b6101f5565b61086a67811801b24397fff860c01b6101f5565b806108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190611483565b60405180910390fd5b6108be671601e304fb3be5e660c01b6101f5565b505050565b60006108d9678692d61234e46e9760c01b6101f5565b6108ed670574f997aed0b17360c01b6101f5565b61090167f6b24e6e1c1abe2060c01b6101f5565b60007f9ab02dcb56b946b957b4d88c05e9905e8a50979ab2c93d1f05b7872215a93106905061093a675be820e1b30d85d660c01b6101f5565b805491505090565b6109566709d170249487f87360c01b6101f5565b61096a67cd9dbf40622e136d60c01b6101f5565b61097e67c809d718cf17ccf460c01b6101f5565b61099267b0140801684f379260c01b6101f5565b6109a667fa15dfaa1a32ab0c60c01b6101f5565b6109ae610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906113f1565b60405180910390fd5b610a2f67988d7faf9bb4c75060c01b6101f5565b610a4367ffe03a3bd8fe6cf160c01b6101f5565b610a5767dc8bc4d2e62a9a3c60c01b6101f5565b610a6b67cb6ab527ee8fbce860c01b6101f5565b610a7f67b821b35dcea5a39a60c01b6101f5565b610a936764aa28f8a642adf660c01b6101f5565b60007fbdea91235d25bb9906bd9a4ab42f41c0ada3384bb42758d2900fe2fcae34c1fa9050610acc67fb1d3863da8759e560c01b6101f5565b8181555050565b6000610ae967ae56229062a295bd60c01b6101f5565b610afd67ee6d3148e0259b8e60c01b6101f5565b610b11677520ca0eaacfbbb060c01b6101f5565b60007fbdea91235d25bb9906bd9a4ab42f41c0ada3384bb42758d2900fe2fcae34c1fa9050610b4a6731cd61da8e39c0df60c01b6101f5565b805491505090565b610b6667229de809bca4067860c01b6101f5565b610b7a67cd9dbf40622e136d60c01b6101f5565b610b8e67c809d718cf17ccf460c01b6101f5565b610ba267b0140801684f379260c01b6101f5565b610bb667fa15dfaa1a32ab0c60c01b6101f5565b610bbe610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c22906113f1565b60405180910390fd5b610c3f67988d7faf9bb4c75060c01b6101f5565b610c5367ffe03a3bd8fe6cf160c01b6101f5565b610c67675075fa2fde18597f60c01b6101f5565b610c7b6748de2eeb924bd43260c01b6101f5565b610c8f675e1282d74e0bd82660c01b6101f5565b610ca367c49052739e2514c460c01b6101f5565b610cb7671b2dea60375cff4560c01b6101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1d90611483565b60405180910390fd5b610d3a67712a51636a91e56760c01b6101f5565b610d4e6746c6e4cd287aec5160c01b6101f5565b610d6267231c4aca5c55580a60c01b6101f5565b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9610d8b610462565b82604051610d9a92919061152b565b60405180910390a1610db667d5cb5c2c51da486060c01b6101f5565b610dca67c4b866efcaa1b00660c01b6101f5565b610dd381610f7c565b50565b610dea67df72f33f92d0e52260c01b6101f5565b610dfe674f53d5c30656bf7960c01b6101f5565b610e12670656ef8cd54ea55560c01b6101f5565b6000610e1c6108c3565b9050610e32677a6c240273b2280560c01b6101f5565b610e46677041f8d37ccfb49860c01b6101f5565b610e5a67c906659e4564a84c60c01b6101f5565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebf90611483565b60405180910390fd5b610edc6704264188f843328e60c01b6101f5565b610ef067eefa0153ba59380360c01b6101f5565b610f0467b17b4c85bf47808d60c01b6101f5565b610f0d82610ff8565b610f21671703477c76c9fa5960c01b6101f5565b610f35677e0d346d0b1db03b60c01b6101f5565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b610f906751e0c682252aab1660c01b6101f5565b610fa4670f6678da7f9998d460c01b6101f5565b610fb867c38898052cb72ba460c01b6101f5565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb9050610ff1671eeb0d53afcc914a60c01b6101f5565b8181555050565b61100c674bc6804bd39f53ae60c01b6101f5565b611020677cc90dba5f7c53aa60c01b6101f5565b61103467c8be7957bfe5389d60c01b6101f5565b60007f9ab02dcb56b946b957b4d88c05e9905e8a50979ab2c93d1f05b7872215a93106905061106d67b3c8961c8b527a3860c01b6101f5565b8181555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109f82611074565b9050919050565b6110af81611094565b82525050565b60006020820190506110ca60008301846110a6565b92915050565b6000604051905090565b600080fd5b600080fd5b6110ed81611094565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b600060208284031215611126576111256110da565b5b6000611134848285016110fb565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61119082611147565b810181811067ffffffffffffffff821117156111af576111ae611158565b5b80604052505050565b60006111c26110d0565b90506111ce8282611187565b919050565b600067ffffffffffffffff8211156111ee576111ed611158565b5b6111f782611147565b9050602081019050919050565b82818337600083830152505050565b6000611226611221846111d3565b6111b8565b90508281526020810184848401111561124257611241611142565b5b61124d848285611204565b509392505050565b600082601f83011261126a5761126961113d565b5b813561127a848260208601611213565b91505092915050565b6000806040838503121561129a576112996110da565b5b60006112a8858286016110fb565b925050602083013567ffffffffffffffff8111156112c9576112c86110df565b5b6112d585828601611255565b9150509250929050565b60008115159050919050565b6112f4816112df565b81146112ff57600080fd5b50565b600081359050611311816112eb565b92915050565b60006020828403121561132d5761132c6110da565b5b600061133b84828501611302565b91505092915050565b61134d816112df565b82525050565b60006020820190506113686000830184611344565b92915050565b600082825260208201905092915050565b7f4f776e6564557067726164656162696c69747950726f78793a20464f5242494460008201527f44454e0000000000000000000000000000000000000000000000000000000000602082015250565b60006113db60238361136e565b91506113e68261137f565b604082019050919050565b6000602082019050818103600083015261140a816113ce565b9050919050565b7f4f776e6564557067726164656162696c69747950726f78793a20494e56414c4960008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b600061146d60218361136e565b915061147882611411565b604082019050919050565b6000602082019050818103600083015261149c81611460565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156114d75780820151818401526020810190506114bc565b60008484015250505050565b60006114ee826114a3565b6114f881856114ae565b93506115088185602086016114b9565b80840191505092915050565b600061152082846114e3565b915081905092915050565b600060408201905061154060008301856110a6565b61154d60208301846110a6565b939250505056fea2646970667358221220876e15e685c7f96122f0f9c4b52bd7115a1430f85eab2926adb2c4cd4e7e0d8264736f6c63430008120033";

type EnderProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderProxy__factory extends ContractFactory {
  constructor(...args: EnderProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderProxy__factory {
    return super.connect(runner) as EnderProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderProxyInterface {
    return new Interface(_abi) as EnderProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EnderProxy {
    return new Contract(address, _abi, runner) as unknown as EnderProxy;
  }
}
