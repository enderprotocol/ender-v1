/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnderProxy,
  EnderProxyInterface,
} from "../../../contracts/OwnedUpgradeabilityProxy.sol/EnderProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maintenance",
    outputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_maintenance",
        type: "bool",
      },
    ],
    name: "setMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200002e67f6d380dff9cd52ec60c01b6200007d60201b60201c565b6200004a67f1560e356e9bb56f60c01b6200007d60201b60201c565b62000066677778ec2289189a3960c01b6200007d60201b60201c565b62000077336200008060201b60201c565b6200011c565b50565b6200009c67a8921cca236ce7c160c01b6200007d60201b60201c565b620000b8677058e129dbf78bd160c01b6200007d60201b60201c565b620000d467964297c52978b12b60c01b6200007d60201b60201c565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb9050620001156729029f646014c20860c01b6200007d60201b60201c565b8181555050565b61158a806200012c6000396000f3fe6080604052600436106100745760003560e01c80635c60da1b1161004e5780635c60da1b1461014d578063612f2f37146101785780636c376cc5146101a1578063f1739cae146101cc57610097565b8063025313a2146100dd5780633659cfe6146101085780634f1ef2861461013157610097565b366100975761008d679f5520a72de1f58d60c01b6101f5565b6100956101f8565b005b6100ab6707f7c4d9671c2f4060c01b6101f5565b6100bf679eba95ac9fa0d55e60c01b6101f5565b6100d367146fd3e85ca54cc560c01b6101f5565b6100db6101f8565b005b3480156100e957600080fd5b506100f2610462565b6040516100ff91906110b5565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190611110565b6104e1565b005b61014b60048036038101906101469190611283565b61063e565b005b34801561015957600080fd5b506101626108c3565b60405161016f91906110b5565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611317565b610942565b005b3480156101ad57600080fd5b506101b6610ad3565b6040516101c39190611353565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190611110565b610b52565b005b50565b61020c67b3df7004ef35258860c01b6101f5565b610220672a02a5f7bff0811560c01b6101f5565b6102346764c09da9817c27f860c01b6101f5565b61023c610ad3565b1561031f5761025567e4f7ac1c87641d6e60c01b6101f5565b610269673e7af471483fee9260c01b6101f5565b61027d6713475dfad1a2693060c01b6101f5565b61029167d56c1492ce4a749a60c01b6101f5565b610299610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906113f1565b60405180910390fd5b61031a678d4fca2db0ad284560c01b6101f5565b610334565b61033367be9ed9da4a112a4860c01b6101f5565b5b610348672ce44f34d0f9859760c01b6101f5565b61035c67f359d44c2e824ad060c01b6101f5565b60006103666108c3565b905061037c6724588e93b4ddc4db60c01b6101f5565b61039067652a72cbdd14040c60c01b6101f5565b6103a46716ae65ac39475de860c01b6101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90611483565b60405180910390fd5b610427675cb1ea41e68f6baf60c01b6101f5565b61043b67908120aae95810b860c01b6101f5565b60405136600082376000803683855af43d806000843e816000811461045e578184f35b8184fd5b6000610478679d237de4e44e3b1f60c01b6101f5565b61048c67db83453bec485b7c60c01b6101f5565b6104a0677ae886cac71a28db60c01b6101f5565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb90506104d967becb0a1c26fe1c4360c01b6101f5565b805491505090565b6104f5670ce87545c1eb52f960c01b6101f5565b61050967d3ab72e3a6719b7a60c01b6101f5565b61051d67d66f5512795d078960c01b6101f5565b61053167992e61e3723b851760c01b6101f5565b6105456744e85fbdae72c05660c01b6101f5565b61054d610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b1906113f1565b60405180910390fd5b6105ce6762a70fe8ea5dbb3860c01b6101f5565b6105e267202c8168924fdcc560c01b6101f5565b6105f66731c286d0ce3d048e60c01b6101f5565b61060a6798caaf36393eeeec60c01b6101f5565b61061e67db321f31e9c4c0f560c01b6101f5565b61063267a9005c8c54caeef160c01b6101f5565b61063b81610dd6565b50565b610652675732dfe995f989db60c01b6101f5565b61066667d3ab72e3a6719b7a60c01b6101f5565b61067a67d66f5512795d078960c01b6101f5565b61068e67992e61e3723b851760c01b6101f5565b6106a26744e85fbdae72c05660c01b6101f5565b6106aa610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e906113f1565b60405180910390fd5b61072b6762a70fe8ea5dbb3860c01b6101f5565b61073f67202c8168924fdcc560c01b6101f5565b610753672a7ae924cfa52dbf60c01b6101f5565b61076767b2ad5ef0b8ced15d60c01b6101f5565b61077b67b77576298731de6c60c01b6101f5565b61078f67f55e08470243a82c60c01b6101f5565b610798826104e1565b6107ac67f9f4ea94999b88ef60c01b6101f5565b6107c06752452be063932fae60c01b6101f5565b60003073ffffffffffffffffffffffffffffffffffffffff1634836040516107e89190611514565b60006040518083038185875af1925050503d8060008114610825576040519150601f19603f3d011682016040523d82523d6000602084013e61082a565b606091505b50509050610842673f3934cb388e40e260c01b6101f5565b6108566727d46e573515d5f660c01b6101f5565b61086a6767f8faf96ef250f860c01b6101f5565b806108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190611483565b60405180910390fd5b6108be673134ecb1d96608aa60c01b6101f5565b505050565b60006108d96799972da1ce9f165760c01b6101f5565b6108ed6750acbeba7f19694d60c01b6101f5565b61090167ebe721f71101e56260c01b6101f5565b60007f9ab02dcb56b946b957b4d88c05e9905e8a50979ab2c93d1f05b7872215a93106905061093a6716abcd6e9b84279b60c01b6101f5565b805491505090565b61095667715441d939d2bf1460c01b6101f5565b61096a67d3ab72e3a6719b7a60c01b6101f5565b61097e67d66f5512795d078960c01b6101f5565b61099267992e61e3723b851760c01b6101f5565b6109a66744e85fbdae72c05660c01b6101f5565b6109ae610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906113f1565b60405180910390fd5b610a2f6762a70fe8ea5dbb3860c01b6101f5565b610a4367202c8168924fdcc560c01b6101f5565b610a5767978af2495d9ad7ad60c01b6101f5565b610a6b677221d48ce50dad3960c01b6101f5565b610a7f67c0d4f0309733c31660c01b6101f5565b610a936794a1c3bffd40695f60c01b6101f5565b60007fbdea91235d25bb9906bd9a4ab42f41c0ada3384bb42758d2900fe2fcae34c1fa9050610acc676980cdc5f1411e2b60c01b6101f5565b8181555050565b6000610ae967b02336a76f5465bc60c01b6101f5565b610afd6738535ce87db625ba60c01b6101f5565b610b1167184b627734af925c60c01b6101f5565b60007fbdea91235d25bb9906bd9a4ab42f41c0ada3384bb42758d2900fe2fcae34c1fa9050610b4a672aebc34437381b2360c01b6101f5565b805491505090565b610b66678853c5868afd2b2f60c01b6101f5565b610b7a67d3ab72e3a6719b7a60c01b6101f5565b610b8e67d66f5512795d078960c01b6101f5565b610ba267992e61e3723b851760c01b6101f5565b610bb66744e85fbdae72c05660c01b6101f5565b610bbe610462565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c22906113f1565b60405180910390fd5b610c3f6762a70fe8ea5dbb3860c01b6101f5565b610c5367202c8168924fdcc560c01b6101f5565b610c67677c23b4007876435a60c01b6101f5565b610c7b67d59dfb420062e2ae60c01b6101f5565b610c8f67ba17f77ec390e10a60c01b6101f5565b610ca367bdc517b451b51eaa60c01b6101f5565b610cb767a2208e83cd8eabec60c01b6101f5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1d90611483565b60405180910390fd5b610d3a67a9e1513d94f70de260c01b6101f5565b610d4e677ad45293e8ebe13e60c01b6101f5565b610d62673c22fe50da305c0c60c01b6101f5565b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9610d8b610462565b82604051610d9a92919061152b565b60405180910390a1610db6671a9a948b7e83015760c01b6101f5565b610dca67722e17aa0584e04160c01b6101f5565b610dd381610f7c565b50565b610dea671ff2ab88cd6f36a460c01b6101f5565b610dfe6786e805054772679260c01b6101f5565b610e126716ea62de7e87fc3060c01b6101f5565b6000610e1c6108c3565b9050610e3267fa7030f4536a9dac60c01b6101f5565b610e46670727cd520c5c4ff960c01b6101f5565b610e5a67a5614195d96f6c4e60c01b6101f5565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebf90611483565b60405180910390fd5b610edc67c2b4feff7564138a60c01b6101f5565b610ef067349f348d36f16a8660c01b6101f5565b610f04671e07dd8eafaafe3a60c01b6101f5565b610f0d82610ff8565b610f21673a878191a87ea5c860c01b6101f5565b610f356725a02ecd46a3695960c01b6101f5565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b610f9067a8921cca236ce7c160c01b6101f5565b610fa4677058e129dbf78bd160c01b6101f5565b610fb867964297c52978b12b60c01b6101f5565b60007f127708131c7435127ed6f385809bed9360985cc735efa3ab7ce86da2c1f5fffb9050610ff16729029f646014c20860c01b6101f5565b8181555050565b61100c6785ab2cb51c91551f60c01b6101f5565b6110206707ca9d717eaa930860c01b6101f5565b611034670928196f69aefb7260c01b6101f5565b60007f9ab02dcb56b946b957b4d88c05e9905e8a50979ab2c93d1f05b7872215a93106905061106d673e1786aba82d235660c01b6101f5565b8181555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061109f82611074565b9050919050565b6110af81611094565b82525050565b60006020820190506110ca60008301846110a6565b92915050565b6000604051905090565b600080fd5b600080fd5b6110ed81611094565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b600060208284031215611126576111256110da565b5b6000611134848285016110fb565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61119082611147565b810181811067ffffffffffffffff821117156111af576111ae611158565b5b80604052505050565b60006111c26110d0565b90506111ce8282611187565b919050565b600067ffffffffffffffff8211156111ee576111ed611158565b5b6111f782611147565b9050602081019050919050565b82818337600083830152505050565b6000611226611221846111d3565b6111b8565b90508281526020810184848401111561124257611241611142565b5b61124d848285611204565b509392505050565b600082601f83011261126a5761126961113d565b5b813561127a848260208601611213565b91505092915050565b6000806040838503121561129a576112996110da565b5b60006112a8858286016110fb565b925050602083013567ffffffffffffffff8111156112c9576112c86110df565b5b6112d585828601611255565b9150509250929050565b60008115159050919050565b6112f4816112df565b81146112ff57600080fd5b50565b600081359050611311816112eb565b92915050565b60006020828403121561132d5761132c6110da565b5b600061133b84828501611302565b91505092915050565b61134d816112df565b82525050565b60006020820190506113686000830184611344565b92915050565b600082825260208201905092915050565b7f4f776e6564557067726164656162696c69747950726f78793a20464f5242494460008201527f44454e0000000000000000000000000000000000000000000000000000000000602082015250565b60006113db60238361136e565b91506113e68261137f565b604082019050919050565b6000602082019050818103600083015261140a816113ce565b9050919050565b7f4f776e6564557067726164656162696c69747950726f78793a20494e56414c4960008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b600061146d60218361136e565b915061147882611411565b604082019050919050565b6000602082019050818103600083015261149c81611460565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156114d75780820151818401526020810190506114bc565b60008484015250505050565b60006114ee826114a3565b6114f881856114ae565b93506115088185602086016114b9565b80840191505092915050565b600061152082846114e3565b915081905092915050565b600060408201905061154060008301856110a6565b61154d60208301846110a6565b939250505056fea26469706673582212207f21ceac1462f1c46671388f4b2cc5580636363568caa2676f6fb7360e2791eb64736f6c63430008120033";

type EnderProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderProxy__factory extends ContractFactory {
  constructor(...args: EnderProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderProxy__factory {
    return super.connect(runner) as EnderProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderProxyInterface {
    return new Interface(_abi) as EnderProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EnderProxy {
    return new Contract(address, _abi, runner) as unknown as EnderProxy;
  }
}
