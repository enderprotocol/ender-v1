/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderTreasury,
  EnderTreasuryInterface,
} from "../../contracts/EnderTreasury";

const _abi = [
  {
    inputs: [],
    name: "AlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBaseRate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRatio",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTreasury",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "addrType",
        type: "uint8",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bondYieldBaseRate",
        type: "uint256",
      },
    ],
    name: "BondYieldBaseRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Collect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MintEndToUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nominalYield",
        type: "uint256",
      },
    ],
    name: "NominalYieldUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "priorityStrategy",
        type: "address",
      },
    ],
    name: "PriorityStrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TreasuryDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TreasuryWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "availableFundsPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceLastEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondYieldBaseRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stEthAddress",
        type: "address",
      },
    ],
    name: "calculateDepositReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "depositReturn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmt",
        type: "uint256",
      },
    ],
    name: "checkDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "depositable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmt",
        type: "uint256",
      },
    ],
    name: "depositInStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
    ],
    name: "depositTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eigenLayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochWithdrawl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fundsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getQueueBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_endToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_enderStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bond",
        type: "address",
      },
      {
        internalType: "address",
        name: "_instadapp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lybraFinance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eigenLayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_availableFundsPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveFundsPercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initializeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "instadapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lybraFinance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintEndToUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominalYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priorityStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFundsPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "setAddressBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBaseRate",
        type: "uint256",
      },
    ],
    name: "setBondYieldBaseRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nominalYield",
        type: "uint256",
      },
    ],
    name: "setNominalYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priorityStrategy",
        type: "address",
      },
    ],
    name: "setPriorityStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_strs",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_flag",
        type: "bool",
      },
    ],
    name: "setStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_str",
        type: "address",
      },
    ],
    name: "setTokenStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "stakeRebasingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "rebaseReward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "strategyToReceiptToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalAssetStakedInStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalRewardsFromStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_withdrawAmt",
        type: "uint256",
      },
    ],
    name: "withdrawFromStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "_returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061381c8061001d5f395ff3fe608060405260043610610283575f3560e01c8063715018a611610155578063ae846a90116100be578063cb7cc7b211610078578063cb7cc7b2146107d9578063d4c03e73146107f8578063e197024c14610823578063ec07537a14610838578063f2fde38b14610857578063f47a476f14610876575f80fd5b8063ae846a901461071d578063b224d54314610748578063b93f9b0a14610767578063bfa06b1914610786578063c2961d381461079b578063c3b8a778146107ba575f80fd5b80638da5cb5b1161010f5780638da5cb5b1461063557806395d560f914610652578063985fdc8c14610671578063a27718a9146106c0578063a59a9db8146106df578063a8c62e76146106fe575f80fd5b8063715018a61461057157806373bc9dcf146105855780637893c243146105985780637a41304c146105b75780637cabd840146105e25780637ef8326214610601575f80fd5b806339ebf823116101f757806361d027b3116101b157806361d027b3146104c15780636711725e146104e05780636b8357ac146104f55780636eee8181146105145780636fd362761461053357806370db690214610552575f80fd5b806339ebf823146103fc578063485cc9551461043a5780634a42d2ae146104595780634b8f17ec1461046e5780635dee92a61461048d578063603de727146104ac575f80fd5b806317f2aeef1161024857806317f2aeef1461034c57806327271b3d1461036b5780632b18521d1461038a5780632e71d678146103a9578063313e7a62146103be57806334f5e8e8146103dd575f80fd5b806301d6be7a1461028e5780630a59e8f2146102b65780630f198b30146102ed5780630f8474aa1461030c578063156702ad1461032d575f80fd5b3661028a57005b5f80fd5b348015610299575f80fd5b506102a3607b5481565b6040519081526020015b60405180910390f35b3480156102c1575f80fd5b506072546102d5906001600160a01b031681565b6040516001600160a01b0390911681526020016102ad565b3480156102f8575f80fd5b506102a3610307366004612ecf565b610895565b348015610317575f80fd5b5061032b610326366004612ef0565b6109cc565b005b348015610338575f80fd5b506076546102d5906001600160a01b031681565b348015610357575f80fd5b5061032b610366366004612f29565b610c8e565b348015610376575f80fd5b506102a3610385366004612f29565b610cdf565b348015610395575f80fd5b506073546102d5906001600160a01b031681565b3480156103b4575f80fd5b506102a3607e5481565b3480156103c9575f80fd5b5061032b6103d8366004612f42565b610ebb565b3480156103e8575f80fd5b5061032b6103f7366004612f59565b610eff565b348015610407575f80fd5b5061042a610416366004612f29565b606a6020525f908152604090205460ff1681565b60405190151581526020016102ad565b348015610445575f80fd5b5061032b610454366004612f81565b610fd0565b348015610464575f80fd5b506102a3607a5481565b348015610479575f80fd5b506102a3610488366004612ecf565b6110b4565b348015610498575f80fd5b5061032b6104a7366004612ecf565b61149b565b3480156104b7575f80fd5b506102a360795481565b3480156104cc575f80fd5b506065546102d5906001600160a01b031681565b3480156104eb575f80fd5b506102a360785481565b348015610500575f80fd5b5061032b61050f366004612f59565b61167f565b34801561051f575f80fd5b5061032b61052e366004612fb2565b611758565b34801561053e575f80fd5b5061042a61054d366004612f59565b6117d9565b34801561055d575f80fd5b5061032b61056c366004612f59565b6118d7565b34801561057c575f80fd5b5061032b611a57565b348015610590575f80fd5b50600161042a565b3480156105a3575f80fd5b5061032b6105b2366004612fe8565b611a6a565b3480156105c2575f80fd5b506102a36105d1366004612f29565b606d6020525f908152604090205481565b3480156105ed575f80fd5b506102a36105fc366004612ef0565b611b71565b34801561060c575f80fd5b506102d561061b366004612f29565b606e6020525f90815260409020546001600160a01b031681565b348015610640575f80fd5b506033546001600160a01b03166102d5565b34801561065d575f80fd5b5061032b61066c366004612fb2565b611f68565b34801561067c575f80fd5b506106ab61068b366004612f29565b6001600160a01b03165f9081526069602052604090205463ffffffff1690565b60405163ffffffff90911681526020016102ad565b3480156106cb575f80fd5b506074546102d5906001600160a01b031681565b3480156106ea575f80fd5b506067546102d5906001600160a01b031681565b348015610709575f80fd5b506066546102d5906001600160a01b031681565b348015610728575f80fd5b506102a3610737366004612f29565b606b6020525f908152604090205481565b348015610753575f80fd5b506102a3610762366004612f29565b6120cf565b348015610772575f80fd5b506102d5610781366004612f42565b6124eb565b348015610791575f80fd5b506102a3607d5481565b3480156107a6575f80fd5b5061032b6107b5366004612f42565b612550565b3480156107c5575f80fd5b5061032b6107d4366004613067565b6125ad565b3480156107e4575f80fd5b5061032b6107f336600461309f565b612669565b348015610803575f80fd5b506102a3610812366004612f29565b606c6020525f908152604090205481565b34801561082e575f80fd5b506102a3607c5481565b348015610843575f80fd5b5061032b610852366004612f29565b612848565b348015610862575f80fd5b5061032b610871366004612f29565b612899565b348015610881575f80fd5b506075546102d5906001600160a01b031681565b6065545f906001600160a01b031633146108c25760405163b90cdbb160e01b815260040160405180910390fd5b6020820151606654604080850151905163095ea7b360e01b81526001600160a01b039384169363095ea7b3936108fd93911691600401613133565b6020604051808303815f875af1158015610919573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093d919061314c565b50606654606754602084015160408086015190516373d0285560e11b81526001600160a01b0393841660048201529183166024830152604482015291169063e7a050aa906064016020604051808303815f875af11580156109a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c49190613167565b90505b919050565b6066546001600160a01b03165f818152606a602052604090205460ff16610a0657604051631eb49d6d60e11b815260040160405180910390fd5b815f03610a2657604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384161580610a4357506001600160a01b038316155b15610a615760405163d92e233d60e01b815260040160405180910390fd5b6073546001600160a01b0390811690841603610b4b5760405163095ea7b360e01b81526001600160a01b0385169063095ea7b390610aa59086908690600401613133565b6020604051808303815f875af1158015610ac1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae5919061314c565b50607354604051636e553f6560e01b8152600481018490523060248201526001600160a01b0390911690636e553f65906044015b5f604051808303815f87803b158015610b30575f80fd5b505af1158015610b42573d5f803e3d5ffd5b50505050610c0d565b6074546001600160a01b0390811690841603610c0d5760745460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392610b9592909116908690600401613133565b6020604051808303815f875af1158015610bb1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bd5919061314c565b5060745460405163abbc421760e01b8152600481018490525f60248201526001600160a01b039091169063abbc421790604401610b19565b6001600160a01b0384165f908152606c602052604081208054849290610c34908490613192565b92505081905550826001600160a01b0316846001600160a01b03167f49e9138fe0dacf001ea634236e38aa8bd229efd55ec4d7975228d679db6ce8f984604051610c8091815260200190565b60405180910390a350505050565b610c96612912565b607680546001600160a01b0319166001600160a01b0383169081179091556040517f196cda38d79e0196b2e1a73360bb53679acd47a5c420a8fef525d29854e2f9f4905f90a250565b5f80610cea8361296c565b9050801580610cf95750607954155b15610d06575f9150610eb5565b610d42604051806060016040528060388152602001613735603891396001600160a01b0385165f908152606b60205260409020546079546129fe565b6001600160a01b0383165f818152606b6020526040908190205490516370a0823160e01b8152306004820152610df8928492918391906370a0823190602401602060405180830381865afa158015610d9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dc09190613167565b610dca91906131ab565b6040518060400160405280601081526020016f0c4c2d8c2dcc6ca98c2e6e88ae0dec6d60831b815250612a45565b6040516370a0823160e01b8152306004820152620186a09082906001600160a01b038616906370a0823190602401602060405180830381865afa158015610e41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e659190613167565b610e6f91906131ab565b6001600160a01b0385165f908152606b6020526040902054610e9490620186a06131be565b610e9e91906131d5565b610ea890836131be565b610eb291906131d5565b91505b50919050565b610ec3612912565b607a8190556040518181527f86a66f3738ea86730189c6ff389dc4e49ba8e83577c6c1bff9e8d31e63fb5512906020015b60405180910390a150565b6070546001600160a01b03163314610f2a57604051631eb49d6d60e11b815260040160405180910390fd5b606f546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610f5c9085908590600401613133565b5f604051808303815f87803b158015610f73575f80fd5b505af1158015610f85573d5f803e3d5ffd5b50505050816001600160a01b03167f3ab7e14424c6889ad9175fefa0e71f26330c93da54fd470ecc7876c3db8d0e0482604051610fc491815260200190565b60405180910390a25050565b5f54610100900460ff1615808015610fee57505f54600160ff909116105b806110075750303b15801561100757505f5460ff166001145b61102c5760405162461bcd60e51b8152600401611023906131f4565b60405180910390fd5b5f805460ff19166001179055801561104d575f805461ff0019166101001790555b611055612a8e565b6110608260016125ad565b61106a835f6125ad565b80156110af575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6065545f906001600160a01b031633146110e15760405163b90cdbb160e01b815260040160405180910390fd5b81516001600160a01b03165f9081526069602052604081205463ffffffff16900361111e576040516294861760e21b815260040160405180910390fd5b60408051808201825230815283516001600160a01b03165f90815260686020908152838220546001600160601b031681840152835160018082528186019095529293919291908281019080368337505060675482519293506001600160a01b0316918391505f9061119157611191613242565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092525f918160200160208202803683370190505090508460400151815f815181106111e4576111e4613242565b6020908102919091018101919091526040805160c08101825284815280830184905230818301526060810186905287516001600160a01b03165f908152606984528281205463ffffffff16608083015260a0820181905282516001808252818501909452919390929082810190803683370190505090508660200151815f8151811061127257611272613242565b6001600160a01b039283166020918202929092018101919091528801516040516370a0823160e01b81523060048201525f9291909116906370a0823190602401602060405180830381865afa1580156112cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112f19190613167565b60665460405163f3be65d360e01b81529192506001600160a01b03169063f3be65d39061132990869086905f906001906004016132c6565b5f604051808303815f87803b158015611340575f80fd5b505af1158015611352573d5f803e3d5ffd5b5050505060208801516040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561139e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113c29190613167565b89516001600160a01b039081165f908152606960209081526040808320805463ffffffff191690558d5184168352606882529182902080546001600160601b03808216600101166bffffffffffffffffffffffff199091161790558c0151606554915163a9059cbb60e01b81529490930394509181169263a9059cbb9261144f9216908590600401613133565b6020604051808303815f875af115801561146b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148f919061314c565b50979650505050505050565b6065546001600160a01b031633146114c65760405163b90cdbb160e01b815260040160405180910390fd5b80516001600160a01b03165f9081526069602052604090205463ffffffff161561150357604051632981f6c160e11b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683370190505090505f815f8151811061153757611537613242565b60209081029190910101526040805160018082528183019092525f918160200160208202803683370190505090508260400151815f8151811061157c5761157c613242565b60209081029190910101526040805160018082528183019092525f91816020016020820280368337505060675482519293506001600160a01b0316918391505f906115c9576115c9613242565b6001600160a01b039283166020918202929092010152606654604051637891cc8f60e11b815291169063f123991e9061160e9086908590879030905f906004016133cf565b6020604051808303815f875af115801561162a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061164e9190613167565b505091516001600160a01b03165f908152606960205260409020805463ffffffff19164363ffffffff161790555050565b6070546001600160a01b031633146116aa57604051631eb49d6d60e11b815260040160405180910390fd5b606f5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906116dc9085908590600401613133565b6020604051808303815f875af11580156116f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061171c919061314c565b50816001600160a01b03167f4256a058fa2b123d727576d3d31e3a272db98ee5fe264e229610ce43dc84999982604051610fc491815260200190565b6070546001600160a01b0316331461178357604051631eb49d6d60e11b815260040160405180910390fd5b80156117a75760208201516076546117a591906001600160a01b031683611b71565b505b50604080820151607d8054820190556020928301516001600160a01b03165f908152606b909352912080549091019055565b5f8060675f9054906101000a90046001600160a01b03166001600160a01b03166361b01b5d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561182b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061184f9190613167565b6067546040516370a0823160e01b81526001600160a01b0391821660048201529192505f91908616906370a0823190602401602060405180830381865afa15801561189c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118c09190613167565b9050816118cd8583613192565b1195945050505050565b6118df612912565b6001600160a01b0382166119065760405163d92e233d60e01b815260040160405180910390fd5b8060010361192d57606f80546001600160a01b0319166001600160a01b0384161790555050565b8060020361195457607080546001600160a01b0319166001600160a01b0384161790555050565b8060030361197b57607180546001600160a01b0319166001600160a01b0384161790555050565b806004036119a257607780546001600160a01b0319166001600160a01b0384161790555050565b806005036119de576073546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555050565b80600603611a1a576074546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555050565b80600703611a53576075546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555b5050565b611a5f612912565b611a685f612abc565b565b611a72612912565b5f829003611a9357604051632711b74d60e11b815260040160405180910390fd5b5f5b60ff8116831115611b6b5781606a5f86868560ff16818110611ab957611ab9613242565b9050602002016020810190611ace9190612f29565b6001600160a01b0316815260208101919091526040015f20805460ff1916911515919091179055838360ff8316818110611b0a57611b0a613242565b9050602002016020810190611b1f9190612f29565b6001600160a01b03167ffc2e7375e815d084de88de8e8e356e71102275019b06a1b529eee0c8ab57cd3483604051611b5b911515815260200190565b60405180910390a2600101611a95565b50505050565b6001600160a01b0382165f908152606a6020526040812054839060ff16611bab57604051631eb49d6d60e11b815260040160405180910390fd5b611bdc6040518060400160405280600f81526020016e0626c6f636b2e74696d657374616d7608c1b81525042612b0d565b825f03611bfc57604051631f2a200560e01b815260040160405180910390fd5b611c1f6040518060600160405280602f815260200161376d602f91398686612b52565b6001600160a01b0385161580611c3c57506001600160a01b038416155b15611c5a5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038085165f908152606e6020908152604091829020548251808401909352600c83526b3932b1b2b4b83a2a37b5b2b760a11b9183019190915290911690611ca89082612b99565b6073546001600160a01b0390811690861603611db35760735460405163095ea7b360e01b81526001600160a01b038381169263095ea7b392611cf292909116908890600401613133565b6020604051808303815f875af1158015611d0e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d32919061314c565b50607354604051632d182be560e21b815260048101869052306024820181905260448201526001600160a01b039091169063b460af94906064016020604051808303815f875af1158015611d88573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dac9190613167565b9250611eb3565b6074546001600160a01b0390811690861603611eb35760745460405163095ea7b360e01b81526001600160a01b038381169263095ea7b392611dfd92909116908890600401613133565b6020604051808303815f875af1158015611e19573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e3d919061314c565b5060745460405163f3fef3a360e01b81526001600160a01b039091169063f3fef3a390611e709030908890600401613133565b6020604051808303815f875af1158015611e8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611eb09190613167565b92505b6001600160a01b0386165f908152606c602052604081208054869290611eda9084906131ab565b90915550508215611f12576001600160a01b0386165f908152606d602052604081208054859290611f0c908490613192565b90915550505b846001600160a01b0316866001600160a01b03167f8c173542e888cab0078a82069caa28a8f24372517b278ca23b7d1b314027aacd85604051611f5791815260200190565b60405180910390a350509392505050565b6070546001600160a01b03163314611f9357604051631eb49d6d60e11b815260040160405180910390fd5b60208201516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611fdb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fff9190613167565b81111561202457602082015160765461202291906001600160a01b031683611b71565b505b8160400151607e5f8282546120399190613192565b90915550506040808301516020808501516001600160a01b03165f908152606b9091529182208054919290916120709084906131ab565b909155505081516020830151604084015161208c929190612bde565b81602001516001600160a01b03167fdab9e1269b4840c2a5e425eceb614f788c03c0706647b9b6c96bb18b23d64dba8360400151604051610fc491815260200190565b6072545f906001600160a01b031633146120fc57604051631eb49d6d60e11b815260040160405180910390fd5b6070546040805163017043a560e01b815290515f926001600160a01b03169163017043a5916004808301926020929190829003018187875af1158015612144573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121689190613167565b90505f61217484610cdf565b90506121a5816040518060400160405280600d81526020016c3232b837b9b4ba2932ba3ab93760991b815250612cca565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156121e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061220b9190613167565b6079555f819003612228575f607e819055607d81905592506124b6565b6077546040516341976e0960e01b81525f600482018190529182916001600160a01b03909116906341976e09906024016040805180830381865afa158015612272573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122969190613459565b607754606f546040516341976e0960e01b81526001600160a01b03918216600482015293955060ff9290921693505f928392909116906341976e09906024016040805180830381865afa1580156122ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123139190613459565b60ff169150915061232682858789612d0f565b61233183600a613561565b61233b86866131be565b61234591906131d5565b9450612377856040518060400160405280600e81526020016d03232b837b9b4ba2932ba3ab937160951b815250612cca565b61238281600a613561565b61238c87846131be565b61239691906131d5565b95506123cc8660405180604001604052806012815260200171103137b732103932ba3ab9371030b33a32b960711b815250612cca565b6123ed6040518060800160405280604b815260200161379c604b9139612d63565b6123fa8587607a54612da6565b612710607a548661240b91906131be565b61241591906131d5565b61241f87876131ab565b6124299190613192565b96508161243784600a613561565b61244190896131be565b61244b91906131d5565b5f607e819055607d8190556070546040805163fd46afb760e01b81529051939a506001600160a01b039091169263fd46afb79260048084019391929182900301818387803b15801561249b575f80fd5b505af11580156124ad573d5f803e3d5ffd5b50505050505050505b6124e46040518060400160405280600c81526020016b1c9958985cd954995dd85c9960a21b81525084612b0d565b5050919050565b5f81600103612505575050606f546001600160a01b031690565b8160020361251e5750506070546001600160a01b031690565b816003036125375750506071546001600160a01b031690565b816004036109c75750506077546001600160a01b031690565b612558612912565b805f0361257857604051632e2dab4360e01b815260040160405180910390fd5b60788190556040518181527f60c125b6240a60fa186be7014ecce85a874c437e25b8d24e99bec1d8f21058fc90602001610ef4565b6125b5612912565b6001600160a01b0382166125dc5760405163d92e233d60e01b815260040160405180910390fd5b5f8160018111156125ef576125ef61356c565b0361261457606580546001600160a01b0319166001600160a01b038416179055612630565b606680546001600160a01b0319166001600160a01b0384161790555b816001600160a01b03167f8fe7ce0635de0c05ead622279bdcf4c4e71d0da07afd43a42c93236b77217ca682604051610fc49190613580565b5f54610100900460ff161580801561268757505f54600160ff909116105b806126a05750303b1580156126a057505f5460ff166001145b6126bc5760405162461bcd60e51b8152600401611023906131f4565b5f805460ff1916600117905580156126dd575f805461ff0019166101001790555b836046141580156126ef575082601e14155b1561270d5760405163648564d360e01b815260040160405180910390fd5b612715612a8e565b607280546001600160a01b03199081166001600160a01b038c8116919091179092556077805482168584161790556073805482168a84169081179091556074805483168a8516178155607580549093168985161783555f918252606a6020526040808320805460ff199081166001908117909255925486168452818420805484168217905593549094168252929020805490921681179091556127b9908b906118d7565b6127c48860026118d7565b6127cf61012c612550565b607354607680546001600160a01b0319166001600160a01b039092169190911790556101f4607a55801561283c575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b612850612912565b6001600160a01b0381166128775760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b6128a1612912565b6001600160a01b0381166129065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611023565b61290f81612abc565b50565b6033546001600160a01b03163314611a685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611023565b607954607d54607e546040516370a0823160e01b81523060048201525f939291906001600160a01b038616906370a0823190602401602060405180830381865afa1580156129bc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129e09190613167565b6129ea9190613192565b6129f491906131ab565b6109c491906131ab565b6110af838383604051602401612a16939291906135e9565b60408051601f198184030181529190526020810180516001600160e01b031663ca47c4eb60e01b179052612df0565b611b6b84848484604051602401612a5f949392919061360d565b60408051601f198184030181529190526020810180516001600160e01b03166359cfcbe360e01b179052612df0565b5f54610100900460ff16612ab45760405162461bcd60e51b81526004016110239061363b565b611a68612df9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b611a538282604051602401612b23929190613686565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052612df0565b6110af838383604051602401612b6a939291906136a7565b60408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b179052612df0565b611a538282604051602401612baf9291906136d9565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052612df0565b6001600160a01b038216612c5c575f836001600160a01b0316826040515f6040518083038185875af1925050503d805f8114612c35576040519150601f19603f3d011682016040523d82523d5f602084013e612c3a565b606091505b5050905080611b6b576040516312171d8360e31b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90612c8a9086908590600401613133565b6020604051808303815f875af1158015612ca6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b6b919061314c565b611a538282604051602401612ce0929190613702565b60408051601f198184030181529190526020810180516001600160e01b031663643fd0df60e01b179052612df0565b60405160248101859052604481018490526064810183905260848101829052611b6b9060a40160408051601f198184030181529190526020810180516001600160e01b0316620327f760eb1b179052612df0565b61290f81604051602401612d779190613722565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612df0565b6040516024810184905260448101839052606481018290526110af9060840160408051601f198184030181529190526020810180516001600160e01b031663347b5e8f60e21b1790525b61290f81612e28565b5f54610100900460ff16612e1f5760405162461bcd60e51b81526004016110239061363b565b611a6833612abc565b5f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b80356001600160a01b03811681146109c7575f80fd5b5f60608284031215612e6d575f80fd5b6040516060810181811067ffffffffffffffff82111715612e9c57634e487b7160e01b5f52604160045260245ffd5b604052905080612eab83612e47565b8152612eb960208401612e47565b6020820152604083013560408201525092915050565b5f60608284031215612edf575f80fd5b612ee98383612e5d565b9392505050565b5f805f60608486031215612f02575f80fd5b612f0b84612e47565b9250612f1960208501612e47565b9150604084013590509250925092565b5f60208284031215612f39575f80fd5b612ee982612e47565b5f60208284031215612f52575f80fd5b5035919050565b5f8060408385031215612f6a575f80fd5b612f7383612e47565b946020939093013593505050565b5f8060408385031215612f92575f80fd5b612f9b83612e47565b9150612fa960208401612e47565b90509250929050565b5f8060808385031215612fc3575f80fd5b612fcd8484612e5d565b946060939093013593505050565b801515811461290f575f80fd5b5f805f60408486031215612ffa575f80fd5b833567ffffffffffffffff80821115613011575f80fd5b818601915086601f830112613024575f80fd5b813581811115613032575f80fd5b8760208260051b8501011115613046575f80fd5b6020928301955093505084013561305c81612fdb565b809150509250925092565b5f8060408385031215613078575f80fd5b61308183612e47565b9150602083013560028110613094575f80fd5b809150509250929050565b5f805f805f805f805f6101208a8c0312156130b8575f80fd5b6130c18a612e47565b98506130cf60208b01612e47565b97506130dd60408b01612e47565b96506130eb60608b01612e47565b95506130f960808b01612e47565b945061310760a08b01612e47565b935060c08a0135925060e08a013591506131246101008b01612e47565b90509295985092959850929598565b6001600160a01b03929092168252602082015260400190565b5f6020828403121561315c575f80fd5b8151612ee981612fdb565b5f60208284031215613177575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156131a5576131a561317e565b92915050565b818103818111156131a5576131a561317e565b80820281158282048414176131a5576131a561317e565b5f826131ef57634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f8151808452602080850194508084015f5b8381101561328457815187529582019590820190600101613268565b509495945050505050565b5f8151808452602080850194508084015f5b838110156132845781516001600160a01b0316875295820195908201906001016132a1565b608081525f6101608201865160e06080850152818151808452610180860191506020935083830192505f5b818110156133185783516001600160a01b03168352602083019385019392506001016132f1565b505088830151858203607f190160a087015291506133368183613256565b915050604088015161335360c08601826001600160a01b03169052565b50606088015180516001600160a01b0390811660e08701526020909101516001600160601b0316610100860152608089015163ffffffff1661012086015260a089015116610140850152838103828501526133ae818861328f565b925050508360408301526133c6606083018415159052565b95945050505050565b60a081525f6133e160a0830188613256565b8281036020848101919091528751808352888201928201905f5b818110156134205784516001600160a01b0316835293830193918301916001016133fb565b505084810360408601526134348189613256565b6001600160a01b03979097166060860152505050509015156080909101529392505050565b5f806040838503121561346a575f80fd5b82519150602083015160ff81168114613094575f80fd5b600181815b808511156134bb57815f19048211156134a1576134a161317e565b808516156134ae57918102915b93841c9390800290613486565b509250929050565b5f826134d1575060016131a5565b816134dd57505f6131a5565b81600181146134f357600281146134fd57613519565b60019150506131a5565b60ff84111561350e5761350e61317e565b50506001821b6131a5565b5060208310610133831016604e8410600b841016171561353c575081810a6131a5565b6135468383613481565b805f19048211156135595761355961317e565b029392505050565b5f612ee983836134c3565b634e487b7160e01b5f52602160045260245ffd5b60208101600283106135a057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f81518084525f5b818110156135ca576020818501810151868301820152016135ae565b505f602082860101526020601f19601f83011685010191505092915050565b606081525f6135fb60608301866135a6565b60208301949094525060400152919050565b848152836020820152826040820152608060608201525f61363160808301846135a6565b9695505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081525f61369860408301856135a6565b90508260208301529392505050565b606081525f6136b960608301866135a6565b6001600160a01b0394851660208401529290931660409091015292915050565b604081525f6136eb60408301856135a6565b905060018060a01b03831660208301529392505050565b828152604060208201525f61371a60408301846135a6565b949350505050565b602081525f612ee960208301846135a656fe66756e6473496e666f5b5f7374457468416464726573735d2e6465706f73697446756e6473202f2062616c616e63654c61737445706f63685f6173736574203d3d2061646472657373283029207c7c205f7374726174656779203d3d2061646472657373283029726562617365526577617264203d206465706f73697452657475726e202d20626f6e6452657475726e202b20286465706f73697452657475726e202a206e6f6d696e616c5969656c64293ba264697066735822122022465a8ad34b49014c5da0d8be5d6d62dc473cce98ce3d4584ac58e26449d5bf64736f6c63430008140033";

type EnderTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderTreasury__factory extends ContractFactory {
  constructor(...args: EnderTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderTreasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderTreasury__factory {
    return super.connect(runner) as EnderTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderTreasuryInterface {
    return new Interface(_abi) as EnderTreasuryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderTreasury {
    return new Contract(address, _abi, runner) as unknown as EnderTreasury;
  }
}
