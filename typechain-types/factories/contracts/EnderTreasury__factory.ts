/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderTreasury,
  EnderTreasuryInterface,
} from "../../contracts/EnderTreasury";

const _abi = [
  {
    inputs: [],
    name: "AlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBaseRate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRatio",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTreasury",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "addrType",
        type: "uint8",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bondYieldBaseRate",
        type: "uint256",
      },
    ],
    name: "BondYieldBaseRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Collect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MintEndToUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nominalYield",
        type: "uint256",
      },
    ],
    name: "NominalYieldUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "priorityStrategy",
        type: "address",
      },
    ],
    name: "PriorityStrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TreasuryDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TreasuryWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "availableFundsPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceLastEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondYieldBaseRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stEthAddress",
        type: "address",
      },
    ],
    name: "calculateDepositReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "depositReturn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmt",
        type: "uint256",
      },
    ],
    name: "checkDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "depositable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmt",
        type: "uint256",
      },
    ],
    name: "depositInStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
    ],
    name: "depositTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eigenLayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochWithdrawl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fundsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getQueueBlock",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_endToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_enderStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bond",
        type: "address",
      },
      {
        internalType: "address",
        name: "_instadapp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lybraFinance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eigenLayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_availableFundsPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveFundsPercentage",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initializeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "instadapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lybraFinance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintEndToUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominalYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priorityStrategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFundsPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "enum BaseStrategy.AddressTypeBase",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "setAddressBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBaseRate",
        type: "uint256",
      },
    ],
    name: "setBondYieldBaseRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nominalYield",
        type: "uint256",
      },
    ],
    name: "setNominalYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priorityStrategy",
        type: "address",
      },
    ],
    name: "setPriorityStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_strs",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_flag",
        type: "bool",
      },
    ],
    name: "setStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_str",
        type: "address",
      },
    ],
    name: "setTokenStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "stakeRebasingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "rebaseReward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "strategyToReceiptToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStrategy",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalAssetStakedInStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalRewardsFromStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_withdrawAmt",
        type: "uint256",
      },
    ],
    name: "withdrawFromStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "_returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenAmt",
            type: "uint256",
          },
        ],
        internalType: "struct IEnderBase.EndRequest",
        name: "param",
        type: "tuple",
      },
    ],
    name: "withdrawStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506138098061001d5f395ff3fe608060405260043610610283575f3560e01c8063715018a611610155578063ae846a90116100be578063cb7cc7b211610078578063cb7cc7b2146107d9578063d4c03e73146107f8578063e197024c14610823578063ec07537a14610838578063f2fde38b14610857578063f47a476f14610876575f80fd5b8063ae846a901461071d578063b224d54314610748578063b93f9b0a14610767578063bfa06b1914610786578063c2961d381461079b578063c3b8a778146107ba575f80fd5b80638da5cb5b1161010f5780638da5cb5b1461063557806395d560f914610652578063985fdc8c14610671578063a27718a9146106c0578063a59a9db8146106df578063a8c62e76146106fe575f80fd5b8063715018a61461057157806373bc9dcf146105855780637893c243146105985780637a41304c146105b75780637cabd840146105e25780637ef8326214610601575f80fd5b806339ebf823116101f757806361d027b3116101b157806361d027b3146104c15780636711725e146104e05780636b8357ac146104f55780636eee8181146105145780636fd362761461053357806370db690214610552575f80fd5b806339ebf823146103fc578063485cc9551461043a5780634a42d2ae146104595780634b8f17ec1461046e5780635dee92a61461048d578063603de727146104ac575f80fd5b806317f2aeef1161024857806317f2aeef1461034c57806327271b3d1461036b5780632b18521d1461038a5780632e71d678146103a9578063313e7a62146103be57806334f5e8e8146103dd575f80fd5b806301d6be7a1461028e5780630a59e8f2146102b65780630f198b30146102ed5780630f8474aa1461030c578063156702ad1461032d575f80fd5b3661028a57005b5f80fd5b348015610299575f80fd5b506102a3607b5481565b6040519081526020015b60405180910390f35b3480156102c1575f80fd5b506072546102d5906001600160a01b031681565b6040516001600160a01b0390911681526020016102ad565b3480156102f8575f80fd5b506102a3610307366004612ebc565b610895565b348015610317575f80fd5b5061032b610326366004612edd565b6109cc565b005b348015610338575f80fd5b506076546102d5906001600160a01b031681565b348015610357575f80fd5b5061032b610366366004612f16565b610c88565b348015610376575f80fd5b506102a3610385366004612f16565b610cd9565b348015610395575f80fd5b506073546102d5906001600160a01b031681565b3480156103b4575f80fd5b506102a3607e5481565b3480156103c9575f80fd5b5061032b6103d8366004612f2f565b610eb5565b3480156103e8575f80fd5b5061032b6103f7366004612f46565b610ef9565b348015610407575f80fd5b5061042a610416366004612f16565b606a6020525f908152604090205460ff1681565b60405190151581526020016102ad565b348015610445575f80fd5b5061032b610454366004612f6e565b610fca565b348015610464575f80fd5b506102a3607a5481565b348015610479575f80fd5b506102a3610488366004612ebc565b6110ae565b348015610498575f80fd5b5061032b6104a7366004612ebc565b611495565b3480156104b7575f80fd5b506102a360795481565b3480156104cc575f80fd5b506065546102d5906001600160a01b031681565b3480156104eb575f80fd5b506102a360785481565b348015610500575f80fd5b5061032b61050f366004612f46565b611679565b34801561051f575f80fd5b5061032b61052e366004612f9f565b611752565b34801561053e575f80fd5b5061042a61054d366004612f46565b6117d3565b34801561055d575f80fd5b5061032b61056c366004612f46565b6118d1565b34801561057c575f80fd5b5061032b611a51565b348015610590575f80fd5b50600161042a565b3480156105a3575f80fd5b5061032b6105b2366004612fd5565b611a64565b3480156105c2575f80fd5b506102a36105d1366004612f16565b606d6020525f908152604090205481565b3480156105ed575f80fd5b506102a36105fc366004612edd565b611b6b565b34801561060c575f80fd5b506102d561061b366004612f16565b606e6020525f90815260409020546001600160a01b031681565b348015610640575f80fd5b506033546001600160a01b03166102d5565b34801561065d575f80fd5b5061032b61066c366004612f9f565b611f55565b34801561067c575f80fd5b506106ab61068b366004612f16565b6001600160a01b03165f9081526069602052604090205463ffffffff1690565b60405163ffffffff90911681526020016102ad565b3480156106cb575f80fd5b506074546102d5906001600160a01b031681565b3480156106ea575f80fd5b506067546102d5906001600160a01b031681565b348015610709575f80fd5b506066546102d5906001600160a01b031681565b348015610728575f80fd5b506102a3610737366004612f16565b606b6020525f908152604090205481565b348015610753575f80fd5b506102a3610762366004612f16565b6120bc565b348015610772575f80fd5b506102d5610781366004612f2f565b6124d8565b348015610791575f80fd5b506102a3607d5481565b3480156107a6575f80fd5b5061032b6107b5366004612f2f565b61253d565b3480156107c5575f80fd5b5061032b6107d4366004613054565b61259a565b3480156107e4575f80fd5b5061032b6107f336600461308c565b612656565b348015610803575f80fd5b506102a3610812366004612f16565b606c6020525f908152604090205481565b34801561082e575f80fd5b506102a3607c5481565b348015610843575f80fd5b5061032b610852366004612f16565b612835565b348015610862575f80fd5b5061032b610871366004612f16565b612886565b348015610881575f80fd5b506075546102d5906001600160a01b031681565b6065545f906001600160a01b031633146108c25760405163b90cdbb160e01b815260040160405180910390fd5b6020820151606654604080850151905163095ea7b360e01b81526001600160a01b039384169363095ea7b3936108fd93911691600401613120565b6020604051808303815f875af1158015610919573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093d9190613139565b50606654606754602084015160408086015190516373d0285560e11b81526001600160a01b0393841660048201529183166024830152604482015291169063e7a050aa906064016020604051808303815f875af11580156109a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c49190613154565b90505b919050565b6066546001600160a01b03165f818152606a602052604090205460ff16610a0657604051631eb49d6d60e11b815260040160405180910390fd5b815f03610a2657604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384161580610a4357506001600160a01b038316155b15610a615760405163d92e233d60e01b815260040160405180910390fd5b6073546001600160a01b0390811690841603610b455760405163095ea7b360e01b81526001600160a01b0385169063095ea7b390610aa59086908690600401613120565b6020604051808303815f875af1158015610ac1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ae59190613139565b5060735460405163b6b55f2560e01b8152600481018490526001600160a01b039091169063b6b55f25906024015b5f604051808303815f87803b158015610b2a575f80fd5b505af1158015610b3c573d5f803e3d5ffd5b50505050610c07565b6074546001600160a01b0390811690841603610c075760745460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392610b8f92909116908690600401613120565b6020604051808303815f875af1158015610bab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bcf9190613139565b5060745460405163abbc421760e01b8152600481018490525f60248201526001600160a01b039091169063abbc421790604401610b13565b6001600160a01b0384165f908152606c602052604081208054849290610c2e90849061317f565b92505081905550826001600160a01b0316846001600160a01b03167f49e9138fe0dacf001ea634236e38aa8bd229efd55ec4d7975228d679db6ce8f984604051610c7a91815260200190565b60405180910390a350505050565b610c906128ff565b607680546001600160a01b0319166001600160a01b0383169081179091556040517f196cda38d79e0196b2e1a73360bb53679acd47a5c420a8fef525d29854e2f9f4905f90a250565b5f80610ce483612959565b9050801580610cf35750607954155b15610d00575f9150610eaf565b610d3c604051806060016040528060388152602001613722603891396001600160a01b0385165f908152606b60205260409020546079546129eb565b6001600160a01b0383165f818152606b6020526040908190205490516370a0823160e01b8152306004820152610df2928492918391906370a0823190602401602060405180830381865afa158015610d96573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dba9190613154565b610dc49190613198565b6040518060400160405280601081526020016f0c4c2d8c2dcc6ca98c2e6e88ae0dec6d60831b815250612a32565b6040516370a0823160e01b8152306004820152620186a09082906001600160a01b038616906370a0823190602401602060405180830381865afa158015610e3b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e5f9190613154565b610e699190613198565b6001600160a01b0385165f908152606b6020526040902054610e8e90620186a06131ab565b610e9891906131c2565b610ea290836131ab565b610eac91906131c2565b91505b50919050565b610ebd6128ff565b607a8190556040518181527f86a66f3738ea86730189c6ff389dc4e49ba8e83577c6c1bff9e8d31e63fb5512906020015b60405180910390a150565b6070546001600160a01b03163314610f2457604051631eb49d6d60e11b815260040160405180910390fd5b606f546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610f569085908590600401613120565b5f604051808303815f87803b158015610f6d575f80fd5b505af1158015610f7f573d5f803e3d5ffd5b50505050816001600160a01b03167f3ab7e14424c6889ad9175fefa0e71f26330c93da54fd470ecc7876c3db8d0e0482604051610fbe91815260200190565b60405180910390a25050565b5f54610100900460ff1615808015610fe857505f54600160ff909116105b806110015750303b15801561100157505f5460ff166001145b6110265760405162461bcd60e51b815260040161101d906131e1565b60405180910390fd5b5f805460ff191660011790558015611047575f805461ff0019166101001790555b61104f612a7b565b61105a82600161259a565b611064835f61259a565b80156110a9575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6065545f906001600160a01b031633146110db5760405163b90cdbb160e01b815260040160405180910390fd5b81516001600160a01b03165f9081526069602052604081205463ffffffff169003611118576040516294861760e21b815260040160405180910390fd5b60408051808201825230815283516001600160a01b03165f90815260686020908152838220546001600160601b031681840152835160018082528186019095529293919291908281019080368337505060675482519293506001600160a01b0316918391505f9061118b5761118b61322f565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092525f918160200160208202803683370190505090508460400151815f815181106111de576111de61322f565b6020908102919091018101919091526040805160c08101825284815280830184905230818301526060810186905287516001600160a01b03165f908152606984528281205463ffffffff16608083015260a0820181905282516001808252818501909452919390929082810190803683370190505090508660200151815f8151811061126c5761126c61322f565b6001600160a01b039283166020918202929092018101919091528801516040516370a0823160e01b81523060048201525f9291909116906370a0823190602401602060405180830381865afa1580156112c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112eb9190613154565b60665460405163f3be65d360e01b81529192506001600160a01b03169063f3be65d39061132390869086905f906001906004016132b3565b5f604051808303815f87803b15801561133a575f80fd5b505af115801561134c573d5f803e3d5ffd5b5050505060208801516040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611398573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113bc9190613154565b89516001600160a01b039081165f908152606960209081526040808320805463ffffffff191690558d5184168352606882529182902080546001600160601b03808216600101166bffffffffffffffffffffffff199091161790558c0151606554915163a9059cbb60e01b81529490930394509181169263a9059cbb926114499216908590600401613120565b6020604051808303815f875af1158015611465573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114899190613139565b50979650505050505050565b6065546001600160a01b031633146114c05760405163b90cdbb160e01b815260040160405180910390fd5b80516001600160a01b03165f9081526069602052604090205463ffffffff16156114fd57604051632981f6c160e11b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683370190505090505f815f815181106115315761153161322f565b60209081029190910101526040805160018082528183019092525f918160200160208202803683370190505090508260400151815f815181106115765761157661322f565b60209081029190910101526040805160018082528183019092525f91816020016020820280368337505060675482519293506001600160a01b0316918391505f906115c3576115c361322f565b6001600160a01b039283166020918202929092010152606654604051637891cc8f60e11b815291169063f123991e906116089086908590879030905f906004016133bc565b6020604051808303815f875af1158015611624573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116489190613154565b505091516001600160a01b03165f908152606960205260409020805463ffffffff19164363ffffffff161790555050565b6070546001600160a01b031633146116a457604051631eb49d6d60e11b815260040160405180910390fd5b606f5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906116d69085908590600401613120565b6020604051808303815f875af11580156116f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117169190613139565b50816001600160a01b03167f4256a058fa2b123d727576d3d31e3a272db98ee5fe264e229610ce43dc84999982604051610fbe91815260200190565b6070546001600160a01b0316331461177d57604051631eb49d6d60e11b815260040160405180910390fd5b80156117a157602082015160765461179f91906001600160a01b031683611b6b565b505b50604080820151607d8054820190556020928301516001600160a01b03165f908152606b909352912080549091019055565b5f8060675f9054906101000a90046001600160a01b03166001600160a01b03166361b01b5d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611825573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118499190613154565b6067546040516370a0823160e01b81526001600160a01b0391821660048201529192505f91908616906370a0823190602401602060405180830381865afa158015611896573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ba9190613154565b9050816118c7858361317f565b1195945050505050565b6118d96128ff565b6001600160a01b0382166119005760405163d92e233d60e01b815260040160405180910390fd5b8060010361192757606f80546001600160a01b0319166001600160a01b0384161790555050565b8060020361194e57607080546001600160a01b0319166001600160a01b0384161790555050565b8060030361197557607180546001600160a01b0319166001600160a01b0384161790555050565b8060040361199c57607780546001600160a01b0319166001600160a01b0384161790555050565b806005036119d8576073546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555050565b80600603611a14576074546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555050565b80600703611a4d576075546001600160a01b039081165f908152606e6020526040902080546001600160a01b0319169184169190911790555b5050565b611a596128ff565b611a625f612aa9565b565b611a6c6128ff565b5f829003611a8d57604051632711b74d60e11b815260040160405180910390fd5b5f5b60ff8116831115611b655781606a5f86868560ff16818110611ab357611ab361322f565b9050602002016020810190611ac89190612f16565b6001600160a01b0316815260208101919091526040015f20805460ff1916911515919091179055838360ff8316818110611b0457611b0461322f565b9050602002016020810190611b199190612f16565b6001600160a01b03167ffc2e7375e815d084de88de8e8e356e71102275019b06a1b529eee0c8ab57cd3483604051611b55911515815260200190565b60405180910390a2600101611a8f565b50505050565b6001600160a01b0382165f908152606a6020526040812054839060ff16611ba557604051631eb49d6d60e11b815260040160405180910390fd5b611bd66040518060400160405280600f81526020016e0626c6f636b2e74696d657374616d7608c1b81525042612afa565b825f03611bf657604051631f2a200560e01b815260040160405180910390fd5b611c196040518060600160405280602f815260200161375a602f91398686612b3f565b6001600160a01b0385161580611c3657506001600160a01b038416155b15611c545760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038085165f908152606e6020908152604091829020548251808401909352600c83526b3932b1b2b4b83a2a37b5b2b760a11b9183019190915290911690611ca29082612b86565b6073546001600160a01b0390811690861603611da05760735460405163095ea7b360e01b81526001600160a01b038381169263095ea7b392611cec92909116908890600401613120565b6020604051808303815f875af1158015611d08573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d2c9190613139565b50607354604051632e1a7d4d60e01b8152600481018690526001600160a01b0390911690632e1a7d4d906024016020604051808303815f875af1158015611d75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d999190613154565b9250611ea0565b6074546001600160a01b0390811690861603611ea05760745460405163095ea7b360e01b81526001600160a01b038381169263095ea7b392611dea92909116908890600401613120565b6020604051808303815f875af1158015611e06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e2a9190613139565b5060745460405163f3fef3a360e01b81526001600160a01b039091169063f3fef3a390611e5d9030908890600401613120565b6020604051808303815f875af1158015611e79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e9d9190613154565b92505b6001600160a01b0386165f908152606c602052604081208054869290611ec7908490613198565b90915550508215611eff576001600160a01b0386165f908152606d602052604081208054859290611ef990849061317f565b90915550505b846001600160a01b0316866001600160a01b03167f8c173542e888cab0078a82069caa28a8f24372517b278ca23b7d1b314027aacd85604051611f4491815260200190565b60405180910390a350509392505050565b6070546001600160a01b03163314611f8057604051631eb49d6d60e11b815260040160405180910390fd5b60208201516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611fc8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fec9190613154565b81111561201157602082015160765461200f91906001600160a01b031683611b6b565b505b8160400151607e5f828254612026919061317f565b90915550506040808301516020808501516001600160a01b03165f908152606b90915291822080549192909161205d908490613198565b9091555050815160208301516040840151612079929190612bcb565b81602001516001600160a01b03167fdab9e1269b4840c2a5e425eceb614f788c03c0706647b9b6c96bb18b23d64dba8360400151604051610fbe91815260200190565b6072545f906001600160a01b031633146120e957604051631eb49d6d60e11b815260040160405180910390fd5b6070546040805163017043a560e01b815290515f926001600160a01b03169163017043a5916004808301926020929190829003018187875af1158015612131573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121559190613154565b90505f61216184610cd9565b9050612192816040518060400160405280600d81526020016c3232b837b9b4ba2932ba3ab93760991b815250612cb7565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156121d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121f89190613154565b6079555f819003612215575f607e819055607d81905592506124a3565b6077546040516341976e0960e01b81525f600482018190529182916001600160a01b03909116906341976e09906024016040805180830381865afa15801561225f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122839190613446565b607754606f546040516341976e0960e01b81526001600160a01b03918216600482015293955060ff9290921693505f928392909116906341976e09906024016040805180830381865afa1580156122dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123009190613446565b60ff169150915061231382858789612cfc565b61231e83600a61354e565b61232886866131ab565b61233291906131c2565b9450612364856040518060400160405280600e81526020016d03232b837b9b4ba2932ba3ab937160951b815250612cb7565b61236f81600a61354e565b61237987846131ab565b61238391906131c2565b95506123b98660405180604001604052806012815260200171103137b732103932ba3ab9371030b33a32b960711b815250612cb7565b6123da6040518060800160405280604b8152602001613789604b9139612d50565b6123e78587607a54612d93565b612710607a54866123f891906131ab565b61240291906131c2565b61240c8787613198565b612416919061317f565b96508161242484600a61354e565b61242e90896131ab565b61243891906131c2565b5f607e819055607d8190556070546040805163fd46afb760e01b81529051939a506001600160a01b039091169263fd46afb79260048084019391929182900301818387803b158015612488575f80fd5b505af115801561249a573d5f803e3d5ffd5b50505050505050505b6124d16040518060400160405280600c81526020016b1c9958985cd954995dd85c9960a21b81525084612afa565b5050919050565b5f816001036124f2575050606f546001600160a01b031690565b8160020361250b5750506070546001600160a01b031690565b816003036125245750506071546001600160a01b031690565b816004036109c75750506077546001600160a01b031690565b6125456128ff565b805f0361256557604051632e2dab4360e01b815260040160405180910390fd5b60788190556040518181527f60c125b6240a60fa186be7014ecce85a874c437e25b8d24e99bec1d8f21058fc90602001610eee565b6125a26128ff565b6001600160a01b0382166125c95760405163d92e233d60e01b815260040160405180910390fd5b5f8160018111156125dc576125dc613559565b0361260157606580546001600160a01b0319166001600160a01b03841617905561261d565b606680546001600160a01b0319166001600160a01b0384161790555b816001600160a01b03167f8fe7ce0635de0c05ead622279bdcf4c4e71d0da07afd43a42c93236b77217ca682604051610fbe919061356d565b5f54610100900460ff161580801561267457505f54600160ff909116105b8061268d5750303b15801561268d57505f5460ff166001145b6126a95760405162461bcd60e51b815260040161101d906131e1565b5f805460ff1916600117905580156126ca575f805461ff0019166101001790555b836046141580156126dc575082601e14155b156126fa5760405163648564d360e01b815260040160405180910390fd5b612702612a7b565b607280546001600160a01b03199081166001600160a01b038c8116919091179092556077805482168584161790556073805482168a84169081179091556074805483168a8516178155607580549093168985161783555f918252606a6020526040808320805460ff199081166001908117909255925486168452818420805484168217905593549094168252929020805490921681179091556127a6908b906118d1565b6127b18860026118d1565b6127bc61012c61253d565b607354607680546001600160a01b0319166001600160a01b039092169190911790556101f4607a558015612829575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b61283d6128ff565b6001600160a01b0381166128645760405163d92e233d60e01b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b61288e6128ff565b6001600160a01b0381166128f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161101d565b6128fc81612aa9565b50565b6033546001600160a01b03163314611a625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161101d565b607954607d54607e546040516370a0823160e01b81523060048201525f939291906001600160a01b038616906370a0823190602401602060405180830381865afa1580156129a9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129cd9190613154565b6129d7919061317f565b6129e19190613198565b6109c49190613198565b6110a9838383604051602401612a03939291906135d6565b60408051601f198184030181529190526020810180516001600160e01b031663ca47c4eb60e01b179052612ddd565b611b6584848484604051602401612a4c94939291906135fa565b60408051601f198184030181529190526020810180516001600160e01b03166359cfcbe360e01b179052612ddd565b5f54610100900460ff16612aa15760405162461bcd60e51b815260040161101d90613628565b611a62612de6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b611a4d8282604051602401612b10929190613673565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052612ddd565b6110a9838383604051602401612b5793929190613694565b60408051601f198184030181529190526020810180516001600160e01b03166307e763af60e51b179052612ddd565b611a4d8282604051602401612b9c9291906136c6565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052612ddd565b6001600160a01b038216612c49575f836001600160a01b0316826040515f6040518083038185875af1925050503d805f8114612c22576040519150601f19603f3d011682016040523d82523d5f602084013e612c27565b606091505b5050905080611b65576040516312171d8360e31b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90612c779086908590600401613120565b6020604051808303815f875af1158015612c93573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b659190613139565b611a4d8282604051602401612ccd9291906136ef565b60408051601f198184030181529190526020810180516001600160e01b031663643fd0df60e01b179052612ddd565b60405160248101859052604481018490526064810183905260848101829052611b659060a40160408051601f198184030181529190526020810180516001600160e01b0316620327f760eb1b179052612ddd565b6128fc81604051602401612d64919061370f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052612ddd565b6040516024810184905260448101839052606481018290526110a99060840160408051601f198184030181529190526020810180516001600160e01b031663347b5e8f60e21b1790525b6128fc81612e15565b5f54610100900460ff16612e0c5760405162461bcd60e51b815260040161101d90613628565b611a6233612aa9565b5f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b80356001600160a01b03811681146109c7575f80fd5b5f60608284031215612e5a575f80fd5b6040516060810181811067ffffffffffffffff82111715612e8957634e487b7160e01b5f52604160045260245ffd5b604052905080612e9883612e34565b8152612ea660208401612e34565b6020820152604083013560408201525092915050565b5f60608284031215612ecc575f80fd5b612ed68383612e4a565b9392505050565b5f805f60608486031215612eef575f80fd5b612ef884612e34565b9250612f0660208501612e34565b9150604084013590509250925092565b5f60208284031215612f26575f80fd5b612ed682612e34565b5f60208284031215612f3f575f80fd5b5035919050565b5f8060408385031215612f57575f80fd5b612f6083612e34565b946020939093013593505050565b5f8060408385031215612f7f575f80fd5b612f8883612e34565b9150612f9660208401612e34565b90509250929050565b5f8060808385031215612fb0575f80fd5b612fba8484612e4a565b946060939093013593505050565b80151581146128fc575f80fd5b5f805f60408486031215612fe7575f80fd5b833567ffffffffffffffff80821115612ffe575f80fd5b818601915086601f830112613011575f80fd5b81358181111561301f575f80fd5b8760208260051b8501011115613033575f80fd5b6020928301955093505084013561304981612fc8565b809150509250925092565b5f8060408385031215613065575f80fd5b61306e83612e34565b9150602083013560028110613081575f80fd5b809150509250929050565b5f805f805f805f805f6101208a8c0312156130a5575f80fd5b6130ae8a612e34565b98506130bc60208b01612e34565b97506130ca60408b01612e34565b96506130d860608b01612e34565b95506130e660808b01612e34565b94506130f460a08b01612e34565b935060c08a0135925060e08a013591506131116101008b01612e34565b90509295985092959850929598565b6001600160a01b03929092168252602082015260400190565b5f60208284031215613149575f80fd5b8151612ed681612fc8565b5f60208284031215613164575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156131925761319261316b565b92915050565b818103818111156131925761319261316b565b80820281158282048414176131925761319261316b565b5f826131dc57634e487b7160e01b5f52601260045260245ffd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f8151808452602080850194508084015f5b8381101561327157815187529582019590820190600101613255565b509495945050505050565b5f8151808452602080850194508084015f5b838110156132715781516001600160a01b03168752958201959082019060010161328e565b608081525f6101608201865160e06080850152818151808452610180860191506020935083830192505f5b818110156133055783516001600160a01b03168352602083019385019392506001016132de565b505088830151858203607f190160a087015291506133238183613243565b915050604088015161334060c08601826001600160a01b03169052565b50606088015180516001600160a01b0390811660e08701526020909101516001600160601b0316610100860152608089015163ffffffff1661012086015260a0890151166101408501528381038285015261339b818861327c565b925050508360408301526133b3606083018415159052565b95945050505050565b60a081525f6133ce60a0830188613243565b8281036020848101919091528751808352888201928201905f5b8181101561340d5784516001600160a01b0316835293830193918301916001016133e8565b505084810360408601526134218189613243565b6001600160a01b03979097166060860152505050509015156080909101529392505050565b5f8060408385031215613457575f80fd5b82519150602083015160ff81168114613081575f80fd5b600181815b808511156134a857815f190482111561348e5761348e61316b565b8085161561349b57918102915b93841c9390800290613473565b509250929050565b5f826134be57506001613192565b816134ca57505f613192565b81600181146134e057600281146134ea57613506565b6001915050613192565b60ff8411156134fb576134fb61316b565b50506001821b613192565b5060208310610133831016604e8410600b8410161715613529575081810a613192565b613533838361346e565b805f19048211156135465761354661316b565b029392505050565b5f612ed683836134b0565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061358d57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f81518084525f5b818110156135b75760208185018101518683018201520161359b565b505f602082860101526020601f19601f83011685010191505092915050565b606081525f6135e86060830186613593565b60208301949094525060400152919050565b848152836020820152826040820152608060608201525f61361e6080830184613593565b9695505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081525f6136856040830185613593565b90508260208301529392505050565b606081525f6136a66060830186613593565b6001600160a01b0394851660208401529290931660409091015292915050565b604081525f6136d86040830185613593565b905060018060a01b03831660208301529392505050565b828152604060208201525f6137076040830184613593565b949350505050565b602081525f612ed6602083018461359356fe66756e6473496e666f5b5f7374457468416464726573735d2e6465706f73697446756e6473202f2062616c616e63654c61737445706f63685f6173736574203d3d2061646472657373283029207c7c205f7374726174656779203d3d2061646472657373283029726562617365526577617264203d206465706f73697452657475726e202d20626f6e6452657475726e202b20286465706f73697452657475726e202a206e6f6d696e616c5969656c64293ba2646970667358221220afec21d5d888552bdf5475b8b100302a914dd58f0988a3491202e2f1cf48a88464736f6c63430008140033";

type EnderTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderTreasury__factory extends ContractFactory {
  constructor(...args: EnderTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderTreasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderTreasury__factory {
    return super.connect(runner) as EnderTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderTreasuryInterface {
    return new Interface(_abi) as EnderTreasuryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderTreasury {
    return new Contract(address, _abi, runner) as unknown as EnderTreasury;
  }
}
