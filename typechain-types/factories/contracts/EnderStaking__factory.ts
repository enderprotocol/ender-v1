/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506121f9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635d7fbcb5116100f9578063adb3791c11610097578063c0c53b8b11610071578063c0c53b8b146103b8578063d8811d13146103cb578063e29cf50c146103de578063f2fde38b146103f257600080fd5b8063adb3791c14610389578063b8c0a3a114610392578063bf4afb1e146103a557600080fd5b8063715018a6116100d3578063715018a61461034257806384b0196e1461034a5780638da5cb5b1461036557806399940ece1461037657600080fd5b80635d7fbcb514610308578063611b40951461031b57806370db69021461032f57600080fd5b806330d616f411610166578063426697cf11610140578063426697cf146102aa57806353cd4c3f146102bd578063596e92f2146102e15780635d427a9a146102f457600080fd5b806330d616f41461027b57806336163b041461028e578063386429731461029757600080fd5b80631ff28376116101a25780631ff2837614610221578063238ac933146102345780632bc19cf6146102475780632e17de781461026857600080fd5b806303360eb4146101c95780630b19b1a6146101de57806317bb32e3146101f1575b600080fd5b6101dc6101d7366004611bf3565b610405565b005b6101dc6101ec366004611c10565b610456565b609d54610204906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101dc61022f366004611cf5565b6104bb565b609b54610204906001600160a01b031681565b61025a610255366004611c10565b610911565b604051908152602001610218565b6101dc610276366004611c10565b610939565b6101dc610289366004611bf3565b610b93565b61025a60995481565b6101dc6102a5366004611dce565b610be4565b609f54610204906001600160a01b031681565b60a0546102d190600160a81b900460ff1681565b6040519015158152602001610218565b6101dc6102ef366004611bf3565b610c88565b60a0546102d190600160b01b900460ff1681565b609e54610204906001600160a01b031681565b60a0546102d190600160a01b900460ff1681565b6101dc61033d366004611de9565b610cd9565b6101dc610e06565b610352610e1a565b6040516102189796959493929190611e59565b6067546001600160a01b0316610204565b60a054610204906001600160a01b031681565b61025a609a5481565b6101dc6103a0366004611dce565b610eb8565b609c54610204906001600160a01b031681565b6101dc6103c6366004611eef565b611103565b6101dc6103d9366004611bf3565b6112b0565b60a0546102d190600160b81b900460ff1681565b6101dc610400366004611dce565b611301565b61040d61137a565b60a0805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b61045e61137a565b8060000361047f5760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a054600160a81b900460ff1615156001146104ea57604051631eb49d6d60e11b815260040160405180910390fd5b60a054600160b81b900460ff16151560011461051957604051631eb49d6d60e11b815260040160405180910390fd5b8160000361053a5760405163162908e360e11b815260040160405180910390fd5b60a054600160a01b900460ff16156105d3576000610557826113d4565b609b549091506001600160a01b038083169116148015610580575081516001600160a01b031633145b6105d15760405162461bcd60e51b815260206004820152601760248201527f75736572206973206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b505b61060960405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b815250836113f7565b609c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190611f32565b6000036107a157600061068783610911565b90506106bb6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b815250826113f7565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561070757600080fd5b505af115801561071b573d6000803e3d6000fd5b5050609c546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190611f4b565b50506108c2565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190611f4b565b50600061082883610911565b905061085c6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b815250826113f7565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b50505050505b60a0546108d7906001600160a01b0316610eb8565b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a54600003610921575090565b609a5461092e9083611f68565b92915050565b919050565b60a054600160b01b900460ff16151560011461096857604051631eb49d6d60e11b815260040160405180910390fd5b60a054600160b81b900460ff16151560011461099757604051631eb49d6d60e11b815260040160405180910390fd5b806000036109b85760405163162908e360e11b815260040160405180910390fd5b609d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190611f32565b1015610a435760405163162908e360e11b815260040160405180910390fd5b60a054610a58906001600160a01b0316610eb8565b6000610a638261143c565b9050610a8760405180606001604052806026815260200161217c60269139826113f7565b609c5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190611f4b565b50609d54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc9150602001610905565b610b9b61137a565b60a0805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610bec61137a565b6001600160a01b038116610c3a5760405162461bcd60e51b8152602060048201526015602482015274416464726573732063616e2774206265207a65726f60581b60448201526064016105c8565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104b0565b610c9061137a565b60a0805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610ce161137a565b6001600160a01b038216610d085760405163d92e233d60e01b815260040160405180910390fd5b80600103610d3057609f80546001600160a01b0319166001600160a01b038416179055610dcc565b80600203610d5857609e80546001600160a01b0319166001600160a01b038416179055610dcc565b80600303610d8057609c80546001600160a01b0319166001600160a01b038416179055610dcc565b80600403610da857609d80546001600160a01b0319166001600160a01b038416179055610dcc565b80600603610dcc5760a080546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610e0e61137a565b610e186000611493565b565b6000606080600080600060606001546000801b148015610e3a5750600254155b610e7e5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016105c8565b610e866114e5565b610e8e611577565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b609e5460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190611f32565b905080156110ff576000606460995483610f439190611f8a565b610f4d9190611f68565b9050610f716040518060600160405280602281526020016121a260229139826113f7565b6000610f7c82610911565b609d54609f546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610fce57600080fd5b505af1158015610fe2573d6000803e3d6000fd5b5050609c546040516340c10f1960e01b8152306004820152602481018790526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561103257600080fd5b505af1158015611046573d6000803e3d6000fd5b5050609f54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b15801561109057600080fd5b505af11580156110a4573d6000803e3d6000fd5b505050506110b0611586565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505b5050565b600054610100900460ff16158080156111235750600054600160ff909116105b8061113d5750303b15801561113d575060005460ff166001145b6111a05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105c8565b6000805460ff1916600117905580156111c3576000805461ff0019166101001790555b6111cb6116ad565b6112156040518060400160405280600f81526020016e1cdd185ada5b99d0dbdb9d1c9858dd608a1b815250604051806040016040528060018152602001603160f81b8152506116dc565b609b80546001600160a01b0319166001600160a01b03841617905560a0805463ffffffff60a01b1916630101010160a01b179055611254846003610cd9565b61125f836004610cd9565b600a60995580156112aa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6112b861137a565b60a0805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b61130961137a565b6001600160a01b03811661136e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105c8565b61137781611493565b50565b6067546001600160a01b03163314610e185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c8565b6000806113e08361170d565b90506113f081846040015161178b565b9392505050565b6110ff828260405160240161140d929190611faf565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526117af565b60006114726040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a546113f7565b678ac7230489e80000609a54836114899190611f8a565b61092e9190611f68565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600380546114f490611fd1565b80601f016020809104026020016040519081016040528092919081815260200182805461152090611fd1565b801561156d5780601f106115425761010080835404028352916020019161156d565b820191906000526020600020905b81548152906001019060200180831161155057829003601f168201915b5050505050905090565b6060600480546114f490611fd1565b609c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f39190611f32565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e9190611f32565b905081158061167b575080155b15611689576001609a555050565b8061169c83678ac7230489e80000611f8a565b6116a69190611f68565b609a555050565b600054610100900460ff166116d45760405162461bcd60e51b81526004016105c89061200b565b610e186117b8565b600054610100900460ff166117035760405162461bcd60e51b81526004016105c89061200b565b6110ff82826117e8565b600061092e7f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de34716708360000151846020015180519060200120604051602001611770939291909283526001600160a01b03919091166020830152604082015260600190565b60405160208183030381529060405280519060200120611837565b600080600061179a8585611864565b915091506117a7816118a9565b509392505050565b611377816119f3565b600054610100900460ff166117df5760405162461bcd60e51b81526004016105c89061200b565b610e1833611493565b600054610100900460ff1661180f5760405162461bcd60e51b81526004016105c89061200b565b600361181b83826120a5565b50600461182882826120a5565b50506000600181905560025550565b600061092e611844611a14565b8360405161190160f01b8152600281019290925260228201526042902090565b600080825160410361189a5760208301516040840151606085015160001a61188e87828585611a23565b945094505050506118a2565b506000905060025b9250929050565b60008160048111156118bd576118bd612165565b036118c55750565b60018160048111156118d9576118d9612165565b036119265760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105c8565b600281600481111561193a5761193a612165565b036119875760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105c8565b600381600481111561199b5761199b612165565b036113775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105c8565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000611a1e611ae7565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a5a5750600090506003611ade565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611aae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ad757600060019250925050611ade565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b12611b5b565b611b1a611bb4565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611b666114e5565b805190915015611b7d578051602090910120919050565b6001548015611b8c5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080611bbf611577565b805190915015611bd6578051602090910120919050565b6002548015611b8c5792915050565b801515811461137757600080fd5b600060208284031215611c0557600080fd5b81356113f081611be5565b600060208284031215611c2257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c6257611c62611c29565b60405290565b80356001600160a01b038116811461093457600080fd5b600067ffffffffffffffff80841115611c9a57611c9a611c29565b604051601f8501601f19908116603f01168101908282118183101715611cc257611cc2611c29565b81604052809350858152868686011115611cdb57600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d0857600080fd5b82359150602083013567ffffffffffffffff80821115611d2757600080fd5b9084019060608287031215611d3b57600080fd5b611d43611c3f565b611d4c83611c68565b8152602083013582811115611d6057600080fd5b8301601f81018813611d7157600080fd5b611d8088823560208401611c7f565b602083015250604083013582811115611d9857600080fd5b80840193505086601f840112611dad57600080fd5b611dbc87843560208601611c7f565b60408201528093505050509250929050565b600060208284031215611de057600080fd5b6113f082611c68565b60008060408385031215611dfc57600080fd5b611e0583611c68565b946020939093013593505050565b6000815180845260005b81811015611e3957602081850181015186830182015201611e1d565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611e7960e084018a611e13565b8381036040850152611e8b818a611e13565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611edd57835183529284019291840191600101611ec1565b50909c9b505050505050505050505050565b600080600060608486031215611f0457600080fd5b611f0d84611c68565b9250611f1b60208501611c68565b9150611f2960408501611c68565b90509250925092565b600060208284031215611f4457600080fd5b5051919050565b600060208284031215611f5d57600080fd5b81516113f081611be5565b600082611f8557634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761092e57634e487b7160e01b600052601160045260246000fd5b604081526000611fc26040830185611e13565b90508260208301529392505050565b600181811c90821680611fe557607f821691505b60208210810361200557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f8211156120a057600081815260208120601f850160051c8101602086101561207d5750805b601f850160051c820191505b8181101561209c57828155600101612089565b5050505b505050565b815167ffffffffffffffff8111156120bf576120bf611c29565b6120d3816120cd8454611fd1565b84612056565b602080601f83116001811461210857600084156120f05750858301515b600019600386901b1c1916600185901b17855561209c565b600085815260208120601f198616915b8281101561213757888601518255948401946001909101908401612118565b50858210156121555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a264697066735822122061a59c40ec8ee7bd3ac5fe49903409443f84c51e2f1a3bd1db56d9c044b0535664736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
