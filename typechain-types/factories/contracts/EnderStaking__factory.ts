/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rebaseRefractionReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRebaseReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebaseRefractionReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061220f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80635d7fbcb511610104578063adb3791c116100a2578063e29cf50c11610071578063e29cf50c146103ea578063e806d593146103fe578063f2fde38b14610407578063f8c8765e1461041a57600080fd5b8063adb3791c146103a8578063b8c0a3a1146103b1578063bf4afb1e146103c4578063d8811d13146103d757600080fd5b8063715018a6116100de578063715018a61461036157806384b0196e146103695780638da5cb5b1461038457806399940ece1461039557600080fd5b80635d7fbcb514610327578063611b40951461033a57806370db69021461034e57600080fd5b80632e17de781161017c578063426697cf1161014b578063426697cf146102c957806353cd4c3f146102dc578063596e92f2146103005780635d427a9a1461031357600080fd5b80632e17de781461028757806330d616f41461029a57806336163b04146102ad57806338642973146102b657600080fd5b806317bb32e3116101b857806317bb32e3146102235780631ff283761461024e578063238ac933146102615780632bc19cf61461027457600080fd5b806303360eb4146101df578063088da694146101f45780630b19b1a614610210575b600080fd5b6101f26101ed366004611bf8565b61042d565b005b6101fd609b5481565b6040519081526020015b60405180910390f35b6101f261021e366004611c15565b61047e565b609f54610236906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6101f261025c366004611cfa565b6104e3565b609d54610236906001600160a01b031681565b6101fd610282366004611c15565b6108fa565b6101f2610295366004611c15565b610934565b6101f26102a8366004611bf8565b610b79565b6101fd60995481565b6101f26102c4366004611dd3565b610bca565b60a154610236906001600160a01b031681565b60a2546102f090600160a81b900460ff1681565b6040519015158152602001610207565b6101f261030e366004611bf8565b610c47565b60a2546102f090600160b01b900460ff1681565b60a054610236906001600160a01b031681565b60a2546102f090600160a01b900460ff1681565b6101f261035c366004611dee565b610c98565b6101f2610dc5565b610371610dd9565b6040516102079796959493929190611e5e565b6067546001600160a01b0316610236565b60a254610236906001600160a01b031681565b6101fd609a5481565b6101f26103bf366004611dd3565b610e7c565b609e54610236906001600160a01b031681565b6101f26103e5366004611bf8565b6110fe565b60a2546102f090600160b81b900460ff1681565b6101fd609c5481565b6101f2610415366004611dd3565b61114f565b6101f2610428366004611ef4565b6111c8565b610435611382565b60a2805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b610486611382565b806000036104a75760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a254600160a81b900460ff16151560011461051257604051631eb49d6d60e11b815260040160405180910390fd5b60a254600160b81b900460ff16151560011461054157604051631eb49d6d60e11b815260040160405180910390fd5b816000036105625760405163162908e360e11b815260040160405180910390fd5b60a254600160a01b900460ff16156105c957600061057f826113dc565b609d549091506001600160a01b0380831691161415806105a9575081516001600160a01b03163314155b156105c757604051630b094f2760e31b815260040160405180910390fd5b505b6105ff60405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b815250836113ff565b609e546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190611f48565b60000361079f57600061067d836108fa565b90506106b16040518060400160405280601181526020016f52932b1b2b4b83a103a37b5b2b71d169607d1b815250826113ff565b609f546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156106fd57600080fd5b505af1158015610711573d6000803e3d6000fd5b5050609e546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af115801561076c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107909190611f61565b50610799611444565b506108c0565b609e546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611f61565b506000610826836108fa565b905061085a6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b815250826113ff565b609f546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b50505050505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a5460000361090a575090565b609a5461091f83670de0b6b3a7640000611f7e565b6109299190611fa3565b92915050565b919050565b60a254600160b01b900460ff16151560011461096357604051631eb49d6d60e11b815260040160405180910390fd5b60a254600160b81b900460ff16151560011461099257604051631eb49d6d60e11b815260040160405180910390fd5b806000036109b35760405163162908e360e11b815260040160405180910390fd5b609f546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190611f48565b1015610a3e5760405163162908e360e11b815260040160405180910390fd5b6000610a4982611572565b9050610a6d60405180606001604052806026815260200161219260269139826113ff565b609e5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae29190611f61565b50609f54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b2f57600080fd5b505af1158015610b43573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc91506020016108ee565b610b81611382565b60a2805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610bd2611382565b6001600160a01b038116610bf95760405163d92e233d60e01b815260040160405180910390fd5b609d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104d8565b610c4f611382565b60a2805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610ca0611382565b6001600160a01b038216610cc75760405163d92e233d60e01b815260040160405180910390fd5b80600103610cef5760a180546001600160a01b0319166001600160a01b038416179055610d8b565b80600203610d175760a080546001600160a01b0319166001600160a01b038416179055610d8b565b80600303610d3f57609e80546001600160a01b0319166001600160a01b038416179055610d8b565b80600403610d6757609f80546001600160a01b0319166001600160a01b038416179055610d8b565b80600503610d8b5760a280546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610dcd611382565b610dd760006115bf565b565b6000606080600080600060606001546000801b148015610df95750600254155b610e425760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610e4a611611565b610e526116a3565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60a2546001600160a01b03828116911614610eaa57604051631eb49d6d60e11b815260040160405180910390fd5b60a05460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190611f48565b609c819055905080156110f257606460995482610f389190611f7e565b610f429190611fa3565b609b819055600090610f53906108fa565b9050610f776040518060600160405280602281526020016121b860229139826113ff565b60a154604051630325c1f360e51b8152600481018390526001600160a01b03909116906364b83e6090602401600060405180830381600087803b158015610fbd57600080fd5b505af1158015610fd1573d6000803e3d6000fd5b5050609f5460a1546040516340c10f1960e01b81526001600160a01b03918216600482015260248101869052911692506340c10f199150604401600060405180830381600087803b15801561102557600080fd5b505af1158015611039573d6000803e3d6000fd5b5050609e546040516340c10f1960e01b8152306004820152602481018690526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561108957600080fd5b505af115801561109d573d6000803e3d6000fd5b5050609b5460408051868152602081019290925281018490526001600160a01b03861692507fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c915060600160405180910390a2505b6110fa611444565b5050565b611106611382565b60a2805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b611157611382565b6001600160a01b0381166111bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e39565b6111c5816115bf565b50565b600054610100900460ff16158080156111e85750600054600160ff909116105b806112025750303b158015611202575060005460ff166001145b6112655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e39565b6000805460ff191660011790558015611288576000805461ff0019166101001790555b6112906116b2565b6112da6040518060400160405280600f81526020016e1cdd185ada5b99d0dbdb9d1c9858dd608a1b815250604051806040016040528060018152602001603160f81b8152506116e1565b609d80546001600160a01b0384166001600160a01b031990911617905560a2805463ffffffff60a01b19166201010160a81b17905561131a856003610c98565b611325846004610c98565b611330836005610c98565b600a609955801561137b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6067546001600160a01b03163314610dd75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e39565b6000806113e883611712565b90506113f8818460400151611790565b9392505050565b6110fa8282604051602401611415929190611fc5565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526117b4565b609e546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b19190611f48565b90506000609f60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152c9190611f48565b9050811580611539575080155b1561154e57670de0b6b3a7640000609a555050565b8061156183670de0b6b3a7640000611f7e565b61156b9190611fa3565b609a555050565b60006115a86040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a546113ff565b670de0b6b3a7640000609a548361091f9190611f7e565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606003805461162090611fe7565b80601f016020809104026020016040519081016040528092919081815260200182805461164c90611fe7565b80156116995780601f1061166e57610100808354040283529160200191611699565b820191906000526020600020905b81548152906001019060200180831161167c57829003601f168201915b5050505050905090565b60606004805461162090611fe7565b600054610100900460ff166116d95760405162461bcd60e51b8152600401610e3990612021565b610dd76117bd565b600054610100900460ff166117085760405162461bcd60e51b8152600401610e3990612021565b6110fa82826117ed565b60006109297f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de34716708360000151846020015180519060200120604051602001611775939291909283526001600160a01b03919091166020830152604082015260600190565b6040516020818303038152906040528051906020012061183c565b600080600061179f8585611869565b915091506117ac816118ae565b509392505050565b6111c5816119f8565b600054610100900460ff166117e45760405162461bcd60e51b8152600401610e3990612021565b610dd7336115bf565b600054610100900460ff166118145760405162461bcd60e51b8152600401610e3990612021565b600361182083826120bb565b50600461182d82826120bb565b50506000600181905560025550565b6000610929611849611a19565b8360405161190160f01b8152600281019290925260228201526042902090565b600080825160410361189f5760208301516040840151606085015160001a61189387828585611a28565b945094505050506118a7565b506000905060025b9250929050565b60008160048111156118c2576118c261217b565b036118ca5750565b60018160048111156118de576118de61217b565b0361192b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610e39565b600281600481111561193f5761193f61217b565b0361198c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610e39565b60038160048111156119a0576119a061217b565b036111c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610e39565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000611a23611aec565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a5f5750600090506003611ae3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ab3573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611adc57600060019250925050611ae3565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b17611b60565b611b1f611bb9565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611b6b611611565b805190915015611b82578051602090910120919050565b6001548015611b915792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080611bc46116a3565b805190915015611bdb578051602090910120919050565b6002548015611b915792915050565b80151581146111c557600080fd5b600060208284031215611c0a57600080fd5b81356113f881611bea565b600060208284031215611c2757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c6757611c67611c2e565b60405290565b80356001600160a01b038116811461092f57600080fd5b600067ffffffffffffffff80841115611c9f57611c9f611c2e565b604051601f8501601f19908116603f01168101908282118183101715611cc757611cc7611c2e565b81604052809350858152868686011115611ce057600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d0d57600080fd5b82359150602083013567ffffffffffffffff80821115611d2c57600080fd5b9084019060608287031215611d4057600080fd5b611d48611c44565b611d5183611c6d565b8152602083013582811115611d6557600080fd5b8301601f81018813611d7657600080fd5b611d8588823560208401611c84565b602083015250604083013582811115611d9d57600080fd5b80840193505086601f840112611db257600080fd5b611dc187843560208601611c84565b60408201528093505050509250929050565b600060208284031215611de557600080fd5b6113f882611c6d565b60008060408385031215611e0157600080fd5b611e0a83611c6d565b946020939093013593505050565b6000815180845260005b81811015611e3e57602081850181015186830182015201611e22565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611e7e60e084018a611e18565b8381036040850152611e90818a611e18565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611ee257835183529284019291840191600101611ec6565b50909c9b505050505050505050505050565b60008060008060808587031215611f0a57600080fd5b611f1385611c6d565b9350611f2160208601611c6d565b9250611f2f60408601611c6d565b9150611f3d60608601611c6d565b905092959194509250565b600060208284031215611f5a57600080fd5b5051919050565b600060208284031215611f7357600080fd5b81516113f881611bea565b808202811582820484141761092957634e487b7160e01b600052601160045260246000fd5b600082611fc057634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611fd86040830185611e18565b90508260208301529392505050565b600181811c90821680611ffb57607f821691505b60208210810361201b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f8211156120b657600081815260208120601f850160051c810160208610156120935750805b601f850160051c820191505b818110156120b25782815560010161209f565b5050505b505050565b815167ffffffffffffffff8111156120d5576120d5611c2e565b6120e9816120e38454611fe7565b8461206c565b602080601f83116001811461211e57600084156121065750858301515b600019600386901b1c1916600185901b1785556120b2565b600085815260208120601f198616915b8281101561214d5788860151825594840194600190910190840161212e565b508582101561216b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a26469706673582212206aaa87fdbce86ab437d52f19ee67db9477f4f8129697e7456f444fa3c83004e864736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
