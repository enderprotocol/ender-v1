/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063aced166111610071578063aced166114610228578063adb3791c1461023b578063b8c0a3a114610244578063bf4afb1e14610257578063f2fde38b1461026a57600080fd5b8063715018a6146101e95780638da5cb5b146101f157806399940ece14610202578063a694fc3a1461021557600080fd5b806336163b04116100e957806336163b0414610194578063426697cf1461019d578063485cc955146101b05780635d7fbcb5146101c357806370db6902146101d657600080fd5b80630b19b1a61461011b57806317bb32e3146101305780632bc19cf6146101605780632e1a7d4d14610181575b600080fd5b61012e610129366004610f73565b61027d565b005b606854610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017361016e366004610f73565b6102e1565b604051908152602001610157565b61012e61018f366004610f73565b610388565b61017360655481565b606a54610143906001600160a01b031681565b61012e6101be366004610fa3565b610593565b606954610143906001600160a01b031681565b61012e6101e4366004610fd6565b6106c6565b61012e61081b565b6033546001600160a01b0316610143565b606c54610143906001600160a01b031681565b61012e610223366004610f73565b61082f565b606b54610143906001600160a01b031681565b61017360665481565b61012e610252366004611000565b610934565b606754610143906001600160a01b031681565b61012e610278366004611000565b610b96565b610285610c0f565b806000036102a65760405163162908e360e11b815260040160405180910390fd5b60658190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc0749060200160405180910390a150565b60006103246040518060400160405280601d81526020017f7265626173696e67496e6465782d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d000000815250606654610c69565b606654600003610335575080610357565b60665461034a83670de0b6b3a7640000611038565b610354919061104f565b90505b6103836040518060400160405280600a81526020016973456e64546f6b656e7360b01b81525082610c69565b919050565b806000036103a95760405163162908e360e11b815260040160405180910390fd5b6068546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190611071565b10156104345760405163162908e360e11b815260040160405180910390fd5b606c54610449906001600160a01b0316610934565b600061045482610cb2565b905061047f6040518060400160405280600781526020016670656e64696e6760c81b81525082610c69565b606854604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156104cb57600080fd5b505af11580156104df573d6000803e3d6000fd5b505060675460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610534573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610558919061108a565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b600054610100900460ff16158080156105b35750600054600160ff909116105b806105cd5750303b1580156105cd575060005460ff166001145b6106355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610658576000805461ff0019166101001790555b610660610cdb565b61066b8360036106c6565b6106768260046106c6565b600a60655580156106c1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6106ce610c0f565b6001600160a01b0382166106f55760405163d92e233d60e01b815260040160405180910390fd5b8060010361071d57606a80546001600160a01b0319166001600160a01b0384161790556107e1565b8060020361074557606980546001600160a01b0319166001600160a01b0384161790556107e1565b8060030361076d57606780546001600160a01b0319166001600160a01b0384161790556107e1565b8060040361079557606880546001600160a01b0319166001600160a01b0384161790556107e1565b806005036107bd57606b80546001600160a01b0319166001600160a01b0384161790556107e1565b806006036107e157606c80546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610823610c0f565b61082d6000610d0a565b565b806000036108505760405163162908e360e11b815260040160405180910390fd5b606c54610865906001600160a01b0316610934565b6000610870826102e1565b905061089e6040518060400160405280600a8152602001691cd15b99105b5bdd5b9d60b21b81525082610c69565b6068546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108ea57600080fd5b505af11580156108fe573d6000803e3d6000fd5b50506040518481523392507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9150602001610587565b60695460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611071565b905060006064606554836109b99190611038565b6109c3919061104f565b90506109ed81604051806040016040528060068152602001657277322d2d2d60d01b815250610d5c565b60006109f8826102e1565b606854606a546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b50506067546001600160a01b031691506340c10f19905030610a8085876110ac565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b5050606a54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b158015610b2457600080fd5b505af1158015610b38573d6000803e3d6000fd5b50505050610b44610da1565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b610b9e610c0f565b6001600160a01b038116610c035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161062c565b610c0c81610d0a565b50565b6033546001600160a01b0316331461082d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161062c565b610cae8282604051602401610c7f929190611105565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610ed2565b5050565b6000670de0b6b3a764000060665483610ccb9190611038565b610cd5919061104f565b92915050565b600054610100900460ff16610d025760405162461bcd60e51b815260040161062c90611127565b61082d610edb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cae8282604051602401610d72929190611172565b60408051601f198184030181529190526020810180516001600160e01b031663643fd0df60e01b179052610ed2565b6067546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0e9190611071565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190611071565b9050610e958282610f0b565b811580610ea0575080155b15610eae5760016066555050565b80610ec183670de0b6b3a7640000611038565b610ecb919061104f565b6066555050565b610c0c81610f52565b600054610100900460ff16610f025760405162461bcd60e51b815260040161062c90611127565b61082d33610d0a565b6040516024810183905260448101829052610cae9060640160408051601f198184030181529190526020810180516001600160e01b0316637b3338ad60e11b179052610ed2565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208284031215610f8557600080fd5b5035919050565b80356001600160a01b038116811461038357600080fd5b60008060408385031215610fb657600080fd5b610fbf83610f8c565b9150610fcd60208401610f8c565b90509250929050565b60008060408385031215610fe957600080fd5b610ff283610f8c565b946020939093013593505050565b60006020828403121561101257600080fd5b61101b82610f8c565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610cd557610cd5611022565b60008261106c57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561108357600080fd5b5051919050565b60006020828403121561109c57600080fd5b8151801515811461101b57600080fd5b81810381811115610cd557610cd5611022565b6000815180845260005b818110156110e5576020818501810151868301820152016110c9565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061111860408301856110bf565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b82815260406020820152600061118b60408301846110bf565b94935050505056fea26469706673582212209e5918e744dc782330775870ada703fb82299720509a649228d0eb36bad32ad364736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
