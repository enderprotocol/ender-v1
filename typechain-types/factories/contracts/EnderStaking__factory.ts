/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611dba806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370db6902116100c3578063adb3791c1161007c578063adb3791c146102c4578063b8c0a3a1146102cd578063bf4afb1e146102e0578063c0c53b8b146102f3578063d8811d1314610306578063f2fde38b1461031957600080fd5b806370db690214610257578063715018a61461026a57806384b0196e146102725780638da5cb5b1461028d57806399940ece1461029e578063aced1661146102b157600080fd5b80632e1a7d4d116101155780632e1a7d4d146101de57806336163b04146101f157806338642973146101fa578063426697cf1461020d5780635d7fbcb514610220578063611b40951461023357600080fd5b80630b19b1a61461015257806317bb32e3146101675780631ff2837614610197578063238ac933146101aa5780632bc19cf6146101bd575b600080fd5b6101656101603660046118b5565b61032c565b005b609d5461017a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101656101a536600461199a565b610391565b609b5461017a906001600160a01b031681565b6101d06101cb3660046118b5565b61079f565b60405190815260200161018e565b6101656101ec3660046118b5565b6107c7565b6101d060995481565b610165610208366004611a73565b6109c3565b609f5461017a906001600160a01b031681565b609e5461017a906001600160a01b031681565b60a15461024790600160a01b900460ff1681565b604051901515815260200161018e565b610165610265366004611a8e565b610a67565b610165610bbc565b61027a610bd0565b60405161018e9796959493929190611afe565b6067546001600160a01b031661017a565b60a15461017a906001600160a01b031681565b60a05461017a906001600160a01b031681565b6101d0609a5481565b6101656102db366004611a73565b610c6e565b609c5461017a906001600160a01b031681565b610165610301366004611b94565b610eb2565b610165610314366004611be5565b610ffc565b610165610327366004611a73565b61104d565b6103346110c6565b806000036103555760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b816000036103b25760405163162908e360e11b815260040160405180910390fd5b60a154600160a01b900460ff161561044b5760006103cf82611120565b609b549091506001600160a01b0380831691161480156103f8575081516001600160a01b031633145b6104495760405162461bcd60e51b815260206004820152601760248201527f75736572206973206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b505b61048160405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b81525083611143565b609c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190611c02565b60000361062e5760a154610509906001600160a01b0316610c6e565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611c1b565b5060006105908361079f565b90506105c46040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611143565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561061057600080fd5b505af1158015610624573d6000803e3d6000fd5b5050505050610765565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a99190611c1b565b5060006106b58361079f565b90506106e96040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611143565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561073557600080fd5b505af1158015610749573d6000803e3d6000fd5b505060a15461076392506001600160a01b03169050610c6e565b505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a546000036107af575090565b609a546107bc9083611c38565b92915050565b919050565b806000036107e85760405163162908e360e11b815260040160405180910390fd5b609d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190611c02565b10156108735760405163162908e360e11b815260040160405180910390fd5b60a154610888906001600160a01b0316610c6e565b60006108938261118c565b90506108b7604051806060016040528060268152602001611d3d6026913982611143565b609c5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190611c1b565b50609d54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561097957600080fd5b505af115801561098d573d6000803e3d6000fd5b50506040518481523392507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649150602001610793565b6109cb6110c6565b6001600160a01b038116610a195760405162461bcd60e51b8152602060048201526015602482015274416464726573732063616e2774206265207a65726f60581b6044820152606401610440565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d90602001610386565b610a6f6110c6565b6001600160a01b038216610a965760405163d92e233d60e01b815260040160405180910390fd5b80600103610abe57609f80546001600160a01b0319166001600160a01b038416179055610b82565b80600203610ae657609e80546001600160a01b0319166001600160a01b038416179055610b82565b80600303610b0e57609c80546001600160a01b0319166001600160a01b038416179055610b82565b80600403610b3657609d80546001600160a01b0319166001600160a01b038416179055610b82565b80600503610b5e5760a080546001600160a01b0319166001600160a01b038416179055610b82565b80600603610b825760a180546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610bc46110c6565b610bce60006111e3565b565b6000606080600080600060606001546000801b148015610bf05750600254155b610c345760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610440565b610c3c611235565b610c446112c7565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b609e5460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf9190611c02565b90506000606460995483610cf39190611c5a565b610cfd9190611c38565b9050610d21604051806060016040528060228152602001611d636022913982611143565b6000610d2c8261079f565b609d54609f546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610d7e57600080fd5b505af1158015610d92573d6000803e3d6000fd5b5050609c546040516340c10f1960e01b8152306004820152602481018790526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b158015610de257600080fd5b505af1158015610df6573d6000803e3d6000fd5b5050609f54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b50505050610e606112d6565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b600054610100900460ff1615808015610ed25750600054600160ff909116105b80610eec5750303b158015610eec575060005460ff166001145b610f4f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610440565b6000805460ff191660011790558015610f72576000805461ff0019166101001790555b610f7a6113fd565b609b80546001600160a01b0319166001600160a01b038416179055610fa0846003610a67565b610fab836004610a67565b600a6099558015610ff6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6110046110c6565b60a1805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b6110556110c6565b6001600160a01b0381166110ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610440565b6110c3816111e3565b50565b6067546001600160a01b03163314610bce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610440565b60008061112c8361142c565b905061113c8184604001516114aa565b9392505050565b6111888282604051602401611159929190611c7f565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526114ce565b5050565b60006111c26040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a54611143565b678ac7230489e80000609a54836111d99190611c5a565b6107bc9190611c38565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606003805461124490611ca1565b80601f016020809104026020016040519081016040528092919081815260200182805461127090611ca1565b80156112bd5780601f10611292576101008083540402835291602001916112bd565b820191906000526020600020905b8154815290600101906020018083116112a057829003601f168201915b5050505050905090565b60606004805461124490611ca1565b609c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561131f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113439190611c02565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113be9190611c02565b90508115806113cb575080155b156113d9576001609a555050565b806113ec83678ac7230489e80000611c5a565b6113f69190611c38565b609a555050565b600054610100900460ff166114245760405162461bcd60e51b815260040161044090611cdb565b610bce6114d7565b60006107bc7f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de3471670836000015184602001518051906020012060405160200161148f939291909283526001600160a01b03919091166020830152604082015260600190565b60405160208183030381529060405280519060200120611507565b60008060006114b98585611534565b915091506114c681611579565b509392505050565b6110c3816116c3565b600054610100900460ff166114fe5760405162461bcd60e51b815260040161044090611cdb565b610bce336111e3565b60006107bc6115146116e4565b8360405161190160f01b8152600281019290925260228201526042902090565b600080825160410361156a5760208301516040840151606085015160001a61155e878285856116f3565b94509450505050611572565b506000905060025b9250929050565b600081600481111561158d5761158d611d26565b036115955750565b60018160048111156115a9576115a9611d26565b036115f65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610440565b600281600481111561160a5761160a611d26565b036116575760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610440565b600381600481111561166b5761166b611d26565b036110c35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610440565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60006116ee6117b7565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561172a57506000905060036117ae565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561177e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117a7576000600192509250506117ae565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6117e261182b565b6117ea611884565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611836611235565b80519091501561184d578051602090910120919050565b600154801561185c5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b60008061188f6112c7565b8051909150156118a6578051602090910120919050565b600254801561185c5792915050565b6000602082840312156118c757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611907576119076118ce565b60405290565b80356001600160a01b03811681146107c257600080fd5b600067ffffffffffffffff8084111561193f5761193f6118ce565b604051601f8501601f19908116603f01168101908282118183101715611967576119676118ce565b8160405280935085815286868601111561198057600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156119ad57600080fd5b82359150602083013567ffffffffffffffff808211156119cc57600080fd5b90840190606082870312156119e057600080fd5b6119e86118e4565b6119f18361190d565b8152602083013582811115611a0557600080fd5b8301601f81018813611a1657600080fd5b611a2588823560208401611924565b602083015250604083013582811115611a3d57600080fd5b80840193505086601f840112611a5257600080fd5b611a6187843560208601611924565b60408201528093505050509250929050565b600060208284031215611a8557600080fd5b61113c8261190d565b60008060408385031215611aa157600080fd5b611aaa8361190d565b946020939093013593505050565b6000815180845260005b81811015611ade57602081850181015186830182015201611ac2565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611b1e60e084018a611ab8565b8381036040850152611b30818a611ab8565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611b8257835183529284019291840191600101611b66565b50909c9b505050505050505050505050565b600080600060608486031215611ba957600080fd5b611bb28461190d565b9250611bc06020850161190d565b9150611bce6040850161190d565b90509250925092565b80151581146110c357600080fd5b600060208284031215611bf757600080fd5b813561113c81611bd7565b600060208284031215611c1457600080fd5b5051919050565b600060208284031215611c2d57600080fd5b815161113c81611bd7565b600082611c5557634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176107bc57634e487b7160e01b600052601160045260246000fd5b604081526000611c926040830185611ab8565b90508260208301529392505050565b600181811c90821680611cb557607f821691505b602082108103611cd557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a26469706673582212203798b417b25d7455bca036a9864422b24fc800627ff57b6934a1957cd244051564736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
