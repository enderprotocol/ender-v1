/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e87806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063611b4095116100de578063aced166111610097578063bf4afb1e11610071578063bf4afb1e1461032d578063c0c53b8b14610340578063d8811d1314610353578063f2fde38b1461036657600080fd5b8063aced1661146102fe578063adb3791c14610311578063b8c0a3a11461031a57600080fd5b8063611b40951461029057806370db6902146102a4578063715018a6146102b757806384b0196e146102bf5780638da5cb5b146102da57806399940ece146102eb57600080fd5b806330d616f41161013057806330d616f41461021757806336163b041461022a5780633864297314610233578063426697cf1461024657806353cd4c3f146102595780635d7fbcb51461027d57600080fd5b80630b19b1a61461017857806317bb32e31461018d5780631ff28376146101bd578063238ac933146101d05780632bc19cf6146101e35780632e1a7d4d14610204575b600080fd5b61018b610186366004611982565b610379565b005b609d546101a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61018b6101cb366004611a67565b6103de565b609b546101a0906001600160a01b031681565b6101f66101f1366004611982565b61081b565b6040519081526020016101b4565b61018b610212366004611982565b610843565b61018b610225366004611b4e565b610a3f565b6101f660995481565b61018b610241366004611b6b565b610a90565b609f546101a0906001600160a01b031681565b60a15461026d90600160a81b900460ff1681565b60405190151581526020016101b4565b609e546101a0906001600160a01b031681565b60a15461026d90600160a01b900460ff1681565b61018b6102b2366004611b86565b610b34565b61018b610c89565b6102c7610c9d565b6040516101b49796959493929190611bf6565b6067546001600160a01b03166101a0565b60a1546101a0906001600160a01b031681565b60a0546101a0906001600160a01b031681565b6101f6609a5481565b61018b610328366004611b6b565b610d3b565b609c546101a0906001600160a01b031681565b61018b61034e366004611c8c565b610f7f565b61018b610361366004611b4e565b6110c9565b61018b610374366004611b6b565b61111a565b610381611193565b806000036103a25760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a154600160a81b900460ff16151560011461040d57604051631eb49d6d60e11b815260040160405180910390fd5b8160000361042e5760405163162908e360e11b815260040160405180910390fd5b60a154600160a01b900460ff16156104c757600061044b826111ed565b609b549091506001600160a01b038083169116148015610474575081516001600160a01b031633145b6104c55760405162461bcd60e51b815260206004820152601760248201527f75736572206973206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b505b6104fd60405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b81525083611210565b609c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190611ccf565b6000036106aa5760a154610585906001600160a01b0316610d3b565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190611ce8565b50600061060c8361081b565b90506106406040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611210565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b50505050506107e1565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190611ce8565b5060006107318361081b565b90506107656040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611210565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156107b157600080fd5b505af11580156107c5573d6000803e3d6000fd5b505060a1546107df92506001600160a01b03169050610d3b565b505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a5460000361082b575090565b609a546108389083611d05565b92915050565b919050565b806000036108645760405163162908e360e11b815260040160405180910390fd5b609d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d09190611ccf565b10156108ef5760405163162908e360e11b815260040160405180910390fd5b60a154610904906001600160a01b0316610d3b565b600061090f82611259565b9050610933604051806060016040528060268152602001611e0a6026913982611210565b609c5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611ce8565b50609d54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156109f557600080fd5b505af1158015610a09573d6000803e3d6000fd5b50506040518481523392507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364915060200161080f565b610a47611193565b60a1805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610a98611193565b6001600160a01b038116610ae65760405162461bcd60e51b8152602060048201526015602482015274416464726573732063616e2774206265207a65726f60581b60448201526064016104bc565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016103d3565b610b3c611193565b6001600160a01b038216610b635760405163d92e233d60e01b815260040160405180910390fd5b80600103610b8b57609f80546001600160a01b0319166001600160a01b038416179055610c4f565b80600203610bb357609e80546001600160a01b0319166001600160a01b038416179055610c4f565b80600303610bdb57609c80546001600160a01b0319166001600160a01b038416179055610c4f565b80600403610c0357609d80546001600160a01b0319166001600160a01b038416179055610c4f565b80600503610c2b5760a080546001600160a01b0319166001600160a01b038416179055610c4f565b80600603610c4f5760a180546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610c91611193565b610c9b60006112b0565b565b6000606080600080600060606001546000801b148015610cbd5750600254155b610d015760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016104bc565b610d09611302565b610d11611394565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b609e5460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610d88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dac9190611ccf565b90506000606460995483610dc09190611d27565b610dca9190611d05565b9050610dee604051806060016040528060228152602001611e306022913982611210565b6000610df98261081b565b609d54609f546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610e4b57600080fd5b505af1158015610e5f573d6000803e3d6000fd5b5050609c546040516340c10f1960e01b8152306004820152602481018790526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b158015610eaf57600080fd5b505af1158015610ec3573d6000803e3d6000fd5b5050609f54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b158015610f0d57600080fd5b505af1158015610f21573d6000803e3d6000fd5b50505050610f2d6113a3565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b600054610100900460ff1615808015610f9f5750600054600160ff909116105b80610fb95750303b158015610fb9575060005460ff166001145b61101c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104bc565b6000805460ff19166001179055801561103f576000805461ff0019166101001790555b6110476114ca565b609b80546001600160a01b0319166001600160a01b03841617905561106d846003610b34565b611078836004610b34565b600a60995580156110c3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6110d1611193565b60a1805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b611122611193565b6001600160a01b0381166111875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bc565b611190816112b0565b50565b6067546001600160a01b03163314610c9b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bc565b6000806111f9836114f9565b9050611209818460400151611577565b9392505050565b6112558282604051602401611226929190611d4c565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261159b565b5050565b600061128f6040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a54611210565b678ac7230489e80000609a54836112a69190611d27565b6108389190611d05565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606003805461131190611d6e565b80601f016020809104026020016040519081016040528092919081815260200182805461133d90611d6e565b801561138a5780601f1061135f5761010080835404028352916020019161138a565b820191906000526020600020905b81548152906001019060200180831161136d57829003601f168201915b5050505050905090565b60606004805461131190611d6e565b609c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114109190611ccf565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148b9190611ccf565b9050811580611498575080155b156114a6576001609a555050565b806114b983678ac7230489e80000611d27565b6114c39190611d05565b609a555050565b600054610100900460ff166114f15760405162461bcd60e51b81526004016104bc90611da8565b610c9b6115a4565b60006108387f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de3471670836000015184602001518051906020012060405160200161155c939291909283526001600160a01b03919091166020830152604082015260600190565b604051602081830303815290604052805190602001206115d4565b60008060006115868585611601565b9150915061159381611646565b509392505050565b61119081611790565b600054610100900460ff166115cb5760405162461bcd60e51b81526004016104bc90611da8565b610c9b336112b0565b60006108386115e16117b1565b8360405161190160f01b8152600281019290925260228201526042902090565b60008082516041036116375760208301516040840151606085015160001a61162b878285856117c0565b9450945050505061163f565b506000905060025b9250929050565b600081600481111561165a5761165a611df3565b036116625750565b600181600481111561167657611676611df3565b036116c35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104bc565b60028160048111156116d7576116d7611df3565b036117245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104bc565b600381600481111561173857611738611df3565b036111905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104bc565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60006117bb611884565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156117f7575060009050600361187b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561184b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118745760006001925092505061187b565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6118af6118f8565b6118b7611951565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611903611302565b80519091501561191a578051602090910120919050565b60015480156119295792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b60008061195c611394565b805190915015611973578051602090910120919050565b60025480156119295792915050565b60006020828403121561199457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156119d4576119d461199b565b60405290565b80356001600160a01b038116811461083e57600080fd5b600067ffffffffffffffff80841115611a0c57611a0c61199b565b604051601f8501601f19908116603f01168101908282118183101715611a3457611a3461199b565b81604052809350858152868686011115611a4d57600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611a7a57600080fd5b82359150602083013567ffffffffffffffff80821115611a9957600080fd5b9084019060608287031215611aad57600080fd5b611ab56119b1565b611abe836119da565b8152602083013582811115611ad257600080fd5b8301601f81018813611ae357600080fd5b611af2888235602084016119f1565b602083015250604083013582811115611b0a57600080fd5b80840193505086601f840112611b1f57600080fd5b611b2e878435602086016119f1565b60408201528093505050509250929050565b801515811461119057600080fd5b600060208284031215611b6057600080fd5b813561120981611b40565b600060208284031215611b7d57600080fd5b611209826119da565b60008060408385031215611b9957600080fd5b611ba2836119da565b946020939093013593505050565b6000815180845260005b81811015611bd657602081850181015186830182015201611bba565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611c1660e084018a611bb0565b8381036040850152611c28818a611bb0565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611c7a57835183529284019291840191600101611c5e565b50909c9b505050505050505050505050565b600080600060608486031215611ca157600080fd5b611caa846119da565b9250611cb8602085016119da565b9150611cc6604085016119da565b90509250925092565b600060208284031215611ce157600080fd5b5051919050565b600060208284031215611cfa57600080fd5b815161120981611b40565b600082611d2257634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761083857634e487b7160e01b600052601160045260246000fd5b604081526000611d5f6040830185611bb0565b90508260208301529392505050565b600181811c90821680611d8257607f821691505b602082108103611da257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a2646970667358221220ccf9909e943c9c80414918459ab902ab529752a0b41810fac211744e8ba4b85664736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
