/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506120e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635d7fbcb511610104578063aced1661116100a2578063c0c53b8b11610071578063c0c53b8b146103d6578063d8811d13146103e9578063e29cf50c146103fc578063f2fde38b1461041057600080fd5b8063aced166114610394578063adb3791c146103a7578063b8c0a3a1146103b0578063bf4afb1e146103c357600080fd5b8063715018a6116100de578063715018a61461034d57806384b0196e146103555780638da5cb5b1461037057806399940ece1461038157600080fd5b80635d7fbcb514610313578063611b40951461032657806370db69021461033a57600080fd5b806330d616f411610171578063426697cf1161014b578063426697cf146102b557806353cd4c3f146102c8578063596e92f2146102ec5780635d427a9a146102ff57600080fd5b806330d616f41461028657806336163b041461029957806338642973146102a257600080fd5b80631ff28376116101ad5780631ff283761461022c578063238ac9331461023f5780632bc19cf6146102525780632e17de781461027357600080fd5b806303360eb4146101d45780630b19b1a6146101e957806317bb32e3146101fc575b600080fd5b6101e76101e2366004611bda565b610423565b005b6101e76101f7366004611bf7565b610474565b609d5461020f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e761023a366004611cdc565b6104d9565b609b5461020f906001600160a01b031681565b610265610260366004611bf7565b61095c565b604051908152602001610223565b6101e7610281366004611bf7565b610984565b6101e7610294366004611bda565b610bde565b61026560995481565b6101e76102b0366004611db5565b610c2f565b609f5461020f906001600160a01b031681565b60a1546102dc90600160a81b900460ff1681565b6040519015158152602001610223565b6101e76102fa366004611bda565b610cd3565b60a1546102dc90600160b01b900460ff1681565b609e5461020f906001600160a01b031681565b60a1546102dc90600160a01b900460ff1681565b6101e7610348366004611dd0565b610d24565b6101e7610e79565b61035d610e8d565b6040516102239796959493929190611e40565b6067546001600160a01b031661020f565b60a15461020f906001600160a01b031681565b60a05461020f906001600160a01b031681565b610265609a5481565b6101e76103be366004611db5565b610f2b565b609c5461020f906001600160a01b031681565b6101e76103e4366004611ed6565b61116f565b6101e76103f7366004611bda565b6112d0565b60a1546102dc90600160b81b900460ff1681565b6101e761041e366004611db5565b611321565b61042b61139a565b60a1805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b61047c61139a565b8060000361049d5760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a154600160a81b900460ff16151560011461050857604051631eb49d6d60e11b815260040160405180910390fd5b60a154600160b81b900460ff16151560011461053757604051631eb49d6d60e11b815260040160405180910390fd5b6105646040518060400160405280600c81526020016b496e73696465205374616b6560a01b8152506113f4565b816000036105855760405163162908e360e11b815260040160405180910390fd5b60a154600160a01b900460ff161561061e5760006105a282611437565b609b549091506001600160a01b0380831691161480156105cb575081516001600160a01b031633145b61061c5760405162461bcd60e51b815260206004820152601760248201527f75736572206973206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b505b61065460405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b8152508361145a565b609c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c09190611f19565b6000036107ec5760006106d28361095c565b90506107066040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b8152508261145a565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561075257600080fd5b505af1158015610766573d6000803e3d6000fd5b5050609c546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e59190611f32565b505061090d565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190611f32565b5060006108738361095c565b90506108a76040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b8152508261145a565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b50505050505b60a154610922906001600160a01b0316610f2b565b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a5460000361096c575090565b609a546109799083611f4f565b92915050565b919050565b60a154600160b01b900460ff1615156001146109b357604051631eb49d6d60e11b815260040160405180910390fd5b60a154600160b81b900460ff1615156001146109e257604051631eb49d6d60e11b815260040160405180910390fd5b80600003610a035760405163162908e360e11b815260040160405180910390fd5b609d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f9190611f19565b1015610a8e5760405163162908e360e11b815260040160405180910390fd5b60a154610aa3906001600160a01b0316610f2b565b6000610aae826114a3565b9050610ad2604051806060016040528060268152602001612067602691398261145a565b609c5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190611f32565b50609d54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b9457600080fd5b505af1158015610ba8573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc9150602001610950565b610be661139a565b60a1805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610c3761139a565b6001600160a01b038116610c855760405162461bcd60e51b8152602060048201526015602482015274416464726573732063616e2774206265207a65726f60581b6044820152606401610613565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104ce565b610cdb61139a565b60a1805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610d2c61139a565b6001600160a01b038216610d535760405163d92e233d60e01b815260040160405180910390fd5b80600103610d7b57609f80546001600160a01b0319166001600160a01b038416179055610e3f565b80600203610da357609e80546001600160a01b0319166001600160a01b038416179055610e3f565b80600303610dcb57609c80546001600160a01b0319166001600160a01b038416179055610e3f565b80600403610df357609d80546001600160a01b0319166001600160a01b038416179055610e3f565b80600503610e1b5760a080546001600160a01b0319166001600160a01b038416179055610e3f565b80600603610e3f5760a180546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610e8161139a565b610e8b60006114fa565b565b6000606080600080600060606001546000801b148015610ead5750600254155b610ef15760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610613565b610ef961154c565b610f016115de565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b609e5460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9c9190611f19565b90506000606460995483610fb09190611f71565b610fba9190611f4f565b9050610fde60405180606001604052806022815260200161208d602291398261145a565b6000610fe98261095c565b609d54609f546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801561103b57600080fd5b505af115801561104f573d6000803e3d6000fd5b5050609c546040516340c10f1960e01b8152306004820152602481018790526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b5050609f54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b1580156110fd57600080fd5b505af1158015611111573d6000803e3d6000fd5b5050505061111d6115ed565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b600054610100900460ff161580801561118f5750600054600160ff909116105b806111a95750303b1580156111a9575060005460ff166001145b61120c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610613565b6000805460ff19166001179055801561122f576000805461ff0019166101001790555b611237611714565b609b80546001600160a01b0319166001600160a01b03841617905560a1805462ffffff60a81b19166201010160a81b179055611274846003610d24565b61127f836004610d24565b600a60995580156112ca576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6112d861139a565b60a1805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b61132961139a565b6001600160a01b03811661138e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610613565b611397816114fa565b50565b6067546001600160a01b03163314610e8b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610613565b611397816040516024016114089190611f96565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611743565b6000806114438361174c565b90506114538184604001516117ca565b9392505050565b61149f8282604051602401611470929190611fa9565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611743565b5050565b60006114d96040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a5461145a565b678ac7230489e80000609a54836114f09190611f71565b6109799190611f4f565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606003805461155b90611fcb565b80601f016020809104026020016040519081016040528092919081815260200182805461158790611fcb565b80156115d45780601f106115a9576101008083540402835291602001916115d4565b820191906000526020600020905b8154815290600101906020018083116115b757829003601f168201915b5050505050905090565b60606004805461155b90611fcb565b609c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a9190611f19565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d59190611f19565b90508115806116e2575080155b156116f0576001609a555050565b8061170383678ac7230489e80000611f71565b61170d9190611f4f565b609a555050565b600054610100900460ff1661173b5760405162461bcd60e51b815260040161061390612005565b610e8b6117ee565b6113978161181e565b60006109797f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de347167083600001518460200151805190602001206040516020016117af939291909283526001600160a01b03919091166020830152604082015260600190565b6040516020818303038152906040528051906020012061183f565b60008060006117d9858561186c565b915091506117e6816118b1565b509392505050565b600054610100900460ff166118155760405162461bcd60e51b815260040161061390612005565b610e8b336114fa565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600061097961184c6119fb565b8360405161190160f01b8152600281019290925260228201526042902090565b60008082516041036118a25760208301516040840151606085015160001a61189687828585611a0a565b945094505050506118aa565b506000905060025b9250929050565b60008160048111156118c5576118c5612050565b036118cd5750565b60018160048111156118e1576118e1612050565b0361192e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610613565b600281600481111561194257611942612050565b0361198f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610613565b60038160048111156119a3576119a3612050565b036113975760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610613565b6000611a05611ace565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a415750600090506003611ac5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a95573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611abe57600060019250925050611ac5565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611af9611b42565b611b01611b9b565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611b4d61154c565b805190915015611b64578051602090910120919050565b6001548015611b735792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080611ba66115de565b805190915015611bbd578051602090910120919050565b6002548015611b735792915050565b801515811461139757600080fd5b600060208284031215611bec57600080fd5b813561145381611bcc565b600060208284031215611c0957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c4957611c49611c10565b60405290565b80356001600160a01b038116811461097f57600080fd5b600067ffffffffffffffff80841115611c8157611c81611c10565b604051601f8501601f19908116603f01168101908282118183101715611ca957611ca9611c10565b81604052809350858152868686011115611cc257600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611cef57600080fd5b82359150602083013567ffffffffffffffff80821115611d0e57600080fd5b9084019060608287031215611d2257600080fd5b611d2a611c26565b611d3383611c4f565b8152602083013582811115611d4757600080fd5b8301601f81018813611d5857600080fd5b611d6788823560208401611c66565b602083015250604083013582811115611d7f57600080fd5b80840193505086601f840112611d9457600080fd5b611da387843560208601611c66565b60408201528093505050509250929050565b600060208284031215611dc757600080fd5b61145382611c4f565b60008060408385031215611de357600080fd5b611dec83611c4f565b946020939093013593505050565b6000815180845260005b81811015611e2057602081850181015186830182015201611e04565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611e6060e084018a611dfa565b8381036040850152611e72818a611dfa565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611ec457835183529284019291840191600101611ea8565b50909c9b505050505050505050505050565b600080600060608486031215611eeb57600080fd5b611ef484611c4f565b9250611f0260208501611c4f565b9150611f1060408501611c4f565b90509250925092565b600060208284031215611f2b57600080fd5b5051919050565b600060208284031215611f4457600080fd5b815161145381611bcc565b600082611f6c57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761097957634e487b7160e01b600052601160045260246000fd5b6020815260006114536020830184611dfa565b604081526000611fbc6040830185611dfa565b90508260208301529392505050565b600181811c90821680611fdf57607f821691505b602082108103611fff57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a2646970667358221220b6235cab0117ae08add9caa66d00003d87ad91be9c7881f6bfb944e2b82c2b6464736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
