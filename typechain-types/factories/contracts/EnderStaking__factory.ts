/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114da806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063aced166111610071578063aced166114610228578063adb3791c1461023b578063b8c0a3a114610244578063bf4afb1e14610257578063f2fde38b1461026a57600080fd5b8063715018a6146101e95780638da5cb5b146101f157806399940ece14610202578063a694fc3a1461021557600080fd5b806336163b04116100e957806336163b0414610194578063426697cf1461019d578063485cc955146101b05780635d7fbcb5146101c357806370db6902146101d657600080fd5b80630b19b1a61461011b57806317bb32e3146101305780632bc19cf6146101605780632e1a7d4d14610181575b600080fd5b61012e6101293660046111e3565b61027d565b005b606854610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017361016e3660046111e3565b6102e1565b604051908152602001610157565b61012e61018f3660046111e3565b610376565b61017360655481565b606a54610143906001600160a01b031681565b61012e6101be366004611213565b610664565b606954610143906001600160a01b031681565b61012e6101e4366004611246565b610797565b61012e6108ec565b6033546001600160a01b0316610143565b606c54610143906001600160a01b031681565b61012e6102233660046111e3565b610900565b606b54610143906001600160a01b031681565b61017360665481565b61012e610252366004611270565b610b72565b606754610143906001600160a01b031681565b61012e610278366004611270565b610dd4565b610285610e4d565b806000036102a65760405163162908e360e11b815260040160405180910390fd5b60658190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc0749060200160405180910390a150565b60006103246040518060400160405280601d81526020017f7265626173696e67496e6465782d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d000000815250606654610ea7565b606654600003610335575080610345565b60665461034290836112a8565b90505b6103716040518060400160405280600a81526020016973456e64546f6b656e7360b01b81525082610ea7565b919050565b6067546040516370a0823160e01b8152336004820152610403916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e591906112ca565b6040518060600160405280602b8152602001611428602b9139610ef0565b806000036104245760405163162908e360e11b815260040160405180910390fd5b6068546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561046c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049091906112ca565b10156104af5760405163162908e360e11b815260040160405180910390fd5b606c546104c4906001600160a01b0316610b72565b60006104cf82610f35565b90506104f38160405180606001604052806031815260200161147460319139610ef0565b60675460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056891906112e3565b506105926040518060400160405280600781526020016670656e64696e6760c81b81525082610ea7565b606854604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b50506067546040516370a0823160e01b815233600482015261062a93506001600160a01b0390911691506370a08231906024016103a4565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b600054610100900460ff16158080156106845750600054600160ff909116105b8061069e5750303b15801561069e575060005460ff166001145b6107065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610729576000805461ff0019166101001790555b610731610f4b565b61073c836003610797565b610747826004610797565b600a6065558015610792576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b61079f610e4d565b6001600160a01b0382166107c65760405163d92e233d60e01b815260040160405180910390fd5b806001036107ee57606a80546001600160a01b0319166001600160a01b0384161790556108b2565b8060020361081657606980546001600160a01b0319166001600160a01b0384161790556108b2565b8060030361083e57606780546001600160a01b0319166001600160a01b0384161790556108b2565b8060040361086657606880546001600160a01b0319166001600160a01b0384161790556108b2565b8060050361088e57606b80546001600160a01b0319166001600160a01b0384161790556108b2565b806006036108b257606c80546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b6108f4610e4d565b6108fe6000610f7a565b565b806000036109215760405163162908e360e11b815260040160405180910390fd5b6067546040516370a0823160e01b81523360048201526109ae916001600160a01b0316906370a08231906024015b602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099091906112ca565b60405180606001604052806021815260200161145360219139610ef0565b6067546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2991906112e3565b506067546040516370a0823160e01b8152336004820152610a5c916001600160a01b0316906370a082319060240161094f565b606c546040805180820190915260058152640e6e88ae8d60db1b6020820152610a8e916001600160a01b031690610fcc565b606c54610aa3906001600160a01b0316610b72565b6000610aae826102e1565b9050610adc6040518060400160405280600a8152602001691cd15b99105b5bdd5b9d60b21b81525082610ea7565b6068546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610b2857600080fd5b505af1158015610b3c573d6000803e3d6000fd5b50506040518481523392507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9150602001610658565b60695460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be391906112ca565b90506000606460655483610bf79190611305565b610c0191906112a8565b9050610c2b81604051806040016040528060068152602001657277322d2d2d60d01b815250610ef0565b6000610c36826102e1565b606854606a546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b50506067546001600160a01b031691506340c10f19905030610cbe858761131c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610d0457600080fd5b505af1158015610d18573d6000803e3d6000fd5b5050606a54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b158015610d6257600080fd5b505af1158015610d76573d6000803e3d6000fd5b50505050610d82611011565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b610ddc610e4d565b6001600160a01b038116610e415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fd565b610e4a81610f7a565b50565b6033546001600160a01b031633146108fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b610eec8282604051602401610ebd929190611375565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611142565b5050565b610eec8282604051602401610f06929190611397565b60408051601f198184030181529190526020810180516001600160e01b031663643fd0df60e01b179052611142565b600060665482610f459190611305565b92915050565b600054610100900460ff16610f725760405162461bcd60e51b81526004016106fd906113b8565b6108fe61114b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610eec8282604051602401610fe2929190611403565b60408051601f198184030181529190526020810180516001600160e01b031663759f86bb60e01b179052611142565b6067546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561105a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107e91906112ca565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f991906112ca565b9050611105828261117b565b811580611110575080155b1561111e5760016066555050565b8061113183670de0b6b3a7640000611305565b61113b91906112a8565b6066555050565b610e4a816111c2565b600054610100900460ff166111725760405162461bcd60e51b81526004016106fd906113b8565b6108fe33610f7a565b6040516024810183905260448101829052610eec9060640160408051601f198184030181529190526020810180516001600160e01b0316637b3338ad60e11b179052611142565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000602082840312156111f557600080fd5b5035919050565b80356001600160a01b038116811461037157600080fd5b6000806040838503121561122657600080fd5b61122f836111fc565b915061123d602084016111fc565b90509250929050565b6000806040838503121561125957600080fd5b611262836111fc565b946020939093013593505050565b60006020828403121561128257600080fd5b61128b826111fc565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000826112c557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156112dc57600080fd5b5051919050565b6000602082840312156112f557600080fd5b8151801515811461128b57600080fd5b8082028115828204841417610f4557610f45611292565b81810381811115610f4557610f45611292565b6000815180845260005b8181101561135557602081850181015186830182015201611339565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611388604083018561132f565b90508260208301529392505050565b8281526040602082015260006113b0604083018461132f565b949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03831681526040602082018190526000906113b09083018461132f56fe2d2d2d2d2d2d2d2d2d2d2d2d62616c616e63654f66496e57697468647261772d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d62616c616e63654f662d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d7265776172642d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da264697066735822122046e9cdb2f005bb23d05d4e45dd8e60e4034ee4ded720a81a884083ac232a339064736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
