/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611288806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063aced166111610071578063aced166114610228578063adb3791c1461023b578063b8c0a3a114610244578063bf4afb1e14610257578063f2fde38b1461026a57600080fd5b8063715018a6146101e95780638da5cb5b146101f157806399940ece14610202578063a694fc3a1461021557600080fd5b806336163b04116100e957806336163b0414610194578063426697cf1461019d578063485cc955146101b05780635d7fbcb5146101c357806370db6902146101d657600080fd5b80630b19b1a61461011b57806317bb32e3146101305780632bc19cf6146101605780632e1a7d4d14610181575b600080fd5b61012e610129366004611011565b61027d565b005b606854610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017361016e366004611011565b6102e1565b604051908152602001610157565b61012e61018f366004611011565b610376565b61017360655481565b606a54610143906001600160a01b031681565b61012e6101be366004611041565b61050b565b606954610143906001600160a01b031681565b61012e6101e4366004611074565b61063e565b61012e610793565b6033546001600160a01b0316610143565b606c54610143906001600160a01b031681565b61012e610223366004611011565b6107a7565b606b54610143906001600160a01b031681565b61017360665481565b61012e61025236600461109e565b6109d2565b606754610143906001600160a01b031681565b61012e61027836600461109e565b610c34565b610285610cad565b806000036102a65760405163162908e360e11b815260040160405180910390fd5b60658190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc0749060200160405180910390a150565b60006103246040518060400160405280601d81526020017f7265626173696e67496e6465782d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d000000815250606654610d07565b606654600003610335575080610345565b60665461034290836110d6565b90505b6103716040518060400160405280600a81526020016973456e64546f6b656e7360b01b81525082610d07565b919050565b806000036103975760405163162908e360e11b815260040160405180910390fd5b6068546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040391906110f8565b10156104225760405163162908e360e11b815260040160405180910390fd5b606c54610437906001600160a01b03166109d2565b600061044282610d50565b905061046d6040518060400160405280600781526020016670656e64696e6760c81b81525082610d07565b606854604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b50506040518481523392507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491506020015b60405180910390a25050565b600054610100900460ff161580801561052b5750600054600160ff909116105b806105455750303b158015610545575060005460ff166001145b6105ad5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156105d0576000805461ff0019166101001790555b6105d8610d79565b6105e383600361063e565b6105ee82600461063e565b600a6065558015610639576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610646610cad565b6001600160a01b03821661066d5760405163d92e233d60e01b815260040160405180910390fd5b8060010361069557606a80546001600160a01b0319166001600160a01b038416179055610759565b806002036106bd57606980546001600160a01b0319166001600160a01b038416179055610759565b806003036106e557606780546001600160a01b0319166001600160a01b038416179055610759565b8060040361070d57606880546001600160a01b0319166001600160a01b038416179055610759565b8060050361073557606b80546001600160a01b0319166001600160a01b038416179055610759565b8060060361075957606c80546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b61079b610cad565b6107a56000610da8565b565b806000036107c85760405163162908e360e11b815260040160405180910390fd5b6067546040516370a0823160e01b8152336004820152610855916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083791906110f8565b60405180606001604052806021815260200161123260219139610dfa565b6067546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d09190611111565b506067546040516370a0823160e01b8152336004820152610903916001600160a01b0316906370a08231906024016107f6565b600061090e826102e1565b905061093c6040518060400160405280600a8152602001691cd15b99105b5bdd5b9d60b21b81525082610d07565b6068546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561098857600080fd5b505af115801561099c573d6000803e3d6000fd5b50506040518481523392507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a91506020016104ff565b60695460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4391906110f8565b90506000606460655483610a579190611133565b610a6191906110d6565b9050610a8b81604051806040016040528060068152602001657277322d2d2d60d01b815250610dfa565b6000610a96826102e1565b606854606a546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b50506067546001600160a01b031691506340c10f19905030610b1e858761114a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610b6457600080fd5b505af1158015610b78573d6000803e3d6000fd5b5050606a54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b158015610bc257600080fd5b505af1158015610bd6573d6000803e3d6000fd5b50505050610be2610e3f565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505050565b610c3c610cad565b6001600160a01b038116610ca15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a4565b610caa81610da8565b50565b6033546001600160a01b031633146107a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b610d4c8282604051602401610d1d9291906111a3565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610f70565b5050565b6000670de0b6b3a764000060665483610d699190611133565b610d7391906110d6565b92915050565b600054610100900460ff16610da05760405162461bcd60e51b81526004016105a4906111c5565b6107a5610f79565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d4c8282604051602401610e10929190611210565b60408051601f198184030181529190526020810180516001600160e01b031663643fd0df60e01b179052610f70565b6067546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eac91906110f8565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2791906110f8565b9050610f338282610fa9565b811580610f3e575080155b15610f4c5760016066555050565b80610f5f83670de0b6b3a7640000611133565b610f6991906110d6565b6066555050565b610caa81610ff0565b600054610100900460ff16610fa05760405162461bcd60e51b81526004016105a4906111c5565b6107a533610da8565b6040516024810183905260448101829052610d4c9060640160408051601f198184030181529190526020810180516001600160e01b0316637b3338ad60e11b179052610f70565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60006020828403121561102357600080fd5b5035919050565b80356001600160a01b038116811461037157600080fd5b6000806040838503121561105457600080fd5b61105d8361102a565b915061106b6020840161102a565b90509250929050565b6000806040838503121561108757600080fd5b6110908361102a565b946020939093013593505050565b6000602082840312156110b057600080fd5b6110b98261102a565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000826110f357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561110a57600080fd5b5051919050565b60006020828403121561112357600080fd5b815180151581146110b957600080fd5b8082028115828204841417610d7357610d736110c0565b81810381811115610d7357610d736110c0565b6000815180845260005b8181101561118357602081850181015186830182015201611167565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006111b6604083018561115d565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b828152604060208201526000611229604083018461115d565b94935050505056fe2d2d2d2d2d2d2d2d2d2d2d2d62616c616e63654f662d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220a4e8e9c891455ef412ba1c3597920e2258a3b86db6455b47248883685b072a4564736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
