/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rw2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506122cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635d7fbcb5116100f9578063adb3791c11610097578063d8811d1311610071578063d8811d13146103b8578063e29cf50c146103cb578063f2fde38b146103df578063f8c8765e146103f257600080fd5b8063adb3791c14610389578063b8c0a3a114610392578063bf4afb1e146103a557600080fd5b8063715018a6116100d3578063715018a61461034257806384b0196e1461034a5780638da5cb5b1461036557806399940ece1461037657600080fd5b80635d7fbcb514610308578063611b40951461031b57806370db69021461032f57600080fd5b806330d616f411610166578063426697cf11610140578063426697cf146102aa57806353cd4c3f146102bd578063596e92f2146102e15780635d427a9a146102f457600080fd5b806330d616f41461027b57806336163b041461028e578063386429731461029757600080fd5b80631ff28376116101a25780631ff2837614610221578063238ac933146102345780632bc19cf6146102475780632e17de781461026857600080fd5b806303360eb4146101c95780630b19b1a6146101de57806317bb32e3146101f1575b600080fd5b6101dc6101d7366004611ca5565b610405565b005b6101dc6101ec366004611cc2565b610456565b609d54610204906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101dc61022f366004611da7565b6104bb565b609b54610204906001600160a01b031681565b61025a610255366004611cc2565b61093e565b604051908152602001610218565b6101dc610276366004611cc2565b610978565b6101dc610289366004611ca5565b610bd2565b61025a60995481565b6101dc6102a5366004611e80565b610c23565b609f54610204906001600160a01b031681565b60a0546102d190600160a81b900460ff1681565b6040519015158152602001610218565b6101dc6102ef366004611ca5565b610cc7565b60a0546102d190600160b01b900460ff1681565b609e54610204906001600160a01b031681565b60a0546102d190600160a01b900460ff1681565b6101dc61033d366004611e9b565b610d18565b6101dc610e45565b610352610e59565b6040516102189796959493929190611f0b565b6067546001600160a01b0316610204565b60a054610204906001600160a01b031681565b61025a609a5481565b6101dc6103a0366004611e80565b610ef7565b609c54610204906001600160a01b031681565b6101dc6103c6366004611ca5565b611170565b60a0546102d190600160b81b900460ff1681565b6101dc6103ed366004611e80565b6111c1565b6101dc610400366004611fa1565b61123a565b61040d6113f3565b60a0805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b61045e6113f3565b8060000361047f5760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a054600160a81b900460ff1615156001146104ea57604051631eb49d6d60e11b815260040160405180910390fd5b60a054600160b81b900460ff16151560011461051957604051631eb49d6d60e11b815260040160405180910390fd5b6105466040518060400160405280600c81526020016b496e73696465205374616b6560a01b81525061144d565b816000036105675760405163162908e360e11b815260040160405180910390fd5b60a054600160a01b900460ff161561060057600061058482611490565b609b549091506001600160a01b0380831691161480156105ad575081516001600160a01b031633145b6105fe5760405162461bcd60e51b815260206004820152601760248201527f75736572206973206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b505b61063660405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b815250836114b3565b609c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190611ff5565b6000036107ce5760006106b48361093e565b90506106e86040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b815250826114b3565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b5050609c546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af11580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c7919061200e565b5050610904565b60a0546107e3906001600160a01b0316610ef7565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e919061200e565b50600061086a8361093e565b905061089e6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b815250826114b3565b609d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108ea57600080fd5b505af11580156108fe573d6000803e3d6000fd5b50505050505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a5460000361094e575090565b609a5461096383678ac7230489e8000061202b565b61096d9190612050565b92915050565b919050565b60a054600160b01b900460ff1615156001146109a757604051631eb49d6d60e11b815260040160405180910390fd5b60a054600160b81b900460ff1615156001146109d657604051631eb49d6d60e11b815260040160405180910390fd5b806000036109f75760405163162908e360e11b815260040160405180910390fd5b609d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a639190611ff5565b1015610a825760405163162908e360e11b815260040160405180910390fd5b60a054610a97906001600160a01b0316610ef7565b6000610aa2826114f8565b9050610ac660405180606001604052806026815260200161225260269139826114b3565b609c5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b919061200e565b50609d54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b8857600080fd5b505af1158015610b9c573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc9150602001610932565b610bda6113f3565b60a0805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610c2b6113f3565b6001600160a01b038116610c795760405162461bcd60e51b8152602060048201526015602482015274416464726573732063616e2774206265207a65726f60581b60448201526064016105f5565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104b0565b610ccf6113f3565b60a0805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610d206113f3565b6001600160a01b038216610d475760405163d92e233d60e01b815260040160405180910390fd5b80600103610d6f57609f80546001600160a01b0319166001600160a01b038416179055610e0b565b80600203610d9757609e80546001600160a01b0319166001600160a01b038416179055610e0b565b80600303610dbf57609c80546001600160a01b0319166001600160a01b038416179055610e0b565b80600403610de757609d80546001600160a01b0319166001600160a01b038416179055610e0b565b80600503610e0b5760a080546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610e4d6113f3565b610e576000611545565b565b6000606080600080600060606001546000801b148015610e795750600254155b610ebd5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016105f5565b610ec5611597565b610ecd611629565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60a0546001600160a01b03828116911614610f2557604051631eb49d6d60e11b815260040160405180910390fd5b609e5460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611ff5565b9050801561116c576000606460995483610fb0919061202b565b610fba9190612050565b9050610fde60405180606001604052806022815260200161227860229139826114b3565b6000610fe98261093e565b609d54609f546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801561103b57600080fd5b505af115801561104f573d6000803e3d6000fd5b5050609c546040516340c10f1960e01b8152306004820152602481018790526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b5050609f54604051630325c1f360e51b8152600481018590526001600160a01b0390911692506364b83e609150602401600060405180830381600087803b1580156110fd57600080fd5b505af1158015611111573d6000803e3d6000fd5b5050505061111d611638565b60408051848152602081018490529081018290526001600160a01b038516907fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c9060600160405180910390a250505b5050565b6111786113f3565b60a0805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b6111c96113f3565b6001600160a01b03811661122e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f5565b61123781611545565b50565b600054610100900460ff161580801561125a5750600054600160ff909116105b806112745750303b158015611274575060005460ff166001145b6112d75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f5565b6000805460ff1916600117905580156112fa576000805461ff0019166101001790555b61130261175f565b61134c6040518060400160405280600f81526020016e1cdd185ada5b99d0dbdb9d1c9858dd608a1b815250604051806040016040528060018152602001603160f81b81525061178e565b609b80546001600160a01b0319166001600160a01b03841617905560a0805463ffffffff60a01b1916630101010160a01b17905561138b856003610d18565b611396846004610d18565b6113a1836005610d18565b600a60995580156113ec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6067546001600160a01b03163314610e575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f5565b611237816040516024016114619190612072565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526117bf565b60008061149c836117c8565b90506114ac818460400151611846565b9392505050565b61116c82826040516024016114c9929190612085565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526117bf565b600061152e6040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a546114b3565b678ac7230489e80000609a5483610963919061202b565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600380546115a6906120a7565b80601f01602080910402602001604051908101604052809291908181526020018280546115d2906120a7565b801561161f5780601f106115f45761010080835404028352916020019161161f565b820191906000526020600020905b81548152906001019060200180831161160257829003601f168201915b5050505050905090565b6060600480546115a6906120a7565b609c546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a59190611ff5565b90506000609d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117209190611ff5565b905081158061172d575080155b1561173b576001609a555050565b8061174e83678ac7230489e8000061202b565b6117589190612050565b609a555050565b600054610100900460ff166117865760405162461bcd60e51b81526004016105f5906120e1565b610e5761186a565b600054610100900460ff166117b55760405162461bcd60e51b81526004016105f5906120e1565b61116c828261189a565b611237816118e9565b600061096d7f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de3471670836000015184602001518051906020012060405160200161182b939291909283526001600160a01b03919091166020830152604082015260600190565b6040516020818303038152906040528051906020012061190a565b60008060006118558585611937565b915091506118628161197c565b509392505050565b600054610100900460ff166118915760405162461bcd60e51b81526004016105f5906120e1565b610e5733611545565b600054610100900460ff166118c15760405162461bcd60e51b81526004016105f5906120e1565b60036118cd838261217b565b5060046118da828261217b565b50506000600181905560025550565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600061096d611917611ac6565b8360405161190160f01b8152600281019290925260228201526042902090565b600080825160410361196d5760208301516040840151606085015160001a61196187828585611ad5565b94509450505050611975565b506000905060025b9250929050565b60008160048111156119905761199061223b565b036119985750565b60018160048111156119ac576119ac61223b565b036119f95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f5565b6002816004811115611a0d57611a0d61223b565b03611a5a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f5565b6003816004811115611a6e57611a6e61223b565b036112375760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f5565b6000611ad0611b99565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611b0c5750600090506003611b90565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b60573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b8957600060019250925050611b90565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611bc4611c0d565b611bcc611c66565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611c18611597565b805190915015611c2f578051602090910120919050565b6001548015611c3e5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080611c71611629565b805190915015611c88578051602090910120919050565b6002548015611c3e5792915050565b801515811461123757600080fd5b600060208284031215611cb757600080fd5b81356114ac81611c97565b600060208284031215611cd457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611d1457611d14611cdb565b60405290565b80356001600160a01b038116811461097357600080fd5b600067ffffffffffffffff80841115611d4c57611d4c611cdb565b604051601f8501601f19908116603f01168101908282118183101715611d7457611d74611cdb565b81604052809350858152868686011115611d8d57600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611dba57600080fd5b82359150602083013567ffffffffffffffff80821115611dd957600080fd5b9084019060608287031215611ded57600080fd5b611df5611cf1565b611dfe83611d1a565b8152602083013582811115611e1257600080fd5b8301601f81018813611e2357600080fd5b611e3288823560208401611d31565b602083015250604083013582811115611e4a57600080fd5b80840193505086601f840112611e5f57600080fd5b611e6e87843560208601611d31565b60408201528093505050509250929050565b600060208284031215611e9257600080fd5b6114ac82611d1a565b60008060408385031215611eae57600080fd5b611eb783611d1a565b946020939093013593505050565b6000815180845260005b81811015611eeb57602081850181015186830182015201611ecf565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611f2b60e084018a611ec5565b8381036040850152611f3d818a611ec5565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611f8f57835183529284019291840191600101611f73565b50909c9b505050505050505050505050565b60008060008060808587031215611fb757600080fd5b611fc085611d1a565b9350611fce60208601611d1a565b9250611fdc60408601611d1a565b9150611fea60608601611d1a565b905092959194509250565b60006020828403121561200757600080fd5b5051919050565b60006020828403121561202057600080fd5b81516114ac81611c97565b808202811582820484141761096d57634e487b7160e01b600052601160045260246000fd5b60008261206d57634e487b7160e01b600052601260045260246000fd5b500490565b6020815260006114ac6020830184611ec5565b6040815260006120986040830185611ec5565b90508260208301529392505050565b600181811c908216806120bb57607f821691505b6020821081036120db57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561217657600081815260208120601f850160051c810160208610156121535750805b601f850160051c820191505b818110156121725782815560010161215f565b5050505b505050565b815167ffffffffffffffff81111561219557612195611cdb565b6121a9816121a384546120a7565b8461212c565b602080601f8311600181146121de57600084156121c65750858301515b600019600386901b1c1916600185901b178555612172565b600085815260208120601f198616915b8281101561220d578886015182559484019460019091019084016121ee565b508582101561222b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a264697066735822122016eba4f42922b0e78ee48f9b251b72abb1d5d65c003e2ebbfc2f7e71afc915f564736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
