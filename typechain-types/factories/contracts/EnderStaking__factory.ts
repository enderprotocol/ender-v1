/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rebaseRefractionReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRebaseReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebaseRefractionReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061222f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80635d7fbcb511610104578063adb3791c116100a2578063e29cf50c11610071578063e29cf50c146103ea578063e806d593146103fe578063f2fde38b14610407578063f8c8765e1461041a57600080fd5b8063adb3791c146103a8578063b8c0a3a1146103b1578063bf4afb1e146103c4578063d8811d13146103d757600080fd5b8063715018a6116100de578063715018a61461036157806384b0196e146103695780638da5cb5b1461038457806399940ece1461039557600080fd5b80635d7fbcb514610327578063611b40951461033a57806370db69021461034e57600080fd5b80632e17de781161017c578063426697cf1161014b578063426697cf146102c957806353cd4c3f146102dc578063596e92f2146103005780635d427a9a1461031357600080fd5b80632e17de781461028757806330d616f41461029a57806336163b04146102ad57806338642973146102b657600080fd5b806317bb32e3116101b857806317bb32e3146102235780631ff283761461024e578063238ac933146102615780632bc19cf61461027457600080fd5b806303360eb4146101df578063088da694146101f45780630b19b1a614610210575b600080fd5b6101f26101ed366004611c05565b61042d565b005b6101fd609b5481565b6040519081526020015b60405180910390f35b6101f261021e366004611c22565b61047e565b609f54610236906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6101f261025c366004611d07565b6104e3565b609d54610236906001600160a01b031681565b6101fd610282366004611c22565b61091f565b6101f2610295366004611c22565b610959565b6101f26102a8366004611c05565b610b9e565b6101fd60995481565b6101f26102c4366004611de0565b610bef565b60a154610236906001600160a01b031681565b60a2546102f090600160a81b900460ff1681565b6040519015158152602001610207565b6101f261030e366004611c05565b610c6c565b60a2546102f090600160b01b900460ff1681565b60a054610236906001600160a01b031681565b60a2546102f090600160a01b900460ff1681565b6101f261035c366004611dfb565b610cbd565b6101f2610dea565b610371610dfe565b6040516102079796959493929190611e6b565b6067546001600160a01b0316610236565b60a254610236906001600160a01b031681565b6101fd609a5481565b6101f26103bf366004611de0565b610ea1565b609e54610236906001600160a01b031681565b6101f26103e5366004611c05565b6110c9565b60a2546102f090600160b81b900460ff1681565b6101fd609c5481565b6101f2610415366004611de0565b61111a565b6101f2610428366004611f01565b611193565b61043561134c565b60a2805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b61048661134c565b806000036104a75760405163162908e360e11b815260040160405180910390fd5b60998190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b60a254600160a81b900460ff16151560011461051257604051631eb49d6d60e11b815260040160405180910390fd5b60a254600160b81b900460ff16151560011461054157604051631eb49d6d60e11b815260040160405180910390fd5b61056e6040518060400160405280600c81526020016b496e73696465205374616b6560a01b8152506113a6565b8160000361058f5760405163162908e360e11b815260040160405180910390fd5b60a254600160a01b900460ff16156105f65760006105ac826113e9565b609d549091506001600160a01b0380831691161415806105d6575081516001600160a01b03163314155b156105f457604051630b094f2760e31b815260040160405180910390fd5b505b61062c60405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b8152508361140c565b609e546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190611f55565b6000036107c45760006106aa8361091f565b90506106de6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b8152508261140c565b609f546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b5050609e546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190611f6e565b50506108e5565b609e546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f9190611f6e565b50600061084b8361091f565b905061087f6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b8152508261140c565b609f546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b50505050505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000609a5460000361092f575090565b609a5461094483678ac7230489e80000611f8b565b61094e9190611fb0565b92915050565b919050565b60a254600160b01b900460ff16151560011461098857604051631eb49d6d60e11b815260040160405180910390fd5b60a254600160b81b900460ff1615156001146109b757604051631eb49d6d60e11b815260040160405180910390fd5b806000036109d85760405163162908e360e11b815260040160405180910390fd5b609f546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611f55565b1015610a635760405163162908e360e11b815260040160405180910390fd5b6000610a6e82611451565b9050610a926040518060600160405280602681526020016121b2602691398261140c565b609e5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b079190611f6e565b50609f54604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b5457600080fd5b505af1158015610b68573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc9150602001610913565b610ba661134c565b60a2805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610bf761134c565b6001600160a01b038116610c1e5760405163d92e233d60e01b815260040160405180910390fd5b609d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104d8565b610c7461134c565b60a2805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610cc561134c565b6001600160a01b038216610cec5760405163d92e233d60e01b815260040160405180910390fd5b80600103610d145760a180546001600160a01b0319166001600160a01b038416179055610db0565b80600203610d3c5760a080546001600160a01b0319166001600160a01b038416179055610db0565b80600303610d6457609e80546001600160a01b0319166001600160a01b038416179055610db0565b80600403610d8c57609f80546001600160a01b0319166001600160a01b038416179055610db0565b80600503610db05760a280546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610df261134c565b610dfc600061149e565b565b6000606080600080600060606001546000801b148015610e1e5750600254155b610e675760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610e6f6114f0565b610e77611582565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60a2546001600160a01b03828116911614610ecf57604051631eb49d6d60e11b815260040160405180910390fd5b60a05460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f409190611f55565b609c819055905080156110bd57606460995482610f5d9190611f8b565b610f679190611fb0565b609b81905550610f916040518060600160405280602281526020016121d860229139609b5461140c565b6000610f9e609b5461091f565b609f5460a1546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b158015610ff057600080fd5b505af1158015611004573d6000803e3d6000fd5b5050609e546040516340c10f1960e01b8152306004820152602481018690526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561105457600080fd5b505af1158015611068573d6000803e3d6000fd5b5050609b5460408051868152602081019290925281018490526001600160a01b03861692507fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c915060600160405180910390a2505b6110c5611591565b5050565b6110d161134c565b60a2805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b61112261134c565b6001600160a01b0381166111875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e5e565b6111908161149e565b50565b600054610100900460ff16158080156111b35750600054600160ff909116105b806111cd5750303b1580156111cd575060005460ff166001145b6112305760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e5e565b6000805460ff191660011790558015611253576000805461ff0019166101001790555b61125b6116bf565b6112a56040518060400160405280600f81526020016e1cdd185ada5b99d0dbdb9d1c9858dd608a1b815250604051806040016040528060018152602001603160f81b8152506116ee565b609d80546001600160a01b0319166001600160a01b03841617905560a2805463ffffffff60a01b1916630101010160a01b1790556112e4856003610cbd565b6112ef846004610cbd565b6112fa836005610cbd565b600a6099558015611345576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6067546001600160a01b03163314610dfc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e5e565b611190816040516024016113ba9190611fd2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261171f565b6000806113f583611728565b90506114058184604001516117a6565b9392505050565b6110c58282604051602401611422929190611fe5565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261171f565b60006114876040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250609a5461140c565b678ac7230489e80000609a54836109449190611f8b565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600380546114ff90612007565b80601f016020809104026020016040519081016040528092919081815260200182805461152b90612007565b80156115785780601f1061154d57610100808354040283529160200191611578565b820191906000526020600020905b81548152906001019060200180831161155b57829003601f168201915b5050505050905090565b6060600480546114ff90612007565b609e546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190611f55565b90506000609f60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116799190611f55565b9050811580611686575080155b1561169b57678ac7230489e80000609a555050565b806116ae83678ac7230489e80000611f8b565b6116b89190611fb0565b609a555050565b600054610100900460ff166116e65760405162461bcd60e51b8152600401610e5e90612041565b610dfc6117ca565b600054610100900460ff166117155760405162461bcd60e51b8152600401610e5e90612041565b6110c582826117fa565b61119081611849565b600061094e7f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de3471670836000015184602001518051906020012060405160200161178b939291909283526001600160a01b03919091166020830152604082015260600190565b6040516020818303038152906040528051906020012061186a565b60008060006117b58585611897565b915091506117c2816118dc565b509392505050565b600054610100900460ff166117f15760405162461bcd60e51b8152600401610e5e90612041565b610dfc3361149e565b600054610100900460ff166118215760405162461bcd60e51b8152600401610e5e90612041565b600361182d83826120db565b50600461183a82826120db565b50506000600181905560025550565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600061094e611877611a26565b8360405161190160f01b8152600281019290925260228201526042902090565b60008082516041036118cd5760208301516040840151606085015160001a6118c187828585611a35565b945094505050506118d5565b506000905060025b9250929050565b60008160048111156118f0576118f061219b565b036118f85750565b600181600481111561190c5761190c61219b565b036119595760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610e5e565b600281600481111561196d5761196d61219b565b036119ba5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610e5e565b60038160048111156119ce576119ce61219b565b036111905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610e5e565b6000611a30611af9565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a6c5750600090506003611af0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ac0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ae957600060019250925050611af0565b9150600090505b94509492505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b24611b6d565b611b2c611bc6565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080611b786114f0565b805190915015611b8f578051602090910120919050565b6001548015611b9e5792915050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709250505090565b600080611bd1611582565b805190915015611be8578051602090910120919050565b6002548015611b9e5792915050565b801515811461119057600080fd5b600060208284031215611c1757600080fd5b813561140581611bf7565b600060208284031215611c3457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c7457611c74611c3b565b60405290565b80356001600160a01b038116811461095457600080fd5b600067ffffffffffffffff80841115611cac57611cac611c3b565b604051601f8501601f19908116603f01168101908282118183101715611cd457611cd4611c3b565b81604052809350858152868686011115611ced57600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d1a57600080fd5b82359150602083013567ffffffffffffffff80821115611d3957600080fd5b9084019060608287031215611d4d57600080fd5b611d55611c51565b611d5e83611c7a565b8152602083013582811115611d7257600080fd5b8301601f81018813611d8357600080fd5b611d9288823560208401611c91565b602083015250604083013582811115611daa57600080fd5b80840193505086601f840112611dbf57600080fd5b611dce87843560208601611c91565b60408201528093505050509250929050565b600060208284031215611df257600080fd5b61140582611c7a565b60008060408385031215611e0e57600080fd5b611e1783611c7a565b946020939093013593505050565b6000815180845260005b81811015611e4b57602081850181015186830182015201611e2f565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611e8b60e084018a611e25565b8381036040850152611e9d818a611e25565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611eef57835183529284019291840191600101611ed3565b50909c9b505050505050505050505050565b60008060008060808587031215611f1757600080fd5b611f2085611c7a565b9350611f2e60208601611c7a565b9250611f3c60408601611c7a565b9150611f4a60608601611c7a565b905092959194509250565b600060208284031215611f6757600080fd5b5051919050565b600060208284031215611f8057600080fd5b815161140581611bf7565b808202811582820484141761094e57634e487b7160e01b600052601160045260246000fd5b600082611fcd57634e487b7160e01b600052601260045260246000fd5b500490565b6020815260006114056020830184611e25565b604081526000611ff86040830185611e25565b90508260208301529392505050565b600181811c9082168061201b57607f821691505b60208210810361203b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f8211156120d657600081815260208120601f850160051c810160208610156120b35750805b601f850160051c820191505b818110156120d2578281556001016120bf565b5050505b505050565b815167ffffffffffffffff8111156120f5576120f5611c3b565b612109816121038454612007565b8461208c565b602080601f83116001811461213e57600084156121265750858301515b600019600386901b1c1916600185901b1785556120d2565b600085815260208120601f198616915b8281101561216d5788860151825594840194600190910190840161214e565b508582101561218b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d205265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a2646970667358221220fdf1b08d7307ab43c6d1b505079ddf16a46da28659df5cc256e52c226ed8f27e64736f6c63430008120033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
