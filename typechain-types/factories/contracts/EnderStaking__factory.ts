/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EnderStaking,
  EnderStakingInterface,
} from "../../contracts/EnderStaking";

const _abi = [
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "addrType",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rebaseRefractionReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendTokens",
        type: "uint256",
      },
    ],
    name: "EpochStakingReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "PercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "action",
        type: "bool",
      },
    ],
    name: "WhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "newSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingContractPauseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "stakingEnableSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "isEnable",
        type: "bool",
      },
    ],
    name: "unstakeEnableSet",
    type: "event",
  },
  {
    inputs: [],
    name: "bondRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endAmount",
        type: "uint256",
      },
    ],
    name: "calculateSEndTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "sEndTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enderTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "epochStakingReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_end",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sEnd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRebaseReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebaseRefractionReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebasingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sEndToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setBondRewardPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setStakingPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "setUnstakeEnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setsigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EnderStaking.signData",
        name: "userSign",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContractPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_action",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061221f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80635d7fbcb511610104578063adb3791c116100a2578063e29cf50c11610071578063e29cf50c14610409578063e806d5931461041d578063f2fde38b14610426578063f8c8765e1461043957600080fd5b8063adb3791c146103c7578063b8c0a3a1146103d0578063bf4afb1e146103e3578063d8811d13146103f657600080fd5b8063715018a6116100de578063715018a61461036157806384b0196e146103695780638da5cb5b1461038457806399940ece146103b457600080fd5b80635d7fbcb514610327578063611b40951461033a57806370db69021461034e57600080fd5b80632e17de781161017c578063426697cf1161014b578063426697cf146102c957806353cd4c3f146102dc578063596e92f2146103005780635d427a9a1461031357600080fd5b80632e17de781461028757806330d616f41461029a57806336163b04146102ad57806338642973146102b657600080fd5b806317bb32e3116101b857806317bb32e3146102235780631ff283761461024e578063238ac933146102615780632bc19cf61461027457600080fd5b806303360eb4146101df578063088da694146101f45780630b19b1a614610210575b600080fd5b6101f26101ed366004611c20565b61044c565b005b6101fd60025481565b6040519081526020015b60405180910390f35b6101f261021e366004611c3d565b61049d565b600654610236906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6101f261025c366004611d22565b610502565b600454610236906001600160a01b031681565b6101fd610282366004611c3d565b610946565b6101f2610295366004611c3d565b610980565b6101f26102a8366004611c20565b610bc5565b6101fd60005481565b6101f26102c4366004611dfb565b610c16565b600854610236906001600160a01b031681565b6009546102f090600160a81b900460ff1681565b6040519015158152602001610207565b6101f261030e366004611c20565b610c93565b6009546102f090600160b01b900460ff1681565b600754610236906001600160a01b031681565b6009546102f090600160a01b900460ff1681565b6101f261035c366004611e16565b610ce4565b6101f2610e11565b610371610e25565b6040516102079796959493929190611e86565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610236565b600954610236906001600160a01b031681565b6101fd60015481565b6101f26103de366004611dfb565b610ed6565b600554610236906001600160a01b031681565b6101f2610404366004611c20565b6110fe565b6009546102f090600160b81b900460ff1681565b6101fd60035481565b6101f2610434366004611dfb565b61114f565b6101f2610447366004611f1c565b61118d565b610454611344565b6009805460ff60b81b1916600160b81b831515908102919091179091556040517f2958f77a8b908490871750adee8b93fa8d29451e5da363d7666e0f4c31b7222d90600090a250565b6104a5611344565b806000036104c65760405163162908e360e11b815260040160405180910390fd5b60008190556040518181527fe0e6a36f218809ddf2501604b5999d92df38d34801ea531c19ef6105292bc074906020015b60405180910390a150565b600954600160a81b900460ff16151560011461053157604051631eb49d6d60e11b815260040160405180910390fd5b600954600160b81b900460ff16151560011461056057604051631eb49d6d60e11b815260040160405180910390fd5b61058d6040518060400160405280600c81526020016b496e73696465205374616b6560a01b81525061139f565b816000036105ae5760405163162908e360e11b815260040160405180910390fd5b600954600160a01b900460ff16156106155760006105cb826113e2565b6004549091506001600160a01b0380831691161415806105f5575081516001600160a01b03163314155b1561061357604051630b094f2760e31b815260040160405180910390fd5b505b61064b60405180604001604052806015815260200173522b732103a37b5b2b7103232b837b9b4ba1d169605d1b81525083611405565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190611f70565b6000036107eb5760006106c983610946565b90506106fd6040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611405565b6006546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b50506005546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af11580156107b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dc9190611f89565b506107e561144a565b5061090c565b6005546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190611f89565b50600061087283610946565b90506108a66040518060400160405280601081526020016f02932b1b2b4b83a103a37b5b2b71d16960851b81525082611405565b6006546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b50505050505b60405182815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020015b60405180910390a25050565b6000600154600003610956575090565b60015461096b83670de0b6b3a7640000611fa6565b6109759190611fcb565b92915050565b919050565b600954600160b01b900460ff1615156001146109af57604051631eb49d6d60e11b815260040160405180910390fd5b600954600160b81b900460ff1615156001146109de57604051631eb49d6d60e11b815260040160405180910390fd5b806000036109ff5760405163162908e360e11b815260040160405180910390fd5b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190611f70565b1015610a8a5760405163162908e360e11b815260040160405180910390fd5b6000610a9582611578565b9050610ab96040518060600160405280602681526020016121826026913982611405565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e9190611f89565b50600654604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b50506040518481523392507fd93938149a1a7de7095bbc9fa7876d68376ae614031ae2687afe592d8aa69dcc915060200161093a565b610bcd611344565b6009805460ff60a81b1916600160a81b831515908102919091179091556040517f9077ec5e7e7955871b0e449054065ef86ffa98dca861c1f0ddaf73d47008a79090600090a250565b610c1e611344565b6001600160a01b038116610c455760405163d92e233d60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f3dc2a8437aef0e8d2839b5e75d0d93e6c7f43b3acf5d2ef2db79beb54cb47b3d906020016104f7565b610c9b611344565b6009805460ff60b01b1916600160b01b831515908102919091179091556040517fd3902a813e75c5b85ae16a1e5087a50a1e2b60bf88bcbbca4b3d38df3301cef990600090a250565b610cec611344565b6001600160a01b038216610d135760405163d92e233d60e01b815260040160405180910390fd5b80600103610d3b57600880546001600160a01b0319166001600160a01b038416179055610dd7565b80600203610d6357600780546001600160a01b0319166001600160a01b038416179055610dd7565b80600303610d8b57600580546001600160a01b0319166001600160a01b038416179055610dd7565b80600403610db357600680546001600160a01b0319166001600160a01b038416179055610dd7565b80600503610dd757600980546001600160a01b0319166001600160a01b0384161790555b60405181906001600160a01b038416907f95306b5a2fd59205b962127979145cbea114f061c770ddb77ec4b9a8c41738e290600090a35050565b610e19611344565b610e2360006115c5565b565b600060608082808083816000805160206121a88339815191528054909150158015610e5257506001810154155b610e9b5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610ea3611636565b610eab6116f9565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b6009546001600160a01b03828116911614610f0457604051631eb49d6d60e11b815260040160405180910390fd5b60075460405163b224d54360e01b81526001600160a01b038381166004830152600092169063b224d543906024016020604051808303816000875af1158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f759190611f70565b6003819055905080156110f257606460005482610f929190611fa6565b610f9c9190611fcb565b600281905550610fc66040518060600160405280602281526020016121c860229139600254611405565b6000610fd3600254610946565b6006546008546040516340c10f1960e01b81526001600160a01b0391821660048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801561102557600080fd5b505af1158015611039573d6000803e3d6000fd5b50506005546040516340c10f1960e01b8152306004820152602481018690526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561108957600080fd5b505af115801561109d573d6000803e3d6000fd5b505060025460408051868152602081019290925281018490526001600160a01b03861692507fe0387ec6ca591cf1cae66c61621f7596433cfa12ee784533f7a332da3ef5671c915060600160405180910390a2505b6110fa61144a565b5050565b611106611344565b6009805460ff60a01b1916600160a01b831515908102919091179091556040517f0d50ffb8142306f44502939eeb37f97727c319ac3cd8ec196ca88f3338eca9af90600090a250565b611157611344565b6001600160a01b03811661118157604051631e4fbdf760e01b815260006004820152602401610e92565b61118a816115c5565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156111d35750825b905060008267ffffffffffffffff1660011480156111f05750303b155b9050811580156111fe575080155b1561121c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561124657845460ff60401b1916600160401b1785555b61124f33611738565b6112996040518060400160405280600f81526020016e1cdd185ada5b99d0dbdb9d1c9858dd608a1b815250604051806040016040528060018152602001603160f81b815250611749565b600480546001600160a01b0319166001600160a01b0388161790556009805463ffffffff60a01b1916630101010160a01b1790556112d8896003610ce4565b6112e3886004610ce4565b6112ee876005610ce4565b600a600055831561133957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b336113767f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610e235760405163118cdaa760e01b8152336004820152602401610e92565b61118a816040516024016113b39190611fed565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261175b565b6000806113ee83611764565b90506113fe8184604001516117e2565b9392505050565b6110fa828260405160240161141b929190612000565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261175b565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b79190611f70565b90506000600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561150e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115329190611f70565b905081158061153f575080155b1561155457670de0b6b3a76400006001555050565b8061156783670de0b6b3a7640000611fa6565b6115719190611fcb565b6001555050565b60006115ae6040518060400160405280601081526020016f03932b130b9b4b733a4b73232bc1d16960851b815250600154611405565b670de0b6b3a76400006001548361096b9190611fa6565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060916000805160206121a88339815191529161167590612022565b80601f01602080910402602001604051908101604052809291908181526020018280546116a190612022565b80156116ee5780601f106116c3576101008083540402835291602001916116ee565b820191906000526020600020905b8154815290600101906020018083116116d157829003601f168201915b505050505091505090565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10380546060916000805160206121a88339815191529161167590612022565b61174061180c565b61118a81611855565b61175161180c565b6110fa828261185d565b61118a816118be565b60006109757f76bb474a7a9de6f07f692a2e39e53c610f28bd5be9be96837a6a274de347167083600001518460200151805190602001206040516020016117c7939291909283526001600160a01b03919091166020830152604082015260600190565b604051602081830303815290604052805190602001206118df565b6000806000806117f2868661190c565b9250925092506118028282611959565b5090949350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610e2357604051631afcd79f60e31b815260040160405180910390fd5b61115761180c565b61186561180c565b6000805160206121a88339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261189f84826120ab565b50600381016118ae83826120ab565b5060008082556001909101555050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60006109756118ec611a12565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600083516041036119465760208401516040850151606086015160001a61193888828585611a21565b955095509550505050611952565b50508151600091506002905b9250925092565b600082600381111561196d5761196d61216b565b03611976575050565b600182600381111561198a5761198a61216b565b036119a85760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156119bc576119bc61216b565b036119dd5760405163fce698f760e01b815260048101829052602401610e92565b60038260038111156119f1576119f161216b565b036110fa576040516335e2f38360e21b815260048101829052602401610e92565b6000611a1c611af0565b905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a5c5750600091506003905082611ae6565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611ab0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611adc57506000925060019150829050611ae6565b9250600091508190505b9450945094915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b1b611b64565b611b23611bce565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006000805160206121a883398151915281611b7e611636565b805190915015611b9657805160209091012092915050565b81548015611ba5579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60006000805160206121a883398151915281611be86116f9565b805190915015611c0057805160209091012092915050565b60018201548015611ba5579392505050565b801515811461118a57600080fd5b600060208284031215611c3257600080fd5b81356113fe81611c12565b600060208284031215611c4f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c8f57611c8f611c56565b60405290565b80356001600160a01b038116811461097b57600080fd5b600067ffffffffffffffff80841115611cc757611cc7611c56565b604051601f8501601f19908116603f01168101908282118183101715611cef57611cef611c56565b81604052809350858152868686011115611d0857600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d3557600080fd5b82359150602083013567ffffffffffffffff80821115611d5457600080fd5b9084019060608287031215611d6857600080fd5b611d70611c6c565b611d7983611c95565b8152602083013582811115611d8d57600080fd5b8301601f81018813611d9e57600080fd5b611dad88823560208401611cac565b602083015250604083013582811115611dc557600080fd5b80840193505086601f840112611dda57600080fd5b611de987843560208601611cac565b60408201528093505050509250929050565b600060208284031215611e0d57600080fd5b6113fe82611c95565b60008060408385031215611e2957600080fd5b611e3283611c95565b946020939093013593505050565b6000815180845260005b81811015611e6657602081850181015186830182015201611e4a565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152611ea660e084018a611e40565b8381036040850152611eb8818a611e40565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611f0a57835183529284019291840191600101611eee565b50909c9b505050505050505050505050565b60008060008060808587031215611f3257600080fd5b611f3b85611c95565b9350611f4960208601611c95565b9250611f5760408601611c95565b9150611f6560608601611c95565b905092959194509250565b600060208284031215611f8257600080fd5b5051919050565b600060208284031215611f9b57600080fd5b81516113fe81611c12565b808202811582820484141761097557634e487b7160e01b600052601160045260246000fd5b600082611fe857634e487b7160e01b600052601260045260246000fd5b500490565b6020815260006113fe6020830184611e40565b6040815260006120136040830185611e40565b90508260208301529392505050565b600181811c9082168061203657607f821691505b60208210810361205657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156120a657600081815260208120601f850160051c810160208610156120835750805b601f850160051c820191505b818110156120a25782815560010161208f565b5050505b505050565b815167ffffffffffffffff8111156120c5576120c5611c56565b6120d9816120d38454612022565b8461205c565b602080601f83116001811461210e57600084156120f65750858301515b600019600386901b1c1916600185901b1785556120a2565b600085815260208120601f198616915b8281101561213d5788860151825594840194600190910190840161211e565b508582101561215b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe0a5769746872617720616d6f756e74206f66207374616b696e6720636f6e74726163743a2d20a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005265626173652072657761726420666f7220626f6e6420686f6c64657227733a2d20a26469706673582212201898533a6292dd4744a7a9632e40d138391e837b3e7e70d02de89fb7f2a50f8064736f6c63430008140033";

type EnderStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnderStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnderStaking__factory extends ContractFactory {
  constructor(...args: EnderStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnderStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnderStaking__factory {
    return super.connect(runner) as EnderStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnderStakingInterface {
    return new Interface(_abi) as EnderStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnderStaking {
    return new Contract(address, _abi, runner) as unknown as EnderStaking;
  }
}
